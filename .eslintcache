[{"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/index.js":"1","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/App.js":"2","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/index.js":"3","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/layouts/PrivateRoute.js":"4","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/layouts/Footer.js":"5","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/layouts/AuthRoute.js":"6","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/pages/Error400.js":"7","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/contexts/AuthContext.js":"8","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/pages/Error403.js":"9","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/pages/Error500.js":"10","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/pages/Error404.js":"11","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/pages/Error503.js":"12","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/pages/Widget.js":"13","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Auth/Registration.js":"14","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Auth/Login.js":"15","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Auth/ForgotPassword.js":"16","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Auth/LockScreen.js":"17","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Dashboard/Home.js":"18","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Dashboard/Campaign.js":"19","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Dashboard/Spendings.js":"20","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Dashboard/NewCompaign.js":"21","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Dashboard/SocialNetworkCampaign.js":"22","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Dashboard/Analytics.js":"23","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Orders/OrdersList.js":"24","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Customers/CustomerForm.js":"25","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Customers/CustomerList.js":"26","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Orders/CustomerOrder.js":"27","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Products/ProductsList.js":"28","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Riders/RidersList.js":"29","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Profile/Profile.js":"30","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/bootstrap/Alert.js":"31","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/bootstrap/Accordion.js":"32","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/bootstrap/Badge.js":"33","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/bootstrap/ButtonGroup.js":"34","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/bootstrap/Button.js":"35","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/bootstrap/Modal.js":"36","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/bootstrap/MediaObject.js":"37","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/bootstrap/Cards.js":"38","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/bootstrap/Carousel.js":"39","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/bootstrap/ListGroup.js":"40","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/bootstrap/PopOver.js":"41","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/bootstrap/Pagination.js":"42","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/bootstrap/ProgressBar.js":"43","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/bootstrap/Grid.js":"44","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/bootstrap/DropDown.js":"45","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/table/DataTable.js":"46","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/bootstrap/Typography.js":"47","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/bootstrap/Tab.js":"48","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Settings/Settings.js":"49","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/apexcharts/ApexChart.js":"50","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/table/BootstrapTable.js":"51","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/AppsMenu/Calendar/Calendar.js":"52","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/AppsMenu/Shop/ProductGrid/ProductGrid.js":"53","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/AppsMenu/AppProfile/AppProfile.js":"54","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/AppsMenu/Shop/ProductGrid/ProductDetail.js":"55","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/AppsMenu/AppProfile/PostDetails.js":"56","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/AppsMenu/Shop/ProductList/ProductList.js":"57","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/AppsMenu/Shop/ProductOrder.js":"58","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/AppsMenu/Email/Compose/Compose.js":"59","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/AppsMenu/Shop/Checkout/Checkout.js":"60","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/AppsMenu/Shop/Invoice/Invoice.js":"61","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Forms/Wizard/Wizard.js":"62","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/AppsMenu/Shop/Customers/Customers.js":"63","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/AppsMenu/Email/Inbox/Inbox.js":"64","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/AppsMenu/Email/Read/Read.js":"65","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Forms/Pickers/Pickers.js":"66","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Forms/Summernote/SummerNote.js":"67","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/PluginsMenu/Select2/Select2.js":"68","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Forms/Element/Element.js":"69","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/PluginsMenu/Noui Slider/MainNouiSlider.js":"70","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/PluginsMenu/Nestable/Nestable.js":"71","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Forms/jQueryValidation/jQueryValidation.js":"72","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/PluginsMenu/Sweet Alert/SweetAlert.js":"73","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/PluginsMenu/Toastr/Toastr.js":"74","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/PluginsMenu/Jqv Map/JqvMap.js":"75","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/layouts/nav/index.js":"76","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/apexcharts/index.js":"77","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/rechart/index.js":"78","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/Chartjs/index.js":"79","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/Sparkline/index.js":"80","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/firebase.js":"81","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/layouts/PageTitle.js":"82","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/PluginsMenu/Noui Slider/SlideDragable.js":"83","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/PluginsMenu/Nestable/NTable.js":"84","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/PluginsMenu/Noui Slider/Disabling.js":"85","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/PluginsMenu/Nestable/NTable2.js":"86","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/PluginsMenu/Noui Slider/ClickablePips.js":"87","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/PluginsMenu/Noui Slider/SnappingToValues.js":"88","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/PluginsMenu/Noui Slider/NouiColor.js":"89","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/PluginsMenu/Noui Slider/Toggle.js":"90","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/PluginsMenu/Noui Slider/Nonlinearslider.js":"91","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/PluginsMenu/Select2/MultiSelect.js":"92","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/PluginsMenu/Select2/CustomeSelete.js":"93","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/PluginsMenu/Select2/Disabling.js":"94","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Forms/Summernote/Rte.js":"95","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/PluginsMenu/Select2/CustomGroup.js":"96","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Forms/Pickers/LinearGradientPicker.js":"97","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Forms/Pickers/MetarialTime.js":"98","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Forms/Pickers/MetarialDateAndTime.js":"99","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Forms/Pickers/MetarialDate.js":"100","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Forms/Pickers/Color.js":"101","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/AppsMenu/Email/Inbox/InboxMessage.js":"102","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Forms/Wizard/StepFour.js":"103","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Forms/Wizard/StepThree.js":"104","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Forms/Wizard/StepOne.js":"105","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Forms/Wizard/StepTwo.js":"106","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/chartist/index.jsx":"107","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/AppsMenu/Email/Compose/DropFile.js":"108","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/apexcharts/Pie.js":"109","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/apexcharts/Line4.js":"110","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/Chartjs/dualLine2.js":"111","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/Chartjs/polar.js":"112","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/PluginsMenu/Select2/data.js":"113","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/Chartjs/radar.js":"114","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/Chartjs/gradinetArea.js":"115","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/Chartjs/basicArea.js":"116","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/Chartjs/dualArea.js":"117","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/Chartjs/dualLine.js":"118","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/Chartjs/line1.js":"119","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/Chartjs/bar6.js":"120","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/Chartjs/bar5.js":"121","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/Chartjs/bar1.js":"122","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/Chartjs/pie.js":"123","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/rechart/TinyLineChart.js":"124","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/rechart/PositiveNagative2.js":"125","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/rechart/LegendEffectOpacity.js":"126","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/apexcharts/Line3.js":"127","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/rechart/BarChartNoPadding.js":"128","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/apexcharts/Line5.js":"129","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/apexcharts/RadialBar.js":"130","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/apexcharts/Bar2.js":"131","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/apexcharts/Bar3.js":"132","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/layouts/nav/Header.js":"133","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/layouts/nav/SideBar.js":"134","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/layouts/nav/NavHeader.js":"135","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/AppsMenu/Shop/ProductList/SingleProductList.js":"136","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/chartist/donut.jsx":"137","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/chartist/polar.jsx":"138","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/chartist/area.jsx":"139","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/chartist/line.jsx":"140","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/chartist/bar.jsx":"141","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/AppsMenu/Calendar/EventCalendar.js":"142","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/AppsMenu/Shop/ProductGrid/Products.js":"143","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Riders/RidersForm.js":"144","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/AppsMenu/Shop/productData/index.js":"145","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/layouts/ProfileSidebar.js":"146","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/AppsMenu/Shop/productData/allProducts.js":"147","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/AppsMenu/Shop/productData/ProductStar.js":"148","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/table/PatientTable.js":"149","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/table/FeesCollection.js":"150","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/table/ProfileDatatable.js":"151","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/table/SimpleDataTable.js":"152","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/table/BasicDatatable.js":"153","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/bootstrap/alertData.js":"154","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Products/ProductsForm.js":"155","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Orders/OrdersForm.js":"156","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Customers/AddressModal.js":"157","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/apexcharts/RadialBar3.js":"158","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/apexcharts/RadialBar2.js":"159","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/apexcharts/NagetivePositive3.js":"160","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/Chartjs/line8.js":"161","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/Chartjs/donught2.js":"162","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Dashboard/SnappingToValues.js":"163","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Dashboard/SpendingDataTable.js":"164","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/Chartjs/line7.js":"165","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/Chartjs/bar3.js":"166","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/Chartjs/realtime.js":"167","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/Chartjs/bar4.js":"168","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/rechart/PositiveNagative.js":"169","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/Chartjs/bar2.js":"170","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/Chartjs/line6.js":"171","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/Chartjs/line4.js":"172","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/table/tableData.js":"173","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/Chartjs/line3.js":"174","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/chartflot/Bar.js":"175","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/PluginsMenu/Lightgallery/Lightgallery.js":"176","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/contexts/DataContext.js":"177","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Orders/OrderReceipt.js":"178","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/RiderRequests/RiderRequestList.js":"179","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/RiderRequests/RiderRequestForm.js":"180","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Settings/CategoryList.js":"181","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Settings/CategoryForm.js":"182","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Settings/UnitList.js":"183","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Settings/UnitForm.js":"184","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Settings/DeliveryFeeList.js":"185","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Settings/DeliveryFeeForm.js":"186","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Settings/DeliveryLocationList.js":"187","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Settings/DeliveryLocationForm.js":"188"},{"size":320,"mtime":1629227223485,"results":"189","hashOfConfig":"190"},{"size":1507,"mtime":1629227628339,"results":"191","hashOfConfig":"190"},{"size":10946,"mtime":1635025672206,"results":"192","hashOfConfig":"190"},{"size":1347,"mtime":1631083962200,"results":"193","hashOfConfig":"190"},{"size":471,"mtime":1627889302968,"results":"194","hashOfConfig":"190"},{"size":702,"mtime":1628984733988,"results":"195","hashOfConfig":"190"},{"size":1041,"mtime":1627886643825,"results":"196","hashOfConfig":"190"},{"size":1088,"mtime":1628966814540,"results":"197","hashOfConfig":"190"},{"size":1052,"mtime":1627886643825,"results":"198","hashOfConfig":"190"},{"size":1054,"mtime":1627886643825,"results":"199","hashOfConfig":"190"},{"size":1170,"mtime":1627886643825,"results":"200","hashOfConfig":"190"},{"size":1049,"mtime":1627886643825,"results":"201","hashOfConfig":"190"},{"size":236429,"mtime":1628574549810,"results":"202","hashOfConfig":"190"},{"size":5931,"mtime":1628982917805,"results":"203","hashOfConfig":"190"},{"size":5976,"mtime":1628967161023,"results":"204","hashOfConfig":"190"},{"size":2038,"mtime":1628791755332,"results":"205","hashOfConfig":"190"},{"size":2140,"mtime":1628791755291,"results":"206","hashOfConfig":"190"},{"size":14772,"mtime":1634763186644,"results":"207","hashOfConfig":"190"},{"size":53331,"mtime":1627886643786,"results":"208","hashOfConfig":"190"},{"size":7709,"mtime":1627886643788,"results":"209","hashOfConfig":"190"},{"size":21664,"mtime":1627886643786,"results":"210","hashOfConfig":"190"},{"size":82765,"mtime":1627886643787,"results":"211","hashOfConfig":"190"},{"size":62671,"mtime":1627886643785,"results":"212","hashOfConfig":"190"},{"size":13320,"mtime":1635195945604,"results":"213","hashOfConfig":"190"},{"size":12538,"mtime":1635456795928,"results":"214","hashOfConfig":"190"},{"size":7523,"mtime":1635454182043,"results":"215","hashOfConfig":"190"},{"size":6260,"mtime":1632932004439,"results":"216","hashOfConfig":"190"},{"size":11334,"mtime":1635103005440,"results":"217","hashOfConfig":"190"},{"size":6345,"mtime":1634935057518,"results":"218","hashOfConfig":"190"},{"size":32289,"mtime":1629181165021,"results":"219","hashOfConfig":"190"},{"size":25582,"mtime":1627886643794,"results":"220","hashOfConfig":"190"},{"size":24269,"mtime":1627886643794,"results":"221","hashOfConfig":"190"},{"size":15135,"mtime":1627886643794,"results":"222","hashOfConfig":"190"},{"size":8794,"mtime":1627886643795,"results":"223","hashOfConfig":"190"},{"size":25908,"mtime":1627886643795,"results":"224","hashOfConfig":"190"},{"size":24157,"mtime":1627886643796,"results":"225","hashOfConfig":"190"},{"size":8906,"mtime":1627886643796,"results":"226","hashOfConfig":"190"},{"size":16188,"mtime":1627886643795,"results":"227","hashOfConfig":"190"},{"size":4772,"mtime":1627886643795,"results":"228","hashOfConfig":"190"},{"size":19521,"mtime":1627886643796,"results":"229","hashOfConfig":"190"},{"size":4069,"mtime":1627886643796,"results":"230","hashOfConfig":"190"},{"size":4322,"mtime":1627886643796,"results":"231","hashOfConfig":"190"},{"size":9520,"mtime":1627886643796,"results":"232","hashOfConfig":"190"},{"size":10028,"mtime":1627886643795,"results":"233","hashOfConfig":"190"},{"size":23438,"mtime":1627886643795,"results":"234","hashOfConfig":"190"},{"size":781,"mtime":1627886643822,"results":"235","hashOfConfig":"190"},{"size":15097,"mtime":1627886643797,"results":"236","hashOfConfig":"190"},{"size":10769,"mtime":1627886643796,"results":"237","hashOfConfig":"190"},{"size":2706,"mtime":1635096207140,"results":"238","hashOfConfig":"190"},{"size":2857,"mtime":1627886643801,"results":"239","hashOfConfig":"190"},{"size":55566,"mtime":1627886643822,"results":"240","hashOfConfig":"190"},{"size":333,"mtime":1627886643782,"results":"241","hashOfConfig":"190"},{"size":530,"mtime":1627886643784,"results":"242","hashOfConfig":"190"},{"size":53322,"mtime":1627886643781,"results":"243","hashOfConfig":"190"},{"size":10438,"mtime":1627886643784,"results":"244","hashOfConfig":"190"},{"size":32654,"mtime":1627886643781,"results":"245","hashOfConfig":"190"},{"size":548,"mtime":1627886643784,"results":"246","hashOfConfig":"190"},{"size":99520,"mtime":1627886643785,"results":"247","hashOfConfig":"190"},{"size":13871,"mtime":1627886643782,"results":"248","hashOfConfig":"190"},{"size":19723,"mtime":1627886643783,"results":"249","hashOfConfig":"190"},{"size":7236,"mtime":1627886643784,"results":"250","hashOfConfig":"190"},{"size":2065,"mtime":1628967827475,"results":"251","hashOfConfig":"190"},{"size":36013,"mtime":1627886643784,"results":"252","hashOfConfig":"190"},{"size":16593,"mtime":1627886643783,"results":"253","hashOfConfig":"190"},{"size":21826,"mtime":1627886643783,"results":"254","hashOfConfig":"190"},{"size":8516,"mtime":1627886643789,"results":"255","hashOfConfig":"190"},{"size":890,"mtime":1627886643790,"results":"256","hashOfConfig":"190"},{"size":37862,"mtime":1627886643793,"results":"257","hashOfConfig":"190"},{"size":78309,"mtime":1627886643788,"results":"258","hashOfConfig":"190"},{"size":8283,"mtime":1627886643792,"results":"259","hashOfConfig":"190"},{"size":2251,"mtime":1627886643791,"results":"260","hashOfConfig":"190"},{"size":25394,"mtime":1627886643790,"results":"261","hashOfConfig":"190"},{"size":13330,"mtime":1627886643794,"results":"262","hashOfConfig":"190"},{"size":12503,"mtime":1627886643794,"results":"263","hashOfConfig":"190"},{"size":1333,"mtime":1627886643791,"results":"264","hashOfConfig":"190"},{"size":831,"mtime":1629350615103,"results":"265","hashOfConfig":"190"},{"size":2787,"mtime":1627886643803,"results":"266","hashOfConfig":"190"},{"size":1800,"mtime":1627886643820,"results":"267","hashOfConfig":"190"},{"size":4481,"mtime":1627886643799,"results":"268","hashOfConfig":"190"},{"size":4634,"mtime":1627886643801,"results":"269","hashOfConfig":"190"},{"size":771,"mtime":1628792173983,"results":"270","hashOfConfig":"190"},{"size":535,"mtime":1627886643824,"results":"271","hashOfConfig":"190"},{"size":757,"mtime":1627886643792,"results":"272","hashOfConfig":"190"},{"size":1647,"mtime":1627886643791,"results":"273","hashOfConfig":"190"},{"size":1114,"mtime":1627886643792,"results":"274","hashOfConfig":"190"},{"size":1647,"mtime":1627886643791,"results":"275","hashOfConfig":"190"},{"size":901,"mtime":1627886643792,"results":"276","hashOfConfig":"190"},{"size":1362,"mtime":1627886643792,"results":"277","hashOfConfig":"190"},{"size":1288,"mtime":1627886643792,"results":"278","hashOfConfig":"190"},{"size":409,"mtime":1627886643793,"results":"279","hashOfConfig":"190"},{"size":1311,"mtime":1627886643792,"results":"280","hashOfConfig":"190"},{"size":997,"mtime":1627886643793,"results":"281","hashOfConfig":"190"},{"size":622,"mtime":1627886643793,"results":"282","hashOfConfig":"190"},{"size":700,"mtime":1627886643793,"results":"283","hashOfConfig":"190"},{"size":1195,"mtime":1627886643789,"results":"284","hashOfConfig":"190"},{"size":561,"mtime":1627886643793,"results":"285","hashOfConfig":"190"},{"size":1293,"mtime":1627886643789,"results":"286","hashOfConfig":"190"},{"size":550,"mtime":1627886643789,"results":"287","hashOfConfig":"190"},{"size":589,"mtime":1627886643789,"results":"288","hashOfConfig":"190"},{"size":630,"mtime":1627886643789,"results":"289","hashOfConfig":"190"},{"size":369,"mtime":1627886643788,"results":"290","hashOfConfig":"190"},{"size":1290,"mtime":1627886643783,"results":"291","hashOfConfig":"190"},{"size":3952,"mtime":1627886643790,"results":"292","hashOfConfig":"190"},{"size":4498,"mtime":1627886643790,"results":"293","hashOfConfig":"190"},{"size":2404,"mtime":1627886643790,"results":"294","hashOfConfig":"190"},{"size":1978,"mtime":1627886643790,"results":"295","hashOfConfig":"190"},{"size":1626,"mtime":1627886643805,"results":"296","hashOfConfig":"190"},{"size":1391,"mtime":1627886643782,"results":"297","hashOfConfig":"190"},{"size":1699,"mtime":1627886643802,"results":"298","hashOfConfig":"190"},{"size":2341,"mtime":1627886643802,"results":"299","hashOfConfig":"190"},{"size":1742,"mtime":1627886643798,"results":"300","hashOfConfig":"190"},{"size":684,"mtime":1627886643800,"results":"301","hashOfConfig":"190"},{"size":4318,"mtime":1627886643794,"results":"302","hashOfConfig":"190"},{"size":1048,"mtime":1627886643800,"results":"303","hashOfConfig":"190"},{"size":1021,"mtime":1627886643799,"results":"304","hashOfConfig":"190"},{"size":1039,"mtime":1627886643798,"results":"305","hashOfConfig":"190"},{"size":1193,"mtime":1627886643798,"results":"306","hashOfConfig":"190"},{"size":1405,"mtime":1627886643798,"results":"307","hashOfConfig":"190"},{"size":1219,"mtime":1627886643799,"results":"308","hashOfConfig":"190"},{"size":1685,"mtime":1627886643798,"results":"309","hashOfConfig":"190"},{"size":1164,"mtime":1627886643797,"results":"310","hashOfConfig":"190"},{"size":1102,"mtime":1627886643797,"results":"311","hashOfConfig":"190"},{"size":1054,"mtime":1627886643800,"results":"312","hashOfConfig":"190"},{"size":1174,"mtime":1627886643820,"results":"313","hashOfConfig":"190"},{"size":1304,"mtime":1627886643820,"results":"314","hashOfConfig":"190"},{"size":1201,"mtime":1627886643820,"results":"315","hashOfConfig":"190"},{"size":1902,"mtime":1627886643802,"results":"316","hashOfConfig":"190"},{"size":1800,"mtime":1627886643819,"results":"317","hashOfConfig":"190"},{"size":3646,"mtime":1627886643802,"results":"318","hashOfConfig":"190"},{"size":1880,"mtime":1627886643803,"results":"319","hashOfConfig":"190"},{"size":1761,"mtime":1627886643801,"results":"320","hashOfConfig":"190"},{"size":1940,"mtime":1627886643801,"results":"321","hashOfConfig":"190"},{"size":14670,"mtime":1634754029486,"results":"322","hashOfConfig":"190"},{"size":4443,"mtime":1634753914578,"results":"323","hashOfConfig":"190"},{"size":1005,"mtime":1629355787861,"results":"324","hashOfConfig":"190"},{"size":2332,"mtime":1627886643784,"results":"325","hashOfConfig":"190"},{"size":426,"mtime":1627886643805,"results":"326","hashOfConfig":"190"},{"size":670,"mtime":1627886643806,"results":"327","hashOfConfig":"190"},{"size":567,"mtime":1627886643805,"results":"328","hashOfConfig":"190"},{"size":509,"mtime":1627886643806,"results":"329","hashOfConfig":"190"},{"size":810,"mtime":1627886643805,"results":"330","hashOfConfig":"190"},{"size":5235,"mtime":1627886643782,"results":"331","hashOfConfig":"190"},{"size":920,"mtime":1627886643784,"results":"332","hashOfConfig":"190"},{"size":8970,"mtime":1635103564608,"results":"333","hashOfConfig":"190"},{"size":291,"mtime":1627886643785,"results":"334","hashOfConfig":"190"},{"size":2593,"mtime":1628100603832,"results":"335","hashOfConfig":"190"},{"size":5019,"mtime":1627886643785,"results":"336","hashOfConfig":"190"},{"size":2488,"mtime":1627886643785,"results":"337","hashOfConfig":"190"},{"size":58924,"mtime":1627886643823,"results":"338","hashOfConfig":"190"},{"size":6703,"mtime":1627886643822,"results":"339","hashOfConfig":"190"},{"size":7772,"mtime":1627886643823,"results":"340","hashOfConfig":"190"},{"size":1807,"mtime":1627886643823,"results":"341","hashOfConfig":"190"},{"size":5824,"mtime":1627886643822,"results":"342","hashOfConfig":"190"},{"size":4765,"mtime":1627886643797,"results":"343","hashOfConfig":"190"},{"size":9766,"mtime":1635103277318,"results":"344","hashOfConfig":"190"},{"size":29597,"mtime":1635086033316,"results":"345","hashOfConfig":"190"},{"size":3676,"mtime":1635456820671,"results":"346","hashOfConfig":"190"},{"size":2509,"mtime":1627886643803,"results":"347","hashOfConfig":"190"},{"size":2122,"mtime":1627886643803,"results":"348","hashOfConfig":"190"},{"size":5250,"mtime":1627886643802,"results":"349","hashOfConfig":"190"},{"size":3823,"mtime":1627886643800,"results":"350","hashOfConfig":"190"},{"size":1336,"mtime":1627886643798,"results":"351","hashOfConfig":"190"},{"size":1783,"mtime":1627886643786,"results":"352","hashOfConfig":"190"},{"size":122938,"mtime":1627886643787,"results":"353","hashOfConfig":"190"},{"size":5076,"mtime":1627886643800,"results":"354","hashOfConfig":"190"},{"size":1995,"mtime":1627886643797,"results":"355","hashOfConfig":"190"},{"size":1286,"mtime":1627886643800,"results":"356","hashOfConfig":"190"},{"size":1696,"mtime":1627886643797,"results":"357","hashOfConfig":"190"},{"size":1526,"mtime":1627886643820,"results":"358","hashOfConfig":"190"},{"size":1898,"mtime":1627886643797,"results":"359","hashOfConfig":"190"},{"size":2771,"mtime":1627886643800,"results":"360","hashOfConfig":"190"},{"size":3385,"mtime":1627886643800,"results":"361","hashOfConfig":"190"},{"size":11411,"mtime":1627886643823,"results":"362","hashOfConfig":"190"},{"size":3033,"mtime":1627886643799,"results":"363","hashOfConfig":"190"},{"size":2813,"mtime":1627886643804,"results":"364","hashOfConfig":"190"},{"size":1806,"mtime":1627886643791,"results":"365","hashOfConfig":"190"},{"size":2436,"mtime":1635086034182,"results":"366","hashOfConfig":"190"},{"size":20344,"mtime":1635195706974,"results":"367","hashOfConfig":"190"},{"size":6048,"mtime":1634765208496,"results":"368","hashOfConfig":"190"},{"size":3153,"mtime":1635019514462,"results":"369","hashOfConfig":"190"},{"size":5327,"mtime":1635277238042,"results":"370","hashOfConfig":"190"},{"size":4229,"mtime":1635026724684,"results":"371","hashOfConfig":"190"},{"size":6303,"mtime":1635276268267,"results":"372","hashOfConfig":"190"},{"size":4721,"mtime":1635031014713,"results":"373","hashOfConfig":"190"},{"size":6524,"mtime":1635276268265,"results":"374","hashOfConfig":"190"},{"size":5856,"mtime":1635106336534,"results":"375","hashOfConfig":"190"},{"size":7274,"mtime":1635276268266,"results":"376","hashOfConfig":"190"},{"size":9451,"mtime":1635090510167,"results":"377","hashOfConfig":"190"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},"1bca2v",{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"385","usedDeprecatedRules":"380"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"388","usedDeprecatedRules":"380"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"380"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"412","usedDeprecatedRules":"380"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415","usedDeprecatedRules":"380"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"420","usedDeprecatedRules":"380"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433","usedDeprecatedRules":"380"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"436","messages":"437","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"438","messages":"439","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"440","usedDeprecatedRules":"380"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"443","usedDeprecatedRules":"380"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"446","usedDeprecatedRules":"380"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"449","usedDeprecatedRules":"380"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"452","usedDeprecatedRules":"380"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"461","usedDeprecatedRules":"380"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"464","usedDeprecatedRules":"380"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"467","usedDeprecatedRules":"380"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"470","usedDeprecatedRules":"380"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"473","usedDeprecatedRules":"380"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"476","usedDeprecatedRules":"380"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"487","usedDeprecatedRules":"380"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"492","usedDeprecatedRules":"380"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"495","usedDeprecatedRules":"380"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"516","usedDeprecatedRules":"380"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"523","usedDeprecatedRules":"380"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"532","messages":"533","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"534","messages":"535","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"538","messages":"539","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"540","usedDeprecatedRules":"380"},{"filePath":"541","messages":"542","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"547","messages":"548","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"549","messages":"550","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"551","usedDeprecatedRules":"380"},{"filePath":"552","messages":"553","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"558","usedDeprecatedRules":"380"},{"filePath":"559","messages":"560","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"563","messages":"564","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"565","usedDeprecatedRules":"380"},{"filePath":"566","messages":"567","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"568","messages":"569","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"572","messages":"573","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"574","usedDeprecatedRules":"380"},{"filePath":"575","messages":"576","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"577","messages":"578","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"574","usedDeprecatedRules":"380"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"583","usedDeprecatedRules":"380"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"586","messages":"587","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"588","messages":"589","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"590","usedDeprecatedRules":"380"},{"filePath":"591","messages":"592","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"593","messages":"594","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"595","usedDeprecatedRules":"380"},{"filePath":"596","messages":"597","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"598","messages":"599","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"600","messages":"601","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"602","messages":"603","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"604","messages":"605","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"606","messages":"607","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"608","messages":"609","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"610","messages":"611","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"612","usedDeprecatedRules":"380"},{"filePath":"613","messages":"614","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"615","messages":"616","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"617","messages":"618","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"619","messages":"620","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"621","messages":"622","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"623","messages":"624","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"625","usedDeprecatedRules":"380"},{"filePath":"626","messages":"627","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"628","messages":"629","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"630","usedDeprecatedRules":"380"},{"filePath":"631","messages":"632","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"633","usedDeprecatedRules":"380"},{"filePath":"634","messages":"635","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"636","messages":"637","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"638","messages":"639","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"640","messages":"641","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"642","messages":"643","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"644","messages":"645","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"646","messages":"647","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"648","messages":"649","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"650","messages":"651","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"652","messages":"653","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"654","messages":"655","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"656","messages":"657","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"658","messages":"659","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"660","usedDeprecatedRules":"380"},{"filePath":"661","messages":"662","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"663","messages":"664","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"665","messages":"666","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"667","messages":"668","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"669","usedDeprecatedRules":"380"},{"filePath":"670","messages":"671","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"672","messages":"673","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"674","usedDeprecatedRules":"380"},{"filePath":"675","messages":"676","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"677","usedDeprecatedRules":"380"},{"filePath":"678","messages":"679","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"680","messages":"681","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"682","messages":"683","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"684","usedDeprecatedRules":"380"},{"filePath":"685","messages":"686","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"687","messages":"688","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"689","usedDeprecatedRules":"380"},{"filePath":"690","messages":"691","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"692","messages":"693","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"694","messages":"695","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"696","messages":"697","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"698","usedDeprecatedRules":"380"},{"filePath":"699","messages":"700","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"701","messages":"702","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"703","usedDeprecatedRules":"380"},{"filePath":"704","messages":"705","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"706","messages":"707","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"708","messages":"709","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"710","usedDeprecatedRules":"380"},{"filePath":"711","messages":"712","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"713","messages":"714","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"715","messages":"716","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"717","messages":"718","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"719","messages":"720","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"721","usedDeprecatedRules":"380"},{"filePath":"722","messages":"723","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"724","usedDeprecatedRules":"380"},{"filePath":"725","messages":"726","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"727","usedDeprecatedRules":"380"},{"filePath":"728","messages":"729","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"730","messages":"731","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"732","usedDeprecatedRules":"380"},{"filePath":"733","messages":"734","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"735","messages":"736","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"737","usedDeprecatedRules":"380"},{"filePath":"738","messages":"739","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"740","usedDeprecatedRules":"380"},{"filePath":"741","messages":"742","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"743","messages":"744","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"745","usedDeprecatedRules":"380"},{"filePath":"746","messages":"747","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"748","usedDeprecatedRules":"380"},{"filePath":"749","messages":"750","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"751","usedDeprecatedRules":"380"},{"filePath":"752","messages":"753","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"754","messages":"755","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"756","messages":"757","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"758","usedDeprecatedRules":"380"},{"filePath":"759","messages":"760","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"761","usedDeprecatedRules":"380"},{"filePath":"762","messages":"763","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"764"},{"filePath":"765","messages":"766","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"767","messages":"768","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"769","messages":"770","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"771","messages":"772","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"773","messages":"774","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"775","messages":"776","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"777","usedDeprecatedRules":"380"},{"filePath":"778","messages":"779","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"780","usedDeprecatedRules":"380"},{"filePath":"781","messages":"782","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"783","messages":"784","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"785","messages":"786","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"787","messages":"788","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"789","usedDeprecatedRules":"380"},{"filePath":"790","messages":"791","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"792","messages":"793","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"794","messages":"795","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"796","usedDeprecatedRules":"380"},{"filePath":"797","messages":"798","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"799","usedDeprecatedRules":"380"},{"filePath":"800","messages":"801","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"802","usedDeprecatedRules":"380"},{"filePath":"803","messages":"804","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"805","usedDeprecatedRules":"380"},{"filePath":"806","messages":"807","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"808","usedDeprecatedRules":"380"},{"filePath":"809","messages":"810","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"811","usedDeprecatedRules":"380"},{"filePath":"812","messages":"813","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"814","usedDeprecatedRules":"380"},{"filePath":"815","messages":"816","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"817","usedDeprecatedRules":"380"},{"filePath":"818","messages":"819","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"820","usedDeprecatedRules":"380"},{"filePath":"821","messages":"822","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"823","usedDeprecatedRules":"380"},"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/index.js",[],["824","825"],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/App.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/index.js",["826","827","828","829","830","831","832"],"import React, { useState } from \"react\";\n\n/// React router dom\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\n/// Contexts\nimport { AuthProvider } from \"../contexts/AuthContext\";\nimport { DataProvider } from \"../contexts/DataContext\";\n\n/// Css\nimport \"./index.css\";\nimport \"./chart.css\";\n\n/// Layout\nimport Nav from \"./layouts/nav\";\nimport Footer from \"./layouts/Footer\";\n\n/// Pages\nimport Registration from \"./components/Auth/Registration\";\nimport Login from \"./components/Auth/Login\";\nimport ForgotPassword from \"./components/Auth/ForgotPassword\";\nimport LockScreen from \"./components/Auth/LockScreen\";\nimport Error400 from \"./pages/Error400\";\nimport Error403 from \"./pages/Error403\";\nimport Error404 from \"./pages/Error404\";\nimport Error500 from \"./pages/Error500\";\nimport Error503 from \"./pages/Error503\";\n/// Widget\nimport Widget from \"./pages/Widget\";\n\n/// Dashboard\nimport Home from \"./components/Dashboard/Home\";\nimport Campaign from \"./components/Dashboard/Campaign\";\nimport SocialNetworkCampaign from \"./components/Dashboard/SocialNetworkCampaign\";\nimport Spendings from \"./components/Dashboard/Spendings\";\nimport Analytics from \"./components/Dashboard/Analytics\";\nimport NewCompaign from \"./components/Dashboard/NewCompaign\";\n\n/// Customer\nimport CustomerList from \"./components/Customers/CustomerList\";\nimport CustomerForm from \"./components/Customers/CustomerForm\";\n\n/// Riders\nimport RidersList from \"./components/Riders/RidersList\";\n\n/// Orders\nimport OrdersList from \"./components/Orders/OrdersList\";\nimport DeliveryFeeList from \"./components/Settings/DeliveryFeeList\";\nimport CustomerOrder from \"./components/Orders/CustomerOrder\";\nimport DeliveryLocation from \"./components/Settings/DeliveryLocationList\";\n\n/// Products\nimport ProductsList from \"./components/Products/ProductsList\";\nimport CategoryList from \"./components/Settings/CategoryList\";\nimport UnitList from \"./components/Settings/UnitList\";\n\n/// Profile\nimport Profile from \"./components/Profile/Profile\";\n\n/// Bo\nimport UiAlert from \"./components/bootstrap/Alert\";\nimport UiAccordion from \"./components/bootstrap/Accordion\";\nimport UiBadge from \"./components/bootstrap/Badge\";\nimport UiButton from \"./components/bootstrap/Button\";\nimport UiModal from \"./components/bootstrap/Modal\";\nimport UiButtonGroup from \"./components/bootstrap/ButtonGroup\";\nimport UiListGroup from \"./components/bootstrap/ListGroup\";\nimport UiMediaObject from \"./components/bootstrap/MediaObject\";\nimport UiCards from \"./components/bootstrap/Cards\";\nimport UiCarousel from \"./components/bootstrap/Carousel\";\nimport UiDropDown from \"./components/bootstrap/DropDown\";\nimport UiPopOver from \"./components/bootstrap/PopOver\";\nimport UiProgressBar from \"./components/bootstrap/ProgressBar\";\nimport UiTab from \"./components/bootstrap/Tab\";\nimport UiPagination from \"./components/bootstrap/Pagination\";\nimport UiGrid from \"./components/bootstrap/Grid\";\nimport UiTypography from \"./components/bootstrap/Typography\";\n\n/// App\nimport AppProfile from \"./components/AppsMenu/AppProfile/AppProfile\";\nimport Compose from \"./components/AppsMenu/Email/Compose/Compose\";\nimport Inbox from \"./components/AppsMenu/Email/Inbox/Inbox\";\nimport Read from \"./components/AppsMenu/Email/Read/Read\";\nimport Calendar from \"./components/AppsMenu/Calendar/Calendar\";\nimport PostDetails from \"./components/AppsMenu/AppProfile/PostDetails\";\n\n/// Product List\nimport ProductGrid from \"./components/AppsMenu/Shop/ProductGrid/ProductGrid\";\nimport ProductList from \"./components/AppsMenu/Shop/ProductList/ProductList\";\nimport ProductDetail from \"./components/AppsMenu/Shop/ProductGrid/ProductDetail\";\nimport Checkout from \"./components/AppsMenu/Shop/Checkout/Checkout\";\nimport Invoice from \"./components/AppsMenu/Shop/Invoice/Invoice\";\nimport ProductOrder from \"./components/AppsMenu/Shop/ProductOrder\";\nimport Customers from \"./components/AppsMenu/Shop/Customers/Customers\";\n\n/// Chirt\nimport SparklineChart from \"./components/charts/Sparkline\";\nimport ChartJs from \"./components/charts/Chartjs\";\nimport Chartist from \"./components/charts/chartist\";\n\nimport BtcChart from \"./components/charts/apexcharts/ApexChart\";\n\n/// Table\nimport DataTable from \"./components/table/DataTable\";\nimport BootstrapTable from \"./components/table/BootstrapTable\";\nimport ApexChart from \"./components/charts/apexcharts\";\n\n/// Form\nimport Element from \"./components/Forms/Element/Element\";\nimport Wizard from \"./components/Forms/Wizard/Wizard\";\nimport SummerNote from \"./components/Forms/Summernote/SummerNote\";\nimport Pickers from \"./components/Forms/Pickers/Pickers\";\nimport jQueryValidation from \"./components/Forms/jQueryValidation/jQueryValidation\";\n\n/// Pulgin\nimport Select2 from \"./components/PluginsMenu/Select2/Select2\";\nimport Nestable from \"./components/PluginsMenu/Nestable/Nestable\";\nimport MainNouiSlider from \"./components/PluginsMenu/Noui Slider/MainNouiSlider\";\nimport MainSweetAlert from \"./components/PluginsMenu/Sweet Alert/SweetAlert\";\nimport Toastr from \"./components/PluginsMenu/Toastr/Toastr\";\nimport JqvMap from \"./components/PluginsMenu/Jqv Map/JqvMap\";\nimport RechartJs from \"./components/charts/rechart\";\nimport ProfileSidebar from \"./layouts/ProfileSidebar\";\nimport Lightgallery from \"./components/PluginsMenu/Lightgallery/Lightgallery\";\nimport PrivateRoute from \"./layouts/PrivateRoute\";\nimport AuthRoute from \"./layouts/AuthRoute\";\nimport Settings from \"./components/Settings/Settings\";\nimport RiderRequestList from \"./components/RiderRequests/RiderRequestList\";\n\nconst Markup = ({ showProfileSideBar }) => {\n  const [showProfile, setShowProfile] = useState(false);\n\n  const routes = [\n    // Dashboard\n    { url: \"\", component: Home },\n    { url: \"dashboard\", component: Home },\n    { url: \"campaign\", component: Campaign },\n    { url: \"social-network-campaign\", component: SocialNetworkCampaign },\n    { url: \"spendings\", component: Spendings },\n    { url: \"analytics\", component: Analytics },\n    { url: \"new-compaign\", component: NewCompaign },\n\n    // Customers\n    { url: \"customers\", component: CustomerList },\n    { url: \"customer-form\", component: CustomerForm },\n\n    // Riders\n    { url: \"riders\", component: RidersList },\n\n    // Riders\n    { url: \"rider-requests\", component: RiderRequestList },\n\n    // Orders\n    { url: \"orders\", component: OrdersList },\n    { url: \"orders-deliveryfee\", component: DeliveryFeeList },\n    { url: \"customer-order\", component: CustomerOrder },\n    { url: \"delivery-location\", component: DeliveryLocation },\n\n    // Products\n    { url: \"products\", component: ProductsList },\n    { url: \"products-category\", component: CategoryList },\n    { url: \"products-unit\", component: UnitList },\n\n    /// Settings\n    { url: \"settings\", component: Settings },\n\n    /// Bootstrap\n    { url: \"ui-alert\", component: UiAlert },\n    { url: \"ui-badge\", component: UiBadge },\n    { url: \"ui-button\", component: UiButton },\n    { url: \"ui-modal\", component: UiModal },\n    { url: \"ui-button-group\", component: UiButtonGroup },\n    { url: \"ui-accordion\", component: UiAccordion },\n    { url: \"ui-list-group\", component: UiListGroup },\n    { url: \"ui-media-object\", component: UiMediaObject },\n    { url: \"ui-card\", component: UiCards },\n    { url: \"ui-carousel\", component: UiCarousel },\n    { url: \"ui-dropdown\", component: UiDropDown },\n    { url: \"ui-popover\", component: UiPopOver },\n    { url: \"ui-progressbar\", component: UiProgressBar },\n    { url: \"ui-tab\", component: UiTab },\n    { url: \"ui-pagination\", component: UiPagination },\n    { url: \"ui-typography\", component: UiTypography },\n    { url: \"ui-grid\", component: UiGrid },\n    /// Apps\n    { url: \"profile\", component: Profile },\n    { url: \"email-compose\", component: Compose },\n    { url: \"email-inbox\", component: Inbox },\n    { url: \"email-read\", component: Read },\n    { url: \"app-calender\", component: Calendar },\n    { url: \"post-details\", component: PostDetails },\n\n    /// Shop\n    { url: \"ecom-product-grid\", component: ProductGrid },\n    { url: \"ecom-product-list\", component: ProductList },\n    { url: \"ecom-product-detail\", component: ProductDetail },\n    { url: \"ecom-product-order\", component: ProductOrder },\n    { url: \"ecom-checkout\", component: Checkout },\n    { url: \"ecom-invoice\", component: Invoice },\n    { url: \"ecom-product-detail\", component: ProductDetail },\n    { url: \"ecom-customers\", component: Customers },\n\n    /// Chart\n    { url: \"chart-sparkline\", component: SparklineChart },\n    { url: \"chart-chartjs\", component: ChartJs },\n    { url: \"chart-chartist\", component: Chartist },\n    { url: \"chart-btc\", component: BtcChart },\n    { url: \"chart-apexchart\", component: ApexChart },\n    { url: \"chart-rechart\", component: RechartJs },\n\n    /// table\n    { url: \"table-datatable-basic\", component: DataTable },\n    { url: \"table-bootstrap-basic\", component: BootstrapTable },\n\n    /// Form\n    { url: \"form-element\", component: Element },\n    { url: \"form-wizard\", component: Wizard },\n    { url: \"form-wizard\", component: Wizard },\n    { url: \"form-editor-summernote\", component: SummerNote },\n    { url: \"form-pickers\", component: Pickers },\n    { url: \"form-validation-jquery\", component: jQueryValidation },\n\n    /// Plugin\n\n    { url: \"uc-select2\", component: Select2 },\n    { url: \"uc-nestable\", component: Nestable },\n    { url: \"uc-noui-slider\", component: MainNouiSlider },\n    { url: \"uc-sweetalert\", component: MainSweetAlert },\n    { url: \"uc-toastr\", component: Toastr },\n    { url: \"map-jqvmap\", component: JqvMap },\n    { url: \"uc-lightgallery\", component: Lightgallery },\n\n    /// pages\n    { url: \"widget-basic\", component: Widget },\n\n    { url: \"login\", component: Login },\n    { url: \"register\", component: Registration },\n    { url: \"page-lock-screen\", component: LockScreen },\n    { url: \"page-forgot-password\", component: ForgotPassword },\n    { url: \"page-error-400\", component: Error400 },\n    { url: \"page-error-403\", component: Error403 },\n    { url: \"page-error-404\", component: Error404 },\n    { url: \"page-error-500\", component: Error500 },\n    { url: \"page-error-503\", component: Error503 },\n  ];\n  // let path = window.location.pathname;\n  // path = path.split(\"/\");\n  // path = path[path.length - 1];\n\n  return (\n    <Router basename=\"/\">\n      <AuthProvider>\n        <DataProvider>\n          <Switch>\n            {routes.map((data, i) =>\n              data.url === \"register\" || data.url === \"login\" ? (\n                <AuthRoute\n                  key={i}\n                  exact\n                  path={`/${data.url}`}\n                  component={data.component}\n                />\n              ) : (\n                <PrivateRoute\n                  key={i}\n                  exact\n                  path={`/${data.url}`}\n                  component={data.component}\n                />\n              )\n            )}\n          </Switch>\n        </DataProvider>\n      </AuthProvider>\n    </Router>\n  );\n};\n\nexport default Markup;\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/layouts/PrivateRoute.js",["833"],"import React, { useState } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useAuth } from \"../../contexts/AuthContext\";\n\n/// Layout\nimport Nav from \"../layouts/nav\";\nimport Footer from \"../layouts/Footer\";\nimport { ToastContainer } from \"react-toastify\";\n\nexport default function PrivateRoute({ component: Component, ...rest }) {\n  const { currentUser } = useAuth();\n  const [showProfile, setShowProfile] = useState(false);\n\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        return currentUser ? (\n          <div id={\"main-wrapper\"} className={\"show\"}>\n            <Nav\n              showProfileSideBar={true}\n              showProfile={() => setShowProfile(true)}\n            />\n\n            <div className={\"content-body\"}>\n              <div className={\"container-fluid\"}>\n                <Component {...props} />\n              </div>\n            </div>\n            <ToastContainer\n              position=\"top-right\"\n              autoClose={5000}\n              hideProgressBar={false}\n              newestOnTop\n              closeOnClick\n              rtl={false}\n              pauseOnFocusLoss\n              draggable\n              pauseOnHover\n            />\n            {<Footer />}\n          </div>\n        ) : (\n          <Redirect to=\"/login\" />\n        );\n      }}\n    ></Route>\n  );\n}\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/layouts/Footer.js",["834","835"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Footer = () => {\n   return (\n      <div className=\"footer\">\n         <div className=\"copyright\">\n            <p>\n               Copyright © Designed &amp; Developed by{\" \"}\n               <a href=\"http://astradevlabs.com/\" target=\"_blank\">\n                  Astradevlabs\n               </a>{\" \"}\n               2021\n            </p>\n         </div>\n      </div>\n   );\n};\n\nexport default Footer;\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/layouts/AuthRoute.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/pages/Error400.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/contexts/AuthContext.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/pages/Error403.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/pages/Error500.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/pages/Error404.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/pages/Error503.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/pages/Widget.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Auth/Registration.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Auth/Login.js",["836"],"import React, { useState, useRef } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useAuth } from '../../../contexts/AuthContext'\nimport { Alert } from 'react-bootstrap'\n\nconst Login = ({ history }) => {\n   const [loginData, setLoginData] = useState({});\n   const hist = useHistory()\n\n    /// Authentication\n    const emailRef = useRef()\n    const passwordRef = useRef()\n    const { login } = useAuth()\n    const [error, setError] = useState('')\n    const [loading, setLoading] = useState(false)\n\n\n   const handleBlur = (e) => {\n      const newLoginData = { ...loginData };\n      newLoginData[e.target.name] = e.target.value;\n      setLoginData(newLoginData);\n   };\n\n   const submitHandler = async(e) => {\n      e.preventDefault();\n\n      try{\n         setError('')\n         setLoading(true)\n         await login(emailRef.current.value, passwordRef.current.value)\n         hist.push('/')\n      } catch (e){\n         setError(e.message)\n         console.log(e);\n      }\n      setLoading(false)\n   };\n\n   return (\n      <div className=\"authincation h-100 p-meddle\">\n         <div className=\"container h-100\">\n            <div className=\"row justify-content-center h-100 align-items-center\">\n               <div className=\"col-md-6\">\n                  <div className=\"authincation-content\">\n                     <div className=\"row no-gutters\">\n                        <div className=\"col-xl-12\">\n                           <div className=\"auth-form\">\n                              <h4 className=\"text-center mb-4\">\n                                 Log in your account\n                              </h4>\n                              <form\n                                 action=\"\"\n                                 onSubmit={(e) => submitHandler(e)}\n                              >\n                                 <div className=\"form-group\">\n                                    <label className=\"mb-1\">\n                                       <strong>Email</strong>\n                                    </label>\n                                    <input\n                                       type=\"email\"\n                                       className=\"form-control\"\n                                       name=\"Email\"\n                                       onChange={handleBlur}\n                                       ref={emailRef}\n                                    />\n                                 </div>\n                                 <div className=\"form-group\">\n                                    <label className=\"mb-1\">\n                                       <strong>Password</strong>\n                                    </label>\n                                    <input\n                                       type=\"password\"\n                                       className=\"form-control\"\n                                       name=\"password\"\n                                       onChange={handleBlur}\n                                       ref={passwordRef}\n                                    />\n                                 </div>\n                                 <div className=\"form-row d-flex justify-content-between mt-4 mb-2\">\n                                    <div className=\"form-group\">\n                                       <div className=\"custom-control custom-checkbox ml-1\">\n                                          <input\n                                             type=\"checkbox\"\n                                             className=\"custom-control-input\"\n                                             id=\"basic_checkbox_1\"\n                                          />\n                                          <label\n                                             className=\"custom-control-label\"\n                                             htmlFor=\"basic_checkbox_1\"\n                                          >\n                                             Remember my preference\n                                          </label>\n                                       </div>\n                                    </div>\n                                    <div className=\"form-group\">\n                                       <Link to=\"/page-forgot-password\">\n                                          Forgot Password?\n                                       </Link>\n                                    </div>\n                                 </div>\n                                 <div className=\"text-center\">\n                                    <input\n                                       type=\"submit\"\n                                       value=\"Sign Me In\"\n                                       className=\"btn btn-primary btn-block\"\n                                    />\n                                 </div>\n                              </form>\n                              { error && \n                                 <Alert\n                                    className=\"alert-dismissible fade show mt-3\"\n                                    variant=\"warning\"\n                                 >\n                                    <strong>{error}</strong>\n                                 </Alert>\n                              }\n                              <div className=\"new-account mt-3\">\n                                 <p>\n                                    Don't have an account?{\" \"}\n                                    <Link\n                                       className=\"text-primary\"\n                                       to=\"register\"\n                                    >\n                                       Register\n                                    </Link>\n                                 </p>\n                              </div>\n                           </div>\n                        </div>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default Login;\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Auth/ForgotPassword.js",["837"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nconst ForgotPassword = ({ history }) => {\n   const onSubmit = (e) => {\n      e.preventDefault();\n      history.push(\"/\");\n   };\n   return (\n      <div className=\"authincation h-100 p-meddle\">\n         <div className=\"container h-100\">\n            {\" \"}\n            <div className=\"row justify-content-center h-100 align-items-center\">\n               <div className=\"col-md-6\">\n                  <div className=\"authincation-content\">\n                     <div className=\"row no-gutters\">\n                        <div className=\"col-xl-12\">\n                           <div className=\"auth-form\">\n                              <h4 className=\"text-center mb-4\">\n                                 Forgot Password\n                              </h4>\n                              <form onSubmit={(e) => onSubmit(e)}>\n                                 <div className=\"form-group\">\n                                    <label>\n                                       <strong>Email</strong>\n                                    </label>\n                                    <input\n                                       type=\"email\"\n                                       className=\"form-control\"\n                                       defaultValue=\"hello@example.com\"\n                                    />\n                                 </div>\n                                 <div className=\"text-center\">\n                                    <input\n                                       type=\"submit\"\n                                       value=\"SUBMIT\"\n                                       className=\"btn btn-primary btn-block\"\n                                    />\n                                 </div>\n                              </form>\n                           </div>\n                        </div>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default ForgotPassword;\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Auth/LockScreen.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Dashboard/Home.js",["838","839","840","841","842","843","844","845","846","847","848"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useDataContext } from \"../../../contexts/DataContext\";\n\nimport { Link } from \"react-router-dom\";\nimport {\n  Row,\n  Col,\n  Card,\n  Table,\n  Badge,\n  Dropdown,\n  ProgressBar,\n  Nav,\n  Tab,\n} from \"react-bootstrap\";\n\nconst Home = () => {\n  const { orderList, productList } = useDataContext();\n\n  const [todaysOrder, setTodaysOrder] = useState([]);\n  const [preorderProducts, setPreorderProducts] = useState([]);\n\n  // counts active, processing, in transit, and delivered orders\n  const countByStatus = (orderList, status) => {\n    return Object.keys(orderList).filter(\n      (orderId) => orderList[orderId].status === status\n    ).length;\n  };\n\n  //Sets the values for today's orders\n  const dateToday = new Date().toLocaleDateString();\n  // console.log(\"date today\", dateToday);\n  useEffect(() => {\n    if (orderList) {\n      Object.keys(orderList).map((id) => {\n        if (\n          new Date(dateToday).toLocaleDateString() ===\n          new Date(orderList[id].dateOfDelivery).toLocaleDateString()\n        ) {\n          console.log(\n            \"orderValues - delivery date, \",\n            new Date(orderList[id].dateOfDelivery).toLocaleDateString()\n          );\n          setTodaysOrder((prev) => [...prev, orderList[id]]);\n          // setTodaysOrder((prev) => [...prev, orderValues[id]]);\n          console.log(\"todays orders: \", todaysOrder);\n        }\n      });\n    }\n  }, [orderList]);\n\n  //Sets the values for pre-ordered products\n  var current = new Date();\n  const dateTomorrow = new Date(current.getTime() + 86400000);\n  dateTomorrow.toLocaleDateString();\n  // console.log(\"Date Tomorrow\", dateTomorrow.toLocaleDateString());\n  useEffect(() => {\n    if (orderList) {\n      Object.keys(orderList).map((id) => {\n        if (\n          new Date(dateTomorrow).toLocaleDateString() ===\n          new Date(orderList[id].dateOfDelivery).toLocaleDateString()\n        ) {\n          console.log(\"orderValues - preorder, \", orderList);\n          orderList[id].products.map((value, index) => {\n            setPreorderProducts((prev) => [...prev, value]);\n            console.log(\"orderValues - product \", preorderProducts);\n          });\n        }\n      });\n    }\n  }, [orderList]);\n\n  //Sets the status Badge\n  const statusBadge = (status) => {\n    switch (status) {\n      case \"PREORDER\":\n        return <Badge variant=\"info light\">{status.toUpperCase()}</Badge>;\n      case \"ACTIVE\":\n        return <Badge variant=\"info light\">{status.toUpperCase()}</Badge>;\n      case \"PROCESSING\":\n        return <Badge variant=\"secondary light\">{status.toUpperCase()}</Badge>;\n      case \"FOR DELIVERY\":\n        return <Badge variant=\"warning light\">{status.toUpperCase()}</Badge>;\n      case \"IN TRANSIT\":\n        return <Badge variant=\"success light\">{status.toUpperCase()}</Badge>;\n      case \"DELIVERED\":\n        return <Badge variant=\"primary light\">{status.toUpperCase()}</Badge>;\n      case \"CANCELLED\":\n        return <Badge variant=\"danger light\">{status.toUpperCase()}</Badge>;\n      default:\n        return <Badge variant=\"dark light\">{status.toUpperCase()}</Badge>;\n    }\n  };\n\n  if (orderList !== null) {\n    return (\n      <>\n        <Helmet>\n          <title>Veggie Go | Dashboard</title>\n        </Helmet>\n        <div className=\"form-head d-flex mb-0 mb-lg-4 align-items-start\">\n          <div className=\"mr-auto d-none d-lg-block\">\n            <h2 className=\"text-black font-w600 mb-1\">Dashboard</h2>\n            <p className=\"mb-0\">Welcome to Veggie Go Admin Dashboard</p>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-lg-12 col-xxl-12\">\n            <div className=\"row\">\n              <div className=\"col-lg-3 col-sm-12 col-md-6 \">\n                <div className=\"card widget-stat \">\n                  <div className=\"card-body p-4\">\n                    <div className=\"media align-items-center\">\n                      <div className=\"media-body\">\n                        <p className=\"fs-18 mb-2 wspace-no\">Active Orders</p>\n                        <h1 className=\"fs-36 font-w600 text-black mb-0\">\n                          {countByStatus(orderList, \"ACTIVE\")}\n                        </h1>\n                      </div>\n                      <span className=\"ml-3 bg-primary text-white\">\n                        <i className=\"flaticon-381-promotion\" />\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-lg-3 col-sm-12 col-md-6 \">\n                <div className=\"card widget-stat\">\n                  <div className=\"card-body p-4\">\n                    <div className=\"media align-items-center\">\n                      <div className=\"media-body\">\n                        <p className=\"fs-18 mb-2 wspace-no\">Processing</p>\n                        <h1 className=\"fs-36 font-w600 d-flex align-items-center text-black mb-0\">\n                          {countByStatus(orderList, \"PROCESSING\")}\n                        </h1>\n                      </div>\n                      <span className=\"ml-3 bg-warning text-white\">\n                        <i className=\"las la-sync scale4\" />\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-lg-3 col-sm-12 col-md-6 \">\n                <div className=\"card widget-stat\">\n                  <div className=\"card-body p-4\">\n                    <div className=\"media align-items-center\">\n                      <div className=\"media-body\">\n                        <p className=\"fs-18 mb-2 wspace-no\">In Transit</p>\n                        <h1 className=\"fs-36 font-w600 d-flex align-items-center text-black mb-0\">\n                          {countByStatus(orderList, \"IN TRANSIT\")}\n                        </h1>\n                      </div>\n                      <span className=\"ml-3 bg-warning text-white\">\n                        <i className=\"las la-biking scale4\" />\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-lg-3 col-sm-12 col-md-6 \">\n                <div className=\"card widget-stat\">\n                  <div className=\"card-body p-4\">\n                    <div className=\"media align-items-center\">\n                      <div className=\"media-body\">\n                        <p className=\"fs-18 mb-2 wspace-no\">Delivered</p>\n                        <h1 className=\"fs-36 font-w600 d-flex align-items-center text-black mb-0\">\n                          {countByStatus(orderList, \"DELIVERED\")}\n                        </h1>\n                      </div>\n                      <span className=\"ml-3 bg-primary text-white\">\n                        <i className=\"las la-box scale4\" />\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <Col lg={12}>\n                <Card>\n                  <Card.Header>\n                    <Card.Title>Today's Orders</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                    <Table\n                      responsive\n                      hover\n                      className=\"header-border verticle-middle\"\n                    >\n                      <thead>\n                        <tr>\n                          <th scope=\"col\">CUSTOMER NAME</th>\n                          <th scope=\"col\">TOTAL PRICE</th>\n                          <th scope=\"col\">TIME OF DELIVERY</th>\n                          <th scope=\"col\">ASSIGNED RIDER</th>\n                          <th scope=\"col\">STATUS</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {Object.keys(todaysOrder).map((orderId) => {\n                          return (\n                            <tr key={orderId}>\n                              <td>{todaysOrder[orderId].customer.name}</td>\n                              <td>{todaysOrder[orderId].grandTotal}</td>\n                              <td>{todaysOrder[orderId].dateOfDelivery}</td>\n                              <td>\n                                {todaysOrder[orderId].rider\n                                  ? todaysOrder[orderId].rider.riderName\n                                  : \"Not Assigned\"}\n                              </td>\n                              <td>\n                                {statusBadge(todaysOrder[orderId].status)}\n                              </td>\n                            </tr>\n                          );\n                        })}\n                      </tbody>\n                    </Table>\n                  </Card.Body>\n                </Card>\n              </Col>\n            </div>\n          </div>\n\n          {/* My Sales PART */}\n          {/* <div className=\"col-lg-6 col-xxl-6\">\n          <div className=\"card\" id=\"user-activity\">\n            <Tab.Container defaultActiveKey=\"monthly\">\n              <div className=\"card-header pb-0 d-block d-sm-flex border-0\">\n                <h3 className=\"fs-20 text-black mb-0\">My Sales</h3>\n                <div className=\"card-action card-tabs mt-3 mt-sm-0\">\n                  <Nav as=\"ul\" className=\"nav nav-tabs\" role=\"tablist\">\n                    <Nav.Item as=\"li\" className=\"nav-item\">\n                      <Nav.Link\n                        className=\"nav-link\"\n                        eventKey=\"monthly\"\n                        role=\"tab\"\n                      >\n                        Monthly\n                      </Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item as=\"li\" className=\"nav-item\">\n                      <Nav.Link\n                        className=\"nav-link\"\n                        eventKey=\"weekly\"\n                        role=\"tab\"\n                      >\n                        Weekly\n                      </Nav.Link>\n                    </Nav.Item>\n                  </Nav>\n                </div>\n              </div>\n              <div className=\"card-body\">\n                <Tab.Content className=\"tab-content\" id=\"myTabContent\">\n                  <Tab.Pane eventKey=\"monthly\">\n                    <div style={{ height: \"300px\" }}>\n                      <LineChart7 data={0} height=\"300\" />\n                    </div>\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"weekly\">\n                    <div style={{ height: \"300px\" }}>\n                      <LineChart7 data={1} height=\"300\" />\n                    </div>\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"today\">\n                    <div style={{ height: \"300px\" }}>\n                      <LineChart7 data={2} height=\"300\" />\n                    </div>\n                  </Tab.Pane>\n                </Tab.Content>\n              </div>\n            </Tab.Container>\n          </div>\n        </div> */}\n          <div className=\"col-lg-6 col-xxl-12\">\n            <div className=\"row\">\n              <div className=\"col-lg-12 col-md-12\">\n                <div className=\"card\">\n                  <div className=\"card-header border-0  pb-0\">\n                    <h3 className=\"fs-20 text-black mb-0\">Preorder Summary</h3>\n                    <Dropdown className=\"dropdown ml-auto\">\n                      <Dropdown.Toggle\n                        variant=\"\"\n                        className=\"btn-link icon-false p-0\"\n                      >\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n                          width=\"24px\"\n                          height=\"24px\"\n                          viewBox=\"0 0 24 24\"\n                          version=\"1.1\"\n                        >\n                          <g\n                            stroke=\"none\"\n                            strokeWidth={1}\n                            fill=\"none\"\n                            fillRule=\"evenodd\"\n                          >\n                            <rect x={0} y={0} width={24} height={24} />\n                            <circle fill=\"#000000\" cx={12} cy={5} r={2} />\n                            <circle fill=\"#000000\" cx={12} cy={12} r={2} />\n                            <circle fill=\"#000000\" cx={12} cy={19} r={2} />\n                          </g>\n                        </svg>\n                      </Dropdown.Toggle>\n                      <Dropdown.Menu className=\"dropdown-menu-right\">\n                        {/* {Object.keys(productValues && productValues).map((id) => {\n                        return (\n                          <Dropdown.Item className=\"text-black\" to=\"/\">\n                            {productValues[id].productName}\n                          </Dropdown.Item>\n                        );\n                      })} */}\n                      </Dropdown.Menu>\n                    </Dropdown>\n                  </div>\n                  <div className=\"card-body\">\n                    <div>\n                      <div className=\"d-flex align-items-center pb-3 mb-3 border-bottom\">\n                        <i className=\"las la-carrot gs-icon bgl-primary text-primary mr-3\" />\n                        <span className=\"text-black fs-15 font-w400\">\n                          Prepare the following products tomorrow (\n                          {dateTomorrow.toLocaleDateString()})\n                        </span>\n                      </div>\n                      <div className=\"fs-14 mb-4\">\n                        {Object.keys(preorderProducts).map((value, index) => {\n                          <ul\n                            className=\"d-flex justify-content-between pb-2\"\n                            key={index}\n                          >\n                            <li className=\"font-w500 text-dark\">\n                              {value.productName}\n                            </li>\n                            <li>{value.productQty}</li>\n                            <li>{value.productUnit}</li>\n                          </ul>;\n                        })}\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"card-footer pt-0 border-0 text-center\">\n                    <Link\n                      to=\"/social-network-campaign\"\n                      className=\"text-primary\"\n                    >\n                      See all Next Day Orders\n                    </Link>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  } else {\n    return <h1>Loading...</h1>;\n  }\n};\n\nexport default Home;\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Dashboard/Campaign.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Dashboard/Spendings.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Dashboard/NewCompaign.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Dashboard/SocialNetworkCampaign.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Dashboard/Analytics.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Orders/OrdersList.js",["849","850","851","852","853"],"import React, { Fragment, useEffect, useState } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useDataContext } from \"../../../contexts/DataContext\";\nimport firebaseDb from \"../../../firebase\";\nimport swal from \"sweetalert\";\nimport { Row, Col, Card, Table, Badge, Dropdown } from \"react-bootstrap\";\n\nimport { toast } from \"react-toastify\";\nimport OrderReceipt from \"./OrderReceipt\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nconst OrdersList = () => {\n  const { orderList } = useDataContext();\n  var [orderValues, setOrderValues] = useState(orderList);\n  var [currentId, setCurrentId] = useState(\"\");\n  const [filterStatus, setFilterStatus] = useState(\"ALL\");\n  var [searchTerm, setSearchTerm] = useState(\"\");\n\n  const location = useLocation();\n\n  useEffect(() => {\n    if (location.state) {\n      const { isAdded, isUpdated } = location.state;\n      setTimeout(async () => {\n        if (isAdded) {\n          toast.success(\"Order successfully placed!\", {\n            position: \"bottom-left\",\n            autoClose: 3000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n          });\n        } else if (isUpdated) {\n          toast.success(\"Order successfully updated!\", {\n            position: \"bottom-left\",\n            autoClose: 3000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n          });\n        }\n      }, 500);\n    }\n  }, []);\n\n  /// filter order list based on status\n  useEffect(() => {}, [filterStatus]);\n\n  const addOrEdit = (obj) => {\n    if (currentId === \"\") {\n      swal(\"Nice!\", \"A new order is added!\", \"success\");\n      firebaseDb.ref(\"orders/\").push(obj, (err) => {\n        if (err) {\n          toast.error(\"An error has occured!\" + err, {\n            position: \"bottom-left\",\n            autoClose: 3000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n          });\n        } else setCurrentId(\"\");\n      });\n    } else {\n      swal(\"Nice!\", \"This order is updated!\", \"success\");\n      firebaseDb.ref(`orders/${currentId}`).set(obj, (err) => {\n        if (err) {\n          toast.error(\"An error has occured!\" + err, {\n            position: \"bottom-left\",\n            autoClose: 3000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n          });\n        } else setCurrentId(\"\");\n      });\n    }\n  };\n\n  const [currentOrder, setCurrentOrder] = useState();\n\n  const handleFilterStatus = (status) => {\n    setFilterStatus(status);\n    setCurrentId(\"\");\n  };\n\n  // View delivery receipt - Triggers every order status filter change\n  useEffect(() => {\n    if (orderList) {\n      const currentOrders = filteredOrders(orderList, filterStatus);\n      const latestOrder =\n        Object.keys(currentOrders)[Object.keys(currentOrders).length - 1];\n\n      setCurrentId(latestOrder);\n      setCurrentOrder(currentOrders[latestOrder]);\n    }\n  }, [orderList, filterStatus]);\n\n  const statusBadge = (status) => {\n    if (status) {\n      if (status.includes(\"PREORDER\")) {\n        return <Badge variant=\"info light\">{status.toUpperCase()}</Badge>;\n      } else if (status.includes(\"ACTIVE\")) {\n        return <Badge variant=\"info light\">{status.toUpperCase()}</Badge>;\n      } else if (status.includes(\"PROCESSING\")) {\n        return <Badge variant=\"secondary light\">{status.toUpperCase()}</Badge>;\n      } else if (status.includes(\"FOR DELIVERY\")) {\n        return <Badge variant=\"warning light\">{status.toUpperCase()}</Badge>;\n      } else if (status.includes(\"IN TRANSIT\")) {\n        return <Badge variant=\"success light\">{status.toUpperCase()}</Badge>;\n      } else if (status.includes(\"DELIVERED\")) {\n        return <Badge variant=\"primary light\">{status.toUpperCase()}</Badge>;\n      } else if (status.includes(\"CANCELLED\")) {\n        return <Badge variant=\"danger light\">{status.toUpperCase()}</Badge>;\n      } else if (status.includes(\"NOT PAID\")) {\n        return <Badge variant=\"danger light\">{status.toUpperCase()}</Badge>;\n      } else if (status.includes(\"PAID\")) {\n        return <Badge variant=\"primary light\">{status.toUpperCase()}</Badge>;\n      } else {\n        return <Badge variant=\"dark light\">{status.toUpperCase()}</Badge>;\n      }\n    }\n  };\n\n  const filteredOrders = (orderList, status) => {\n    if (orderList) {\n      if (status === \"ALL\") {\n        return Object.keys(orderList)\n          .filter((orderId) =>\n            orderList[orderId].customer.name\n              .toLowerCase()\n              .includes(searchTerm.toLowerCase())\n          )\n          .reduce((res, key) => ((res[key] = orderList[key]), res), {});\n      } else {\n        var filteredOrders = Object.keys(orderList)\n          .filter(\n            (orderId) =>\n              orderList[orderId].status === status &&\n              orderList[orderId].customer.name\n                .toLowerCase()\n                .includes(searchTerm.toLowerCase())\n          )\n          .reduce((res, key) => ((res[key] = orderList[key]), res), {});\n        return filteredOrders;\n      }\n    }\n  };\n\n  if (!orderList) {\n    return <h1>Loading...</h1>;\n  }\n\n  return (\n    <Fragment>\n      {orderList && (\n        <>\n          <Helmet>\n            <title>Veggie Go | Orders</title>\n          </Helmet>\n          <div className=\"form-head d-flex mb-0 mb-lg-4 align-items-start\">\n            <div className=\"mr-auto d-none d-lg-block\">\n              <h2 className=\"text-black font-w600 mb-1\">Orders</h2>\n              <p className=\"mb-0\">Keep track of your orders here</p>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-xl-6 col-lg-6\">\n              <OrderReceipt\n                {...{\n                  addOrEdit,\n                  currentId,\n                  orderValues,\n                  statusBadge,\n                  currentOrder,\n                  setCurrentOrder,\n                }}\n              />\n            </div>\n            <div className=\"col-xl-6 col-lg-6\">\n              <Row>\n                <Col lg={12}>\n                  <Card>\n                    <Card.Header>\n                      <Card.Title>\n                        Customer Orders\n                        <Dropdown>\n                          <Dropdown.Toggle variant=\"\" size=\"m\" className=\"mt-1\">\n                            {statusBadge(\n                              filterStatus +\n                                \" (\" +\n                                Object.keys(\n                                  filteredOrders(orderList, filterStatus)\n                                ).length +\n                                \")\"\n                            )}\n                          </Dropdown.Toggle>\n                          <Dropdown.Menu>\n                            <Dropdown.Item\n                              onSelect={() => handleFilterStatus(\"ALL\")}\n                            >\n                              {statusBadge(\"ALL\")}\n                            </Dropdown.Item>\n                            <Dropdown.Item\n                              onSelect={() => handleFilterStatus(\"ACTIVE\")}\n                            >\n                              {statusBadge(\"ACTIVE\")}\n                            </Dropdown.Item>\n                            <Dropdown.Item\n                              onSelect={() => handleFilterStatus(\"PREORDER\")}\n                            >\n                              {statusBadge(\"PREORDER\")}\n                            </Dropdown.Item>\n                            <Dropdown.Item\n                              onSelect={() => handleFilterStatus(\"PROCESSING\")}\n                            >\n                              {statusBadge(\"PROCESSING\")}\n                            </Dropdown.Item>\n                            <Dropdown.Item\n                              onSelect={() =>\n                                handleFilterStatus(\"FOR DELIVERY\")\n                              }\n                            >\n                              {statusBadge(\"FOR DELIVERY\")}\n                            </Dropdown.Item>\n                            <Dropdown.Item\n                              onSelect={() => handleFilterStatus(\"IN TRANSIT\")}\n                            >\n                              {statusBadge(\"IN TRANSIT\")}\n                            </Dropdown.Item>\n                            <Dropdown.Item\n                              onSelect={() => handleFilterStatus(\"DELIVERED\")}\n                            >\n                              {statusBadge(\"DELIVERED\")}\n                            </Dropdown.Item>\n                            <Dropdown.Item\n                              onSelect={() => handleFilterStatus(\"CANCELLED\")}\n                            >\n                              {statusBadge(\"CANCELLED\")}\n                            </Dropdown.Item>\n                          </Dropdown.Menu>\n                        </Dropdown>\n                      </Card.Title>\n                      <span className=\"float-right\">\n                        <Link\n                          to={{\n                            pathname: \"/customer-order\",\n                            state: {\n                              user: null,\n                              userId: null,\n                            },\n                          }}\n                          className=\"btn-sm btn-primary \"\n                        >\n                          Add new order\n                        </Link>\n                      </span>\n                    </Card.Header>\n                    <Card.Body>\n                      <form\n                        onSubmit={(e) => e.preventDefault()}\n                        style={{ marginBottom: 10 }}\n                      >\n                        <input\n                          className=\"form-control\"\n                          type=\"search\"\n                          placeholder=\"Search Customer Name\"\n                          aria-label=\"Search\"\n                          onChange={(event) =>\n                            setSearchTerm(event.target.value)\n                          }\n                        />\n                      </form>\n                      <Table responsive hover>\n                        <thead>\n                          <tr>\n                            <th>\n                              <strong>ORDER STATUS</strong>\n                            </th>\n                            <th>\n                              <strong>PAYMENT</strong>\n                            </th>\n                            <th>\n                              <strong>CUSTOMER</strong>\n                            </th>\n                            <th>\n                              <strong>CONTACT NUMBER</strong>\n                            </th>\n                            <th>\n                              <strong>GRAND TOTAL</strong>\n                            </th>\n                            <th>\n                              <strong>DATE OF DELIVERY</strong>\n                            </th>\n                            <th>\n                              <strong>RIDER</strong>\n                            </th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {Object.keys(\n                            filteredOrders(orderList, filterStatus)\n                          ).map((orderId) => {\n                            return (\n                              <tr\n                                key={orderId}\n                                onClick={() => {\n                                  setCurrentId(orderId);\n                                  setCurrentOrder({ ...orderList[orderId] });\n                                }}\n                                style={{ cursor: \"pointer\" }}\n                              >\n                                <td>\n                                  {statusBadge(orderList[orderId].status)}\n                                </td>\n                                <td>\n                                  {statusBadge(\n                                    orderList[orderId].paymentStatus\n                                  )}\n                                </td>\n                                <td>{orderList[orderId].customer.name}</td>\n                                <td>\n                                  {orderList[orderId].customer.contactNumber}\n                                </td>\n                                <td>₱{orderList[orderId].grandTotal}</td>\n                                <td>{orderList[orderId].dateOfDelivery}</td>\n                                <td>{orderList[orderId].rider.riderName}</td>\n                              </tr>\n                            );\n                          })}\n                        </tbody>\n                      </Table>\n                    </Card.Body>\n                  </Card>\n                </Col>\n              </Row>\n            </div>\n          </div>\n        </>\n      )}\n    </Fragment>\n  );\n};\n\nexport default OrdersList;\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Customers/CustomerForm.js",["854","855"],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Customers/CustomerList.js",["856","857"],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Orders/CustomerOrder.js",["858","859"],"import React, { Fragment, useEffect, useState } from \"react\";\nimport { useDataContext } from \"../../../contexts/DataContext\";\nimport PageTitle from \"../../layouts/PageTitle\";\nimport firebaseDb from \"../../../firebase\";\nimport Select from \"react-select\";\n\nimport swal from \"sweetalert\";\nimport { Button } from \"react-bootstrap\";\n\nimport bg5 from \"../../../images/big/customer-header.jpg\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport OrdersForm from \"./OrdersForm\";\n\nconst CustomerOrder = (props) => {\n  /// Get customer list from context provider\n  const { customerList } = useDataContext();\n\n  var [currentId, setCurrentId] = useState(\"\");\n  const location = useLocation();\n  const { user, userId, orderId, order } = location.state;\n  console.log(location.state);\n  const [currentCustomer, setCurrentCustomer] = useState(user);\n  const [currentCustomerId, setCurrentCustomerId] = useState();\n\n  const [selectedOption, setSelectedOption] = useState(null);\n  const options = [];\n  if (customerList) {\n    Object.keys(customerList).map((id) => {\n      return options.push({\n        value: customerList[id].name,\n        label: (\n          <div>\n            <p>\n              {customerList[id].name} | {customerList[id].address}\n            </p>\n          </div>\n        ),\n        customer: customerList[id],\n        customerId: id,\n      });\n    });\n  }\n\n  useEffect(() => {\n    if (selectedOption) {\n      const { customer, customerId } = selectedOption;\n      setCurrentCustomer(customer);\n      setCurrentCustomerId(customerId);\n      setSelectedOption(null);\n    }\n  }, [selectedOption]);\n\n  const addOrEdit = (obj) => {\n    if (currentId === \"\") {\n      swal(\"Nice!\", \"A new customer profile is added!\", \"success\");\n      firebaseDb.ref(\"customer/\").push(obj, (err) => {\n        if (err) console.log(err);\n        else setCurrentId(\"\");\n      });\n    } else {\n      swal(\"Nice!\", \"This customer profile is updated!\", \"success\");\n      firebaseDb.ref(`customer/${currentId}`).set(obj, (err) => {\n        if (err) console.log(err);\n        else setCurrentId(\"\");\n      });\n    }\n  };\n\n  /*********************************\n  --- STYLING ---\n  ***********************************/\n\n  // styles for combobox\n  const customStyles = {\n    option: (provided, state) => ({\n      color: state.isSelected ? \"green\" : \"\",\n      padding: 10,\n    }),\n    control: () => ({\n      // none of react-select's styles are passed to <Control />\n      //width: 250,\n    }),\n    singleValue: (provided, state) => {\n      const opacity = state.isDisabled ? 0.5 : 1;\n      const transition = \"opacity 300ms\";\n\n      return { ...provided, opacity, transition };\n    },\n  };\n\n  if (!customerList) {\n    return <p>Loading...</p>;\n  }\n\n  return (\n    <Fragment>\n      <div className=\"row\">\n        {currentCustomer ? (\n          <div className=\"col-xl-4 col-xxl-4 col-lg-12 col-sm-12\">\n            <div className=\"card overflow-hidden\">\n              <div\n                className=\"text-center p-3 overlay-box \"\n                style={{ backgroundImage: `url(${bg5})` }}\n              >\n                <h3 className=\"mt-3 mb-1 text-white\">{currentCustomer.name}</h3>\n                <p className=\"text-white mb-0\">Customer</p>\n                {!location.state.user && (\n                  <span className=\"float-right\">\n                    <Button\n                      onClick={() => {\n                        setCurrentCustomer(null);\n                      }}\n                      className=\"btn btn-warning btn-xs mr-1\"\n                    >\n                      {/* <i className=\"fa fa-pencil\"></i> */}\n                      Change Customer\n                    </Button>\n                  </span>\n                )}\n              </div>\n              <ul className=\"list-group list-group-flush\">\n                <li className=\"list-group-item d-flex justify-content-between\">\n                  <span className=\"mb-0\">Contact Number</span>{\" \"}\n                  <strong className=\"text-muted\">\n                    {\" \"}\n                    {currentCustomer.contactNumber}{\" \"}\n                  </strong>\n                </li>\n                <li className=\"list-group-item d-flex justify-content-between\">\n                  <span className=\"mb-0\">Address</span>{\" \"}\n                  <strong className=\"text-muted\" align=\"right\">\n                    {currentCustomer.address}\n                  </strong>\n                </li>\n                <li className=\"list-group-item d-flex justify-content-between\">\n                  <span className=\"mb-0\">Landmark</span>{\" \"}\n                  <strong className=\"text-muted\">\n                    {currentCustomer.landmark}{\" \"}\n                  </strong>\n                </li>\n              </ul>\n              <div className=\"card-footer border-0 mt-0\">\n                <button className=\"btn btn-primary btn-lg btn-block\">\n                  <i className=\"las la-map-marked\" /> Change Delivery Address\n                </button>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className=\"col-xl-4 col-xxl-4 col-lg-12 col-sm-12\">\n            <div className=\"card overflow-hidden\">\n              {/* <p>Please select a user {JSON.stringify(customers)}</p> */}\n\n              <div style={{ margin: 25 }}>\n                <label>Please select a customer</label>\n                <Select\n                  className={\"form-control\"}\n                  defaultValue={selectedOption}\n                  onChange={setSelectedOption}\n                  value={selectedOption}\n                  options={options}\n                  styles={customStyles}\n                  components={{\n                    DropdownIndicator: () => null,\n                    IndicatorSeparator: () => null,\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        )}\n\n        <div className=\"col-xl-8 col-xxl-8 col-lg-12 col-sm-12\">\n          <OrdersForm\n            {...{\n              addOrEdit,\n              currentId,\n              currentCustomer,\n              currentCustomerId,\n              userId,\n              order,\n              orderId,\n            }}\n          />\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default CustomerOrder;\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Products/ProductsList.js",["860","861","862","863"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport firebaseDb from \"../../../firebase\";\nimport { useDataContext } from \"../../../contexts/DataContext\";\nimport swal from \"sweetalert\";\nimport {\n  Row,\n  Col,\n  Card,\n  Table,\n  Button,\n  Badge,\n  Dropdown,\n  ProgressBar,\n} from \"react-bootstrap\";\n\nimport ProductsForm from \"./ProductsForm\";\n\nconst ProductsList = () => {\n  /// Get product list from context provider\n  const { productList } = useDataContext();\n\n  var [currentId, setCurrentId] = useState(\"\");\n  var [searchTerm, setSearchTerm] = useState(\"\");\n  const [filterCategory, setFilterCategory] = useState(\"ALL\");\n\n  const addOrEdit = (obj) => {\n    console.log(\"inside addOrEdit\");\n    if (currentId === \"\") {\n      swal(\"Nice!\", \"A product is added!\", \"success\");\n      firebaseDb.ref(\"products/\").push(obj, (err) => {\n        if (err) console.log(err);\n        else setCurrentId(\"\");\n      });\n    } else {\n      swal(\"Nice!\", \"This product is updated!\", \"success\");\n      firebaseDb.ref(`products/${currentId}`).set(obj, (err) => {\n        if (err) console.log(err);\n        else setCurrentId(\"\");\n      });\n    }\n  };\n\n  const onDelete = (key) => {\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you will not be able to recover this product!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    }).then((willDelete) => {\n      if (willDelete) {\n        firebaseDb.ref(`products/${key}`).remove((err) => {\n          if (err) console.log(err);\n          else setCurrentId(\"\");\n        });\n        swal(\"Poof! This product has been deleted!\", {\n          icon: \"success\",\n        });\n      } else {\n        swal(\"Your product is safe!\");\n      }\n    });\n  };\n\n  /// filter product list based on category\n  useEffect(() => {}, [filterCategory]);\n\n  const handleFilterCategory = (category) => {\n    setFilterCategory(category);\n    setCurrentId(\"\");\n  };\n\n  const filteredProducts = (productList, category) => {\n    if (category === \"ALL\") {\n      return Object.keys(productList)\n        .filter((productId) =>\n          productList[productId].productName\n            .toLowerCase()\n            .includes(searchTerm.toLowerCase())\n        )\n        .reduce((res, key) => ((res[key] = productList[key]), res), {});\n    }\n    return Object.keys(productList)\n      .filter(\n        (productId) =>\n          productList[productId].category.toUpperCase() === category &&\n          productList[productId].productName\n            .toLowerCase()\n            .includes(searchTerm.toLowerCase())\n      )\n      .reduce((res, key) => ((res[key] = productList[key]), res), {});\n  };\n\n  const categoryBadge = (category) => {\n    if (category) {\n      switch (category.toUpperCase()) {\n        // Product category\n        case \"BEST SELLER\":\n          return <Badge variant=\"info light\">{category.toUpperCase()}</Badge>;\n        case \"FRUITS\":\n          return (\n            <Badge variant=\"secondary light\">{category.toUpperCase()}</Badge>\n          );\n        case \"CONDIMENTS\":\n          return (\n            <Badge variant=\"warning light\">{category.toUpperCase()}</Badge>\n          );\n        case \"ASSORTED\":\n          return (\n            <Badge variant=\"success light\">{category.toUpperCase()}</Badge>\n          );\n        case \"SWEETENER\":\n          return (\n            <Badge variant=\"primary light\">{category.toUpperCase()}</Badge>\n          );\n        case \"VEGETABLES\":\n          return <Badge variant=\"danger light\">{category.toUpperCase()}</Badge>;\n        default:\n          return <Badge variant=\"dark light\">{category.toUpperCase()}</Badge>;\n      }\n    }\n  };\n  return (\n    <Fragment>\n      {productList && (\n        <>\n          <Helmet>\n            <title>Veggie Go | Products </title>\n          </Helmet>\n          <div className=\"form-head d-flex mb-0 mb-lg-4 align-items-start\">\n            <div className=\"mr-auto d-none d-lg-block\">\n              <h2 className=\"text-black font-w600 mb-1\">Products</h2>\n              <p className=\"mb-0\">Keep track of your product listings here</p>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-xl-4 col-lg-4\">\n              <ProductsForm {...{ addOrEdit, currentId, productList }} />\n            </div>\n            <div className=\"col-xl-8 col-lg-8\">\n              <Row>\n                <Col lg={12}>\n                  <Card>\n                    <Card.Header>\n                      <Card.Title>\n                        My Products\n                        <Dropdown>\n                          <Dropdown.Toggle variant=\"\" size=\"m\" className=\"mt-1\">\n                            {categoryBadge(filterCategory)}\n                          </Dropdown.Toggle>\n                          <Dropdown.Menu>\n                            <Dropdown.Item\n                              onSelect={() => handleFilterCategory(\"ALL\")}\n                            >\n                              {categoryBadge(\"ALL\")}\n                            </Dropdown.Item>{\" \"}\n                            <Dropdown.Item\n                              onSelect={() =>\n                                handleFilterCategory(\"BEST SELLER\")\n                              }\n                            >\n                              {categoryBadge(\"BEST SELLER\")}\n                            </Dropdown.Item>{\" \"}\n                            <Dropdown.Item\n                              onSelect={() => handleFilterCategory(\"FRUITS\")}\n                            >\n                              {categoryBadge(\"FRUITS\")}\n                            </Dropdown.Item>\n                            <Dropdown.Item\n                              onSelect={() =>\n                                handleFilterCategory(\"CONDIMENTS\")\n                              }\n                            >\n                              {categoryBadge(\"CONDIMENTS\")}\n                            </Dropdown.Item>\n                            <Dropdown.Item\n                              onSelect={() => handleFilterCategory(\"ASSORTED\")}\n                            >\n                              {categoryBadge(\"ASSORTED\")}\n                            </Dropdown.Item>\n                            <Dropdown.Item\n                              onSelect={() => handleFilterCategory(\"SWEETENER\")}\n                            >\n                              {categoryBadge(\"SWEETENER\")}\n                            </Dropdown.Item>\n                            <Dropdown.Item\n                              onSelect={() =>\n                                handleFilterCategory(\"VEGETABLES\")\n                              }\n                            >\n                              {categoryBadge(\"VEGETABLES\")}\n                            </Dropdown.Item>\n                          </Dropdown.Menu>\n                        </Dropdown>\n                      </Card.Title>\n                      {/* <Button\n                        variant=\"primary btn-rounded\"\n                        onClick={() => {\n                          setCurrentId(\"\");\n                        }}\n                      >\n                        <span className=\"btn-icon-left text-primary\">\n                          <i className=\"fa fa-plus\" />\n                        </span>\n                        Add\n                      </Button> */}\n                      <Button\n                        className=\"btn-sm btn-primary \"\n                        onClick={() => {\n                          setCurrentId(\"\");\n                        }}\n                      >\n                        Add new product\n                      </Button>\n                    </Card.Header>\n                    <Card.Body>\n                      <div className=\"search_bar dropdown show mb-3\">\n                        <div className=\"dropdown-menushow\">\n                          <form onSubmit={(e) => e.preventDefault()}>\n                            <input\n                              className=\"form-control\"\n                              type=\"search\"\n                              placeholder=\"Search Product name\"\n                              aria-label=\"Search\"\n                              onChange={(event) =>\n                                setSearchTerm(event.target.value)\n                              }\n                            />\n                          </form>\n                        </div>\n                      </div>\n                      <Table responsive hover>\n                        <thead>\n                          <tr>\n                            <th>\n                              <strong>PRODUCT NAME</strong>\n                            </th>\n                            <th>\n                              <strong>CATEGORY</strong>\n                            </th>\n                            <th>\n                              <strong>UNIT</strong>\n                            </th>\n                            <th>\n                              <strong>PRICE</strong>\n                            </th>\n                            <th>\n                              <strong>STATUS</strong>\n                            </th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {Object.keys(\n                            filteredProducts(productList, filterCategory)\n                          ).map((id) => {\n                            return (\n                              <tr\n                                key={id}\n                                onClick={() => {\n                                  setCurrentId(id);\n                                }}\n                              >\n                                <td>\n                                  <img\n                                    src={productList[id].productImage}\n                                    className=\"rounded-lg mr-2\"\n                                    width=\"24\"\n                                    alt=\"\"\n                                  />\n                                  <span>{productList[id].productName}</span>\n                                </td>\n                                <td>\n                                  {categoryBadge(productList[id].category)}\n                                </td>\n                                <td>{productList[id].unit}</td>\n                                <td>₱ {productList[id].price}</td>\n                                <td>\n                                  {!productList[id].isActive ? (\n                                    <Badge variant=\"danger light\">\n                                      INACTIVE\n                                    </Badge>\n                                  ) : (\n                                    <Badge variant=\"primary light\">\n                                      ACTIVE\n                                    </Badge>\n                                  )}\n                                </td>\n                              </tr>\n                            );\n                          })}\n                        </tbody>\n                      </Table>\n                    </Card.Body>\n                  </Card>\n                </Col>\n              </Row>\n            </div>\n          </div>\n        </>\n      )}\n    </Fragment>\n  );\n};\n\nexport default ProductsList;\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Riders/RidersList.js",["864","865"],"import React, { Fragment, useState } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport firebaseDb from \"../../../firebase\";\nimport { useDataContext } from \"../../../contexts/DataContext\";\nimport swal from \"sweetalert\";\nimport { Row, Col, Card, Table, Button } from \"react-bootstrap\";\n\nimport RidersForm from \"./RidersForm\";\n\nconst RidersList = () => {\n  /// Get rider list from context provider\n  const { riderList } = useDataContext();\n  var [currentId, setCurrentId] = useState(\"\");\n  var [searchTerm, setSearchTerm] = useState(\"\");\n\n  const addOrEdit = (obj) => {\n    if (currentId === \"\") {\n      swal(\"Nice!\", \"A new rider profile is added!\", \"success\");\n      firebaseDb.ref(\"riders/\").push(obj, (err) => {\n        if (err) console.log(err);\n        else setCurrentId(\"\");\n      });\n    } else {\n      swal(\"Nice!\", \"This rider profile is updated!\", \"success\");\n      firebaseDb.ref(`riders/${currentId}`).set(obj, (err) => {\n        if (err) console.log(err);\n        else setCurrentId(\"\");\n      });\n    }\n  };\n\n  const onDelete = (key) => {\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you will not be able to recover this rider!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    }).then((willDelete) => {\n      if (willDelete) {\n        firebaseDb.ref(`riders/${key}`).remove((err) => {\n          if (err) console.log(err);\n          else setCurrentId(\"\");\n        });\n        swal(\"Poof! This rider profile has been deleted!\", {\n          icon: \"success\",\n        });\n      } else {\n        swal(\"Your rider profile is safe!\");\n      }\n    });\n  };\n\n  const filteredRider = (riderList, searchTerm) => {\n    if (!searchTerm) {\n      return riderList;\n    }\n    return Object.keys(riderList)\n      .filter((riderId) =>\n        riderList[riderId].riderName\n          .toLowerCase()\n          .includes(searchTerm.toLowerCase())\n      )\n      .reduce((res, key) => ((res[key] = riderList[key]), res), {});\n  };\n\n  return (\n    <Fragment>\n      {riderList && (\n        <>\n          <Helmet>\n            <title>Veggie Go | Riders</title>\n          </Helmet>\n          <div className=\"form-head d-flex mb-0 mb-lg-4 align-items-start\">\n            <div className=\"mr-auto d-none d-lg-block\">\n              <h2 className=\"text-black font-w600 mb-1\">Riders</h2>\n              <p className=\"mb-0\">Keep track of your riders here</p>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-xl-4 col-lg-4\">\n              <RidersForm {...{ addOrEdit, currentId, riderList }} />\n            </div>\n            <div className=\"col-xl-8 col-lg-8\">\n              <Row>\n                <Col lg={12}>\n                  <Card>\n                    <Card.Header>\n                      <Card.Title></Card.Title>\n                      <span className=\"float-right\">\n                        <Button\n                          className=\"btn-sm btn-primary btn-block\"\n                          onClick={() => {\n                            setCurrentId(\"\");\n                          }}\n                        >\n                          Add new rider\n                        </Button>\n                      </span>\n                    </Card.Header>\n                    <Card.Body>\n                      <div className=\"search_bar dropdown show mb-3\">\n                        <div className=\"dropdown-menushow\">\n                          <form onSubmit={(e) => e.preventDefault()}>\n                            <input\n                              className=\"form-control\"\n                              type=\"search\"\n                              placeholder=\"Search Rider name\"\n                              aria-label=\"Search\"\n                              onChange={(event) =>\n                                setSearchTerm(event.target.value)\n                              }\n                            />\n                          </form>\n                        </div>\n                      </div>\n                      <Table responsive hover>\n                        <thead>\n                          <tr>\n                            <th>\n                              <strong>NAME</strong>\n                            </th>\n                            <th>\n                              <strong>CONTACT #</strong>\n                            </th>\n                            <th>\n                              <strong>ADDRESS</strong>\n                            </th>\n                            <th>\n                              <strong>VEHICLE TYPE</strong>\n                            </th>\n                            <th>\n                              <strong>VEHICLE PLATE #</strong>\n                            </th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {Object.keys(\n                            filteredRider(riderList, searchTerm)\n                          ).map((id) => {\n                            return (\n                              <tr\n                                key={id}\n                                onClick={() => {\n                                  setCurrentId(id);\n                                }}\n                              >\n                                <td>\n                                  <img\n                                    src={riderList[id].riderImage}\n                                    className=\"rounded-lg mr-2\"\n                                    width=\"24\"\n                                    alt=\"\"\n                                  />\n                                  <span>{riderList[id].riderName}</span>\n                                </td>\n                                <td>{riderList[id].riderContactNum}</td>\n                                <td>{riderList[id].riderAddress}</td>\n                                <td>{riderList[id].vehicleType}</td>\n                                <td>{riderList[id].vehiclePlateNum}</td>\n                              </tr>\n                            );\n                          })}\n                        </tbody>\n                      </Table>\n                    </Card.Body>\n                  </Card>\n                </Col>\n              </Row>\n            </div>\n          </div>\n        </>\n      )}\n    </Fragment>\n  );\n};\n\nexport default RidersList;\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Profile/Profile.js",["866","867","868","869","870","871","872","873","874","875","876","877","878","879","880","881"],"import React, { Fragment, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n//** Import Image */\nimport profile01 from \"../../../images/profile/1.jpg\";\nimport profile02 from \"../../../images/profile/2.jpg\";\nimport profile03 from \"../../../images/profile/3.jpg\";\nimport profile04 from \"../../../images/profile/4.jpg\";\nimport profile05 from \"../../../images/profile/5.jpg\";\nimport profile06 from \"../../../images/profile/6.jpg\";\nimport profile07 from \"../../../images/profile/7.jpg\";\nimport profile08 from \"../../../images/profile/8.jpg\";\nimport profile09 from \"../../../images/profile/9.jpg\";\nimport profile from \"../../../images/profile/kmb.jpeg\";\nimport { Dropdown, Button, Modal } from \"react-bootstrap\";\n\nimport PageTitle from \"../../layouts/PageTitle\";\n\nimport { SRLWrapper } from \"simple-react-lightbox\";\n\nconst Profile = () => {\n   const [activeToggle, setActiveToggle] = useState(\"posts\");\n   const [sendMessage, setSendMessage] = useState(false);\n\n   const [replay, setReplay] = useState(false);\n\n   const options = {\n      settings: {\n         overlayColor: \"#000000\",\n      },\n   };\n   return (\n      <Fragment>\n\n         <div className=\"row\">\n            <div className=\"col-lg-12\">\n               <div className=\"profile card card-body px-3 pt-3 pb-0\">\n                  <div className=\"profile-head\">\n                     <div className=\"photo-content\">\n                        <div className=\"cover-photo\"></div>\n                     </div>\n                     <div className=\"profile-info\">\n                        <div className=\"profile-photo\">\n                           <img\n                              src={profile}\n                              className=\"img-fluid rounded-circle\"\n                              alt=\"profile\"\n                           />\n                        </div>\n                        <div className=\"profile-details\">\n                           <div className=\"profile-name px-3 pt-2\">\n                              <h4 className=\"text-primary mb-0\">\n                                 Kent Michael Baguion\n                              </h4>\n                              <p>Super Admin</p>\n                           </div>\n                        </div>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         \n         </div>\n         <div className=\"row\">\n            \n            <div className=\"col-xl-12\">\n               <div className=\"card\">\n                  <div className=\"card-body\">\n                     <h4 className=\"text-primary\">\n                        Settings\n                     </h4>\n                     <div className=\"profile-tab\">\n                        <div className=\"custom-tab-1\">\n                           <ul className=\"nav nav-tabs\">\n                              <li\n                                 className=\"nav-item\"\n                                 onClick={() => setActiveToggle(\"posts\")}\n                              >\n                                 <Link\n                                    to=\"#my-posts\"\n                                    data-toggle=\"tab\"\n                                    className={`nav-link ${\n                                       activeToggle === \"posts\"\n                                          ? \"active show\"\n                                          : \"\"\n                                    }`}\n                                 >\n                                    Posts\n                                 </Link>\n                              </li>\n                              <li\n                                 className=\"nav-item\"\n                                 onClick={() => setActiveToggle(\"aboutMe\")}\n                              >\n                                 <Link\n                                    to=\"#about-me\"\n                                    data-toggle=\"tab\"\n                                    className={`nav-link ${\n                                       activeToggle === \"aboutMe\"\n                                          ? \"active show\"\n                                          : \"\"\n                                    }`}\n                                 >\n                                    Product\n                                 </Link>\n                              </li>\n                              <li className=\"nav-item\">\n                                 <Link\n                                    to=\"#profile-settings\"\n                                    data-toggle=\"tab\"\n                                    onClick={() => setActiveToggle(\"setting\")}\n                                    className={`nav-link ${\n                                       activeToggle === \"setting\"\n                                          ? \"active show\"\n                                          : \"\"\n                                    }`}\n                                 >\n                                    Profile\n                                 </Link>\n                              </li>\n                              \n                           </ul>\n                           <div className=\"tab-content\">\n                              <div\n                                 id=\"my-posts\"\n                                 className={`tab-pane fade ${\n                                    activeToggle === \"posts\"\n                                       ? \"active show\"\n                                       : \"\"\n                                 }`}\n                              >\n                                 <div className=\"my-post-content pt-3\">\n                                    <div className=\"post-input\">\n                                       <textarea\n                                          name=\"textarea\"\n                                          id=\"textarea\"\n                                          cols=\"30\"\n                                          rows=\"5\"\n                                          className=\"form-control bg-transparent\"\n                                          defaultValue=\"Please type what you want....\"\n                                       />\n                                       <Link\n                                          to=\"/app-profile\"\n                                          className=\"btn btn-primary light px-3\"\n                                       >\n                                          <i className=\"fa fa-link\" />\n                                       </Link>\n                                       <Link\n                                          to=\"/app-profile\"\n                                          className=\"btn btn-primary light mr-1 px-3 ml-1\"\n                                       >\n                                          <i className=\"fa fa-camera\" />\n                                       </Link>\n                                       <Link\n                                          to=\"/app-profile\"\n                                          className=\"btn btn-primary\"\n                                       >\n                                          Post\n                                       </Link>\n                                    </div>\n                                    <div className=\"profile-uoloaded-post border-bottom-1 pb-5\">\n                                       <img\n                                          src={profile08}\n                                          alt=\"\"\n                                          className=\"img-fluid\"\n                                       />\n                                       <Link\n                                          className=\"post-title\"\n                                          to=\"/post-details\"\n                                       >\n                                          <h4>\n                                             Collection of textile samples lay\n                                             spread\n                                          </h4>\n                                       </Link>\n                                       <p>\n                                          A wonderful serenity has take\n                                          possession of my entire soul like\n                                          these sweet morning of spare which\n                                          enjoy whole heart.A wonderful serenity\n                                          has take possession of my entire soul\n                                          like these sweet morning of spare\n                                          which enjoy whole heart.\n                                       </p>\n                                       <button className=\"btn btn-primary mr-2\">\n                                          <span className=\"mr-2\">\n                                             <i className=\"fa fa-heart\" />\n                                          </span>\n                                          Like\n                                       </button>\n                                       <button\n                                          className=\"btn btn-secondary\"\n                                          onClick={() => setReplay(true)}\n                                       >\n                                          <span className=\"mr-2\">\n                                             <i className=\"fa fa-reply\" />\n                                          </span>\n                                          Reply\n                                       </button>\n                                    </div>\n                                    <div className=\"profile-uoloaded-post border-bottom-1 pb-5\">\n                                       <img\n                                          src={profile09}\n                                          alt=\"\"\n                                          className=\"img-fluid\"\n                                       />\n                                       <Link\n                                          className=\"post-title\"\n                                          to=\"/post-details\"\n                                       >\n                                          <h4>\n                                             Collection of textile samples lay\n                                             spread\n                                          </h4>\n                                       </Link>\n                                       <p>\n                                          A wonderful serenity has take\n                                          possession of my entire soul like\n                                          these sweet morning of spare which\n                                          enjoy whole heart.A wonderful serenity\n                                          has take possession of my entire soul\n                                          like these sweet morning of spare\n                                          which enjoy whole heart.\n                                       </p>\n                                       <button className=\"btn btn-primary mr-2\">\n                                          <span className=\"mr-2\">\n                                             <i className=\"fa fa-heart\" />\n                                          </span>\n                                          Like\n                                       </button>\n                                       <button\n                                          className=\"btn btn-secondary\"\n                                          onClick={() => setReplay(true)}\n                                       >\n                                          <span className=\"mr-2\">\n                                             <i className=\"fa fa-reply\" />\n                                          </span>\n                                          Reply\n                                       </button>\n                                    </div>\n                                    <div className=\"profile-uoloaded-post pb-3\">\n                                       <img\n                                          src={profile08}\n                                          alt=\"\"\n                                          className=\"img-fluid\"\n                                       />\n                                       <Link\n                                          className=\"post-title\"\n                                          to=\"/post-details\"\n                                       >\n                                          <h4>\n                                             Collection of textile samples lay\n                                             spread\n                                          </h4>\n                                       </Link>\n                                       <p>\n                                          A wonderful serenity has take\n                                          possession of my entire soul like\n                                          these sweet morning of spare which\n                                          enjoy whole heart.A wonderful serenity\n                                          has take possession of my entire soul\n                                          like these sweet morning of spare\n                                          which enjoy whole heart.\n                                       </p>\n                                       <button className=\"btn btn-primary mr-2\">\n                                          <span className=\"mr-2\">\n                                             <i className=\"fa fa-heart\" />\n                                          </span>\n                                          Like\n                                       </button>\n                                       <button\n                                          className=\"btn btn-secondary\"\n                                          onClick={() => setReplay(true)}\n                                       >\n                                          <span className=\"mr-2\">\n                                             <i className=\"fa fa-reply\" />\n                                          </span>\n                                          Reply\n                                       </button>\n                                    </div>\n                                    \n                                 </div>\n                              </div>\n                              <div\n                                 id=\"about-me\"\n                                 className={`tab-pane fade ${\n                                    activeToggle === \"aboutMe\"\n                                       ? \"active show\"\n                                       : \"\"\n                                 }`}\n                              >\n                                 <div className=\"profile-about-me\">\n                                    <div className=\"pt-4 border-bottom-1 pb-3\">\n                                       \n                                       <p className=\"mb-2\">\n                                          A wonderful serenity has taken\n                                          possession of my entire soul, like\n                                          these sweet mornings of spring which I\n                                          enjoy with my whole heart. I am alone,\n                                          and feel the charm of existence was\n                                          created for the bliss of souls like\n                                          mine.I am so happy, my dear friend, so\n                                          absorbed in the exquisite sense of\n                                          mere tranquil existence, that I\n                                          neglect my talents.\n                                       </p>\n                                       <p>\n                                          A collection of textile samples lay\n                                          spread out on the table - Samsa was a\n                                          travelling salesman - and above it\n                                          there hung a picture that he had\n                                          recently cut out of an illustrated\n                                          magazine and housed in a nice, gilded\n                                          frame.\n                                       </p>\n                                    </div>\n                                 </div>\n                                 <div className=\"profile-skills mb-5\">\n                                    <h4 className=\"text-primary mb-2\">\n                                       Skills\n                                    </h4>\n                                    <Link\n                                       to=\"/app-profile\"\n                                       className=\"btn btn-primary light btn-xs mb-1 mr-1\"\n                                    >\n                                       Admin\n                                    </Link>\n                                    <Link\n                                       to=\"/app-profile\"\n                                       className=\"btn btn-primary light btn-xs mb-1 mr-1\"\n                                    >\n                                       Dashboard\n                                    </Link>\n                                    <Link\n                                       to=\"/app-profile\"\n                                       className=\"btn btn-primary light btn-xs mb-1 mr-1\"\n                                    >\n                                       Photoshop\n                                    </Link>\n                                    <Link\n                                       to=\"/app-profile\"\n                                       className=\"btn btn-primary light btn-xs mb-1 mr-1\"\n                                    >\n                                       Bootstrap\n                                    </Link>\n                                    <Link\n                                       to=\"/app-profile\"\n                                       className=\"btn btn-primary light btn-xs mb-1 mr-1\"\n                                    >\n                                       Responsive\n                                    </Link>\n                                    <Link\n                                       to=\"/app-profile\"\n                                       className=\"btn btn-primary light btn-xs mb-1 mr-1\"\n                                    >\n                                       Crypto\n                                    </Link>\n                                 </div>\n                                 <div className=\"profile-lang  mb-5\">\n                                    <h4 className=\"text-primary mb-2\">\n                                       Language\n                                    </h4>\n                                    <Link\n                                       to=\"/app-profile\"\n                                       className=\"text-muted pr-3 f-s-16\"\n                                    >\n                                       <i className=\"flag-icon flag-icon-us\" />\n                                       English\n                                    </Link>\n                                    <Link\n                                       to=\"/app-profile\"\n                                       className=\"text-muted pr-3 f-s-16\"\n                                    >\n                                       <i className=\"flag-icon flag-icon-fr\" />\n                                       French\n                                    </Link>\n                                    <Link\n                                       to=\"/app-profile\"\n                                       className=\"text-muted pr-3 f-s-16\"\n                                    >\n                                       <i className=\"flag-icon flag-icon-bd\" />\n                                       Bangla\n                                    </Link>\n                                 </div>\n                                 <div className=\"profile-personal-info\">\n                                    <h4 className=\"text-primary mb-4\">\n                                       Personal Information\n                                    </h4>\n                                    <div className=\"row mb-2\">\n                                       <div className=\"col-sm-3 col-5\">\n                                          <h5 className=\"f-w-500\">\n                                             Name\n                                             <span className=\"pull-right\">\n                                                :\n                                             </span>\n                                          </h5>\n                                       </div>\n                                       <div className=\"col-sm-9 col-7\">\n                                          <span>Mitchell C.Shay</span>\n                                       </div>\n                                    </div>\n                                    <div className=\"row mb-2\">\n                                       <div className=\"col-sm-3 col-5\">\n                                          <h5 className=\"f-w-500\">\n                                             Email\n                                             <span className=\"pull-right\">\n                                                :\n                                             </span>\n                                          </h5>\n                                       </div>\n                                       <div className=\"col-sm-9 col-7\">\n                                          <span>example@examplel.com</span>\n                                       </div>\n                                    </div>\n                                    <div className=\"row mb-2\">\n                                       <div className=\"col-sm-3 col-5\">\n                                          <h5 className=\"f-w-500\">\n                                             Availability\n                                             <span className=\"pull-right\">\n                                                :\n                                             </span>\n                                          </h5>\n                                       </div>\n                                       <div className=\"col-sm-9 col-7\">\n                                          <span>Full Time (Free Lancer)</span>\n                                       </div>\n                                    </div>\n                                    <div className=\"row mb-2\">\n                                       <div className=\"col-sm-3 col-5\">\n                                          <h5 className=\"f-w-500\">\n                                             Age\n                                             <span className=\"pull-right\">\n                                                :\n                                             </span>\n                                          </h5>\n                                       </div>\n                                       <div className=\"col-sm-9 col-7\">\n                                          <span>27</span>\n                                       </div>\n                                    </div>\n                                    <div className=\"row mb-2\">\n                                       <div className=\"col-sm-3 col-5\">\n                                          <h5 className=\"f-w-500\">\n                                             Location\n                                             <span className=\"pull-right\">\n                                                :\n                                             </span>\n                                          </h5>\n                                       </div>\n                                       <div className=\"col-sm-9 col-7\">\n                                          <span>\n                                             Rosemont Avenue Melbourne, Florida\n                                          </span>\n                                       </div>\n                                    </div>\n                                    <div className=\"row mb-2\">\n                                       <div className=\"col-sm-3 col-5\">\n                                          <h5 className=\"f-w-500\">\n                                             Year Experience\n                                             <span className=\"pull-right\">\n                                                :\n                                             </span>\n                                          </h5>\n                                       </div>\n                                       <div className=\"col-sm-9 col-7\">\n                                          <span>07 Year Experiences</span>\n                                       </div>\n                                    </div>\n                                 </div>\n                              </div>\n                              <div\n                                 id=\"profile-settings\"\n                                 className={`tab-pane fade ${\n                                    activeToggle === \"setting\"\n                                       ? \"active show\"\n                                       : \"\"\n                                 }`}\n                              >\n                                 <div className=\"pt-3\">\n                                    <div className=\"settings-form\">\n                                       {/* <h4 className=\"text-primary\">\n                                          Account Settings\n                                       </h4> */}\n                                       <form\n                                          onSubmit={(e) => e.preventDefault()}\n                                       >\n                                          <div className=\"form-row\">\n                                             <div className=\"form-group col-md-6\">\n                                                <label>Email</label>\n                                                <input\n                                                   type=\"email\"\n                                                   placeholder=\"Email\"\n                                                   className=\"form-control\"\n                                                />\n                                             </div>\n                                             <div className=\"form-group col-md-6\">\n                                                <label>Password</label>\n                                                <input\n                                                   type=\"password\"\n                                                   placeholder=\"Password\"\n                                                   className=\"form-control\"\n                                                />\n                                             </div>\n                                          </div>\n                                          <div className=\"form-group\">\n                                             <label>Address</label>\n                                             <input\n                                                type=\"text\"\n                                                placeholder=\"1234 Main St\"\n                                                className=\"form-control\"\n                                             />\n                                          </div>\n                                          <div className=\"form-group\">\n                                             <label>Address 2</label>\n                                             <input\n                                                type=\"text\"\n                                                placeholder=\"Apartment, studio, or floor\"\n                                                className=\"form-control\"\n                                             />\n                                          </div>\n                                          <div className=\"form-row\">\n                                             <div className=\"form-group col-md-6\">\n                                                <label>City</label>\n                                                <input\n                                                   type=\"text\"\n                                                   className=\"form-control\"\n                                                />\n                                             </div>\n                                             <div className=\"form-group col-md-4\">\n                                                <label>State</label>\n                                                <select\n                                                   className=\"form-control\"\n                                                   id=\"inputState\"\n                                                   defaultValue=\"option-1\"\n                                                >\n                                                   <option value=\"option-1\">\n                                                      Choose...\n                                                   </option>\n                                                   <option value=\"option-2\">\n                                                      Option 1\n                                                   </option>\n                                                   <option value=\"option-3\">\n                                                      Option 2\n                                                   </option>\n                                                   <option value=\"option-4\">\n                                                      Option 3\n                                                   </option>\n                                                </select>\n                                             </div>\n                                             <div className=\"form-group col-md-2\">\n                                                <label>Zip</label>\n                                                <input\n                                                   type=\"text\"\n                                                   className=\"form-control\"\n                                                />\n                                             </div>\n                                          </div>\n                                          <div className=\"form-group\">\n                                             <div className=\"custom-control custom-checkbox\">\n                                                <input\n                                                   type=\"checkbox\"\n                                                   className=\"custom-control-input\"\n                                                   id=\"gridCheck\"\n                                                />\n                                                <label\n                                                   className=\"custom-control-label\"\n                                                   htmlFor=\"gridCheck\"\n                                                >\n                                                   Check me out\n                                                </label>\n                                             </div>\n                                          </div>\n                                          <button\n                                             className=\"btn btn-primary\"\n                                             type=\"submit\"\n                                          >\n                                             Sign in\n                                          </button>\n                                       </form>\n                                    </div>\n                                 </div>\n                              </div>\n                           </div>\n                        </div>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n      </Fragment>\n   );\n};\n\nexport default Profile;\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/bootstrap/Alert.js",["882","883","884","885"],"import React, { Fragment, useState } from \"react\";\n\nimport data from \"./alertData\";\nimport PageTitle from \"../../layouts/PageTitle\";\nimport { Row, Card, Col, Alert, Button, Badge, Media } from \"react-bootstrap\";\n\nconst UiAlert = () => {\n   const [socialMedia, setSocialMedia] = useState(\n      Array.from(data.socialMediaData)\n   );\n\n   const [leftIconBig, setLeftIconBig] = useState(\n      Array.from(data.leftBigIconData)\n   );\n\n   const [basicData, setBasicData] = useState(Array.from(data.mainData));\n   const [solidColor, setSolidColor] = useState(Array.from(data.mainData));\n   const [square, setSquare] = useState(Array.from(data.mainData));\n   const [rounded, setRounded] = useState(Array.from(data.mainData));\n   const [dismissable, setDismissable] = useState(Array.from(data.mainData));\n   const [alt, setAlt] = useState(Array.from(data.mainData));\n   const [solidAlt, setSolidAlt] = useState(Array.from(data.mainData));\n   const [dismissableWithSolid, setDismissableWithSolid] = useState(\n      Array.from(data.mainData)\n   );\n   const [withLink, setWithLink] = useState(Array.from(data.mainData));\n   const [withLinkAndSolidColor, setWithLinkAndSolidColor] = useState(\n      Array.from(data.mainData)\n   );\n   const [inlineNotifications, setInlineNotifications] = useState(\n      Array.from(data.mainData)\n   );\n   const [iconLeft, setIconLeft] = useState(Array.from(data.mainData));\n   const [outline, setOutline] = useState(Array.from(data.mainData));\n   const [messageAlert, setMessageAlert] = useState(Array.from(data.mainData));\n   const [messageAlertWithSolidColor, setMessageAlertWithSolidColor] = useState(\n      Array.from(data.mainData)\n   );\n\n   const onClick = (index, setData, variables) =>\n      setData(variables.filter((data, i) => i !== index && data));\n\n   const btn = (i, dataset, data, height) => (\n      <Button\n         variant=\"\"\n         className={`close ${height ? \"h-100\" : \"\"}`}\n         ata-dismiss=\"alert\"\n         aria-label=\"Close\"\n         onClick={() => onClick(i, dataset, data)}\n      >\n         <span>\n            <i className=\"mdi mdi-close\"></i>\n         </span>\n      </Button>\n   );\n\n   const alertDefferentMsg = () =>\n      data.variant === \"info\"\n         ? \"Hey! Take a quick look.\"\n         : data.variant === \"dark\" ||\n           data.variant === \"light\" ||\n           data.variant === \"danger\"\n         ? \"Error! Something Went wrong\"\n         : data.variant === \"warning\"\n         ? \"Warning! Why you did it to me!\"\n         : \"WOW! Eveything looks OK.\";\n\n   return (\n      <Fragment>\n         <PageTitle motherMenu=\"Bootstrap\" activeMenu=\"Alert\" />\n         <Row>\n            <Col xl={6} className=\"col-xxl-12\">\n               <Card>\n                  <Card.Header className=\"d-block\">\n                     <Card.Title>Basic Alerts</Card.Title>\n                     <Card.Text className=\"subtitle mb-0\">\n                        Bootstrap default style\n                     </Card.Text>\n                  </Card.Header>\n                  <Card.Body>\n                     {basicData.map((data, i) => (\n                        <Alert\n                           key={i}\n                           variant={data.variant}\n                           className=\"alert-dismissible fade show\"\n                        >\n                           {data.emoji}\n                           <strong>{data.msg}</strong> {data.text}\n                           {btn(i, setBasicData, basicData, true)}\n                        </Alert>\n                     ))}\n                  </Card.Body>\n               </Card>\n            </Col>\n            <Col xl={6} className=\"col-xxl-12\">\n               <Card>\n                  <Card.Header className=\"d-block\">\n                     <Card.Title>Solid color alerts</Card.Title>\n                     <Card.Text className=\"subtitle mb-0\">\n                        add <code>.solid</code> class to change the solid color.\n                     </Card.Text>\n                  </Card.Header>\n                  <Card.Body>\n                     {solidColor.map((data, i) => (\n                        <Alert\n                           key={i}\n                           variant={data.variant}\n                           className=\"solid alert-dismissible fade show\"\n                        >\n                           <strong>{data.msg}</strong> {data.text}\n                           {btn(i, setSolidColor, solidColor, true)}\n                        </Alert>\n                     ))}\n                  </Card.Body>\n               </Card>\n            </Col>\n            <Col xl={6} className=\"col-xxl-12\">\n               <Card>\n                  <Card.Header className=\"d-block\">\n                     <Card.Title>Square alerts</Card.Title>\n                     <p className=\"mb-0 subtitle\">\n                        add <code>.alert-square</code> class to change the solid\n                        color.\n                     </p>\n                  </Card.Header>\n                  <Card.Body>\n                     {square.map((data, i) => (\n                        <Alert\n                           key={i}\n                           variant={data.variant}\n                           className=\"solid alert-square\"\n                        >\n                           <strong>{data.msg}</strong> {data.text}\n                        </Alert>\n                     ))}\n                  </Card.Body>\n               </Card>\n            </Col>\n            <Col xl={6} className=\"col-xxl-12\">\n               <Card>\n                  <Card.Header className=\"d-block\">\n                     <Card.Title>Rounded alerts</Card.Title>\n                     <p className=\"mb-0 subtitle\">\n                        add <code>.alert-rounded</code> class to change the\n                        solid color.\n                     </p>\n                  </Card.Header>\n                  <Card.Body>\n                     {rounded.map((data, i) => (\n                        <Alert\n                           key={i}\n                           variant={data.variant}\n                           className=\"solid alert-rounded\"\n                        >\n                           <strong>{data.msg}</strong> {data.text}\n                        </Alert>\n                     ))}\n                  </Card.Body>\n               </Card>\n            </Col>\n            <Col xl={6} className=\"col-xxl-12\">\n               <Card>\n                  <Card.Header className=\"d-block\">\n                     <Card.Title>Dismissable Alerts</Card.Title>\n                     <Card.Text className=\"subtitle mb-0\">\n                        Bootstrap default style\n                     </Card.Text>\n                  </Card.Header>\n                  <Card.Body>\n                     {dismissable.map((data, i) => (\n                        <Alert\n                           key={i}\n                           variant={data.variant}\n                           className=\"alert-dismissible fade show\"\n                        >\n                           {data.emoji}\n                           <strong>{data.msg}</strong> {data.text}\n                           {btn(i, setDismissable, dismissable, true)}\n                        </Alert>\n                     ))}\n                  </Card.Body>\n               </Card>\n            </Col>\n            <Col xl={6} className=\"col-xxl-12\">\n               <Card>\n                  <Card.Header className=\"d-block\">\n                     <Card.Title>Alerts alt</Card.Title>\n                     <p className=\"mb-0 subtitle\">\n                        add <code>.alert-alt</code> class to change the solid\n                        color.\n                     </p>\n                  </Card.Header>\n                  <Card.Body>\n                     {alt.map((data, i) => (\n                        <Alert\n                           key={i}\n                           variant={data.variant}\n                           className=\"alert-dismissible alert-alt fade show\"\n                        >\n                           {data.emoji}\n                           <strong>{data.msg}</strong> {data.text}\n                           {btn(i, setAlt, alt, true)}\n                        </Alert>\n                     ))}\n                  </Card.Body>\n               </Card>\n            </Col>\n            <Col xl={6} className=\"col-xxl-12\">\n               <Card>\n                  <Card.Header className=\"d-block\">\n                     <Card.Title>Solid Alt</Card.Title>\n                     <p className=\"mb-0 subtitle\">\n                        add <code>.alert-alt.solid</code> class to change the\n                        solid color.\n                     </p>\n                  </Card.Header>\n                  <Card.Body>\n                     {solidAlt.map((data, i) => (\n                        <Alert\n                           key={i}\n                           variant={data.variant}\n                           className=\"alert-dismissible solid alert-alt fade show\"\n                        >\n                           {data.emoji}\n                           <strong>{data.msg}</strong> {data.text}\n                           {btn(i, setSolidAlt, solidAlt, true)}\n                        </Alert>\n                     ))}\n                  </Card.Body>\n               </Card>\n            </Col>\n            <Col xl={6} className=\"col-xxl-12\">\n               <Card>\n                  <Card.Header className=\"d-block\">\n                     <Card.Title>Dismissable with solid</Card.Title>\n                     <p className=\"mb-0 subtitle\">\n                        add <code>.solid</code> class to change the solid color.\n                     </p>\n                  </Card.Header>\n                  <Card.Body>\n                     {dismissableWithSolid.map((data, i) => (\n                        <Alert\n                           key={i}\n                           variant={data.variant}\n                           className=\"alert-dismissible solid  fade show\"\n                        >\n                           {data.emoji}\n                           <strong>{data.msg}</strong> {data.text}\n                           {btn(\n                              i,\n                              setDismissableWithSolid,\n                              dismissableWithSolid,\n                              true\n                           )}\n                        </Alert>\n                     ))}\n                  </Card.Body>\n               </Card>\n            </Col>\n            <Col xl={6} className=\"col-xxl-12\">\n               <Card>\n                  <Card.Header className=\"d-block\">\n                     <Card.Title>Alert with Link</Card.Title>\n                     <p className=\"mb-0 subtitle\">Bootstrap default style</p>\n                  </Card.Header>\n                  <Card.Body>\n                     {withLink.map((data, i) => (\n                        <Alert\n                           key={i}\n                           variant={data.variant}\n                           className=\"alert-dismissible  fade show\"\n                        >\n                           <strong>{alertDefferentMsg(data)}</strong>{\" \"}\n                           <a href=\"#\">\n                              {\" \"}\n                              {data.variant === \"info\"\n                                 ? \"My birthday party\"\n                                 : data.variant === \"dark\" ||\n                                   data.variant === \"light\" ||\n                                   data.variant === \"danger\"\n                                 ? \"Click here for details.\"\n                                 : data.variant === \"warning\"\n                                 ? \"Check this out\"\n                                 : \"Please check this one as well\"}{\" \"}\n                           </a>\n                           {btn(i, setWithLink, withLink, true)}\n                        </Alert>\n                     ))}\n                  </Card.Body>\n               </Card>\n            </Col>\n\n            <Col xl={6} className=\"col-xxl-12\">\n               <Card>\n                  <Card.Header className=\"d-block\">\n                     <Card.Title>Alert with Link and solid color</Card.Title>\n                     <p className=\"mb-0 subtitle\">\n                        add <code>.solid</code> class to change the solid color.\n                     </p>\n                  </Card.Header>\n                  <Card.Body>\n                     {withLinkAndSolidColor.map((data, i) => (\n                        <Alert\n                           key={i}\n                           variant={data.variant}\n                           className=\"alert-dismissible solid fade show\"\n                        >\n                           <strong>{alertDefferentMsg(data)}</strong>{\" \"}\n                           <Badge\n                              variant={data.variant}\n                              as=\"a\"\n                              href=\"#\"\n                              className=\"badge-sm light ml-1\"\n                           >\n                              upgrade\n                           </Badge>\n                           {btn(\n                              i,\n                              setWithLinkAndSolidColor,\n                              withLinkAndSolidColor,\n                              true\n                           )}\n                        </Alert>\n                     ))}\n                  </Card.Body>\n               </Card>\n            </Col>\n\n            <Col lg={12}>\n               <Card>\n                  <Card.Header className=\"d-block\">\n                     <Card.Title>Inline Notifications</Card.Title>\n                     <p className=\"mb-0 subtitle\">\n                        Default inline notification\n                     </p>\n                  </Card.Header>\n                  <Card.Body>\n                     <Row>\n                        {inlineNotifications.map((data, i) => (\n                           <Col xl={6} key={i}>\n                              <Alert\n                                 variant={data.variant}\n                                 className=\"alert alert-primary notification\"\n                              >\n                                 <p className=\"notificaiton-title mb-2\">\n                                    <strong>Success!</strong> Vampires The\n                                    Romantic Ideology Behind Them\n                                 </p>\n                                 <p>\n                                    The following article covers a topic that\n                                    has recently moved to center stage-at lease\n                                    it seems that way.\n                                 </p>\n                                 <Button variant={data.variant} size=\"sm\">\n                                    Confirm\n                                 </Button>\n                                 <Button variant=\"link\" size=\"sm\">\n                                    Cancel\n                                 </Button>\n                              </Alert>\n                           </Col>\n                        ))}\n                     </Row>\n                  </Card.Body>\n               </Card>\n            </Col>\n            <Col xl={6} className=\"col-xxl-12\">\n               <Card>\n                  <Card.Header className=\"d-block\">\n                     <Card.Title>Alert Icon Left</Card.Title>\n                     <p className=\"mb-0 subtitle\">\n                        add <code>.alert-right-icon</code> to change the style\n                     </p>\n                  </Card.Header>\n                  <Card.Body>\n                     {iconLeft.map((data, i) => (\n                        <Alert\n                           key={i}\n                           variant={data.variant}\n                           className=\"alert-dismissible fade show solid alert-right-icon\"\n                        >\n                           <span>\n                              <i className={data.icon}></i>\n                           </span>\n                           {data.msg} {data.text}\n                           {btn(i, setIconLeft, iconLeft, true)}\n                        </Alert>\n                     ))}\n                  </Card.Body>\n               </Card>\n            </Col>\n            <Col xl={6} className=\"col-xxl-12\">\n               <Card>\n                  <Card.Header className=\"d-block\">\n                     <Card.Title>Alert outline</Card.Title>\n                     <p className=\"mb-0 subtitle\">\n                        add{\" \"}\n                        <code>.alert-outline-primary,secondary,success...</code>{\" \"}\n                        to change the style\n                     </p>\n                  </Card.Header>\n                  <Card.Body>\n                     {outline.map((data, i) => (\n                        <Alert\n                           key={i}\n                           variant={`outline-${data.variant}`}\n                           className=\" alert-dismissible fade show\"\n                        >\n                           {data.msg} {data.text}\n                           {btn(i, setOutline, outline, true)}\n                        </Alert>\n                     ))}\n                  </Card.Body>\n               </Card>\n            </Col>\n            <div className=\"col-xl-12 col-xxl-12\">\n               <Card>\n                  <Card.Header className=\"d-block\">\n                     <Card.Title>Alert Social</Card.Title>\n                     <p className=\"mb-0 subtitle\">\n                        add{\" \"}\n                        <code>\n                           .alert-social\n                           .facebook,.twitter,.linkedin,.google-plus\n                        </code>{\" \"}\n                        to change the style\n                     </p>\n                  </Card.Header>\n                  <Card.Body>\n                     <Row>\n                        {socialMedia.map((social, i) => (\n                           <div className=\"col-xl-6\">\n                              <Alert\n                                 variant=\"social\"\n                                 className={`alert-dismissible ${social.name\n                                    .split(\" \")\n                                    .join(\"-\")\n                                    .toLocaleLowerCase()}`}\n                              >\n                                 {btn(i, setSocialMedia, socialMedia, false)}\n                                 <Media>\n                                    <Alert variant=\"social-icon\" className=\"p-0\">\n                                       <span>\n                                          <i className={social.icon} />\n                                       </span>\n                                    </Alert>\n                                    <Media.Body>\n                                       <h5 className=\"mt-1 mb-2 text-white\">\n                                          {social.name}\n                                       </h5>\n                                       <p className=\"mb-0\">\n                                          Cras sit amet nibh libero, in gravida\n                                          nulla. tempus viverra turpis. Fusce\n                                          condimentum nunc ac nisi vulputate\n                                          fringilla. Donec lacinia congue felis\n                                          in faucibus.\n                                       </p>\n                                    </Media.Body>\n                                 </Media>\n                              </Alert>\n                           </div>\n                        ))}\n                     </Row>\n                  </Card.Body>\n               </Card>\n            </div>\n            <Col className=\"col-xl-12 col-xxl-12\">\n               <Card>\n                  <Card.Header className=\"d-block\">\n                     <Card.Title>Message Alert</Card.Title>\n                     <Card.Text className=\"subtitle mb-0\">\n                        Bootstrap default style\n                     </Card.Text>\n                  </Card.Header>\n                  <Card.Body>\n                     <Row>\n                        {messageAlert.map((data, i) => (\n                           <Col xl={6} key={i}>\n                              <Alert\n                                 variant={data.variant}\n                                 className=\"alert-dismissible\"\n                              >\n                                 {btn(i, setMessageAlert, messageAlert, false)}\n                                 <Media>\n                                    <Media.Body>\n                                       <h5 className=\"mt-1 mb-1\">\n                                          Notifications\n                                       </h5>\n                                       <p className=\"mb-0\">\n                                          Cras sit amet nibh libero, in gravida\n                                          nulla. tempus viverra turpis. Fusce\n                                          condimentum nunc ac nisi vulputate\n                                          fringilla. Donec lacinia congue felis\n                                          in faucibus.\n                                       </p>\n                                    </Media.Body>\n                                 </Media>\n                              </Alert>\n                           </Col>\n                        ))}\n                     </Row>\n                  </Card.Body>\n               </Card>\n            </Col>\n            <div className=\"col-lg-12\">\n               <Card>\n                  <Card.Header className=\"d-block\">\n                     <Card.Title>Message Alert with Solid color</Card.Title>\n                     <p className=\"mb-0 subtitle\">\n                        add <code>.solid</code> to change the style\n                     </p>\n                  </Card.Header>\n                  <Card.Body>\n                     <Row>\n                        {messageAlertWithSolidColor.map((data, i) => (\n                           <Col xl={6} key={i}>\n                              <Alert\n                                 variant={data.variant}\n                                 className=\"alert-dismissible solid\"\n                              >\n                                 {btn(\n                                    i,\n                                    setMessageAlertWithSolidColor,\n                                    messageAlertWithSolidColor,\n                                    false\n                                 )}\n                                 <Media>\n                                    <Media.Body>\n                                       <h5 className=\"mt-1 mb-2 text-white\">\n                                          Notifications\n                                       </h5>\n                                       <p className=\"mb-0\">\n                                          Cras sit amet nibh libero, in gravida\n                                          nulla. tempus viverra turpis. Fusce\n                                          condimentum nunc ac nisi vulputate\n                                          fringilla. Donec lacinia congue felis\n                                          in faucibus.\n                                       </p>\n                                    </Media.Body>\n                                 </Media>\n                              </Alert>\n                           </Col>\n                        ))}\n                     </Row>\n                  </Card.Body>\n               </Card>\n            </div>\n            <div className=\"col-lg-12\">\n               <Card>\n                  <Card.Header className=\"d-block\">\n                     <Card.Title>Alert left icon big </Card.Title>\n                     <p className=\"mb-0 subtitle\">\n                        add <code>.left-icon-big</code> to change the style\n                     </p>\n                  </Card.Header>\n                  <Card.Body>\n                     <Row>\n                        {leftIconBig.map((data, i) => (\n                           <Col xl={6} key={i}>\n                              <Alert\n                                 variant={data.variant}\n                                 className=\"alert-dismissible left-icon-big\"\n                              >\n                                 {btn(i, setLeftIconBig, leftIconBig, false)}\n                                 <Media>\n                                    <div\n                                       variant=\"\"\n                                       className=\"alert-left-icon-big\"\n                                    >\n                                       <span>\n                                          <i\n                                             className={`mdi mdi-${data.icon}`}\n                                          ></i>\n                                       </span>\n                                    </div>\n                                    <Media.Body>\n                                       <h6 className=\"mt-1 mb-2\">\n                                          {data.text}\n                                       </h6>\n                                       <p className=\"mb-0\">{data.msg}</p>\n                                    </Media.Body>\n                                 </Media>\n                              </Alert>\n                           </Col>\n                        ))}\n                     </Row>\n                  </Card.Body>\n               </Card>\n            </div>\n         </Row>\n      </Fragment>\n   );\n};\n\nexport default UiAlert;\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/bootstrap/Accordion.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/bootstrap/Badge.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/bootstrap/ButtonGroup.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/bootstrap/Button.js",["886","887","888","889","890","891","892","893","894","895","896"],"import React, { Fragment } from 'react'\nimport { Row, Col, Card, Button, Dropdown, ButtonGroup } from 'react-bootstrap'\nimport PageTitle from '../../layouts/PageTitle'\nimport JobieNav from '../../layouts/nav'\n\nconst UiButton = () => {\n  return (\n    <Fragment>\n      <PageTitle activeMenu='Buttons' motherMenu='Bootstrap' />\n      <div className='btn-page'>\n        <Row>\n          <Col lg='12'>\n            <Card>\n              <Card.Header className='d-block'>\n                <Card.Title>Buttons</Card.Title>\n                <Card.Text className='mb-0 subtitle'>\n                  Default button style\n                </Card.Text>\n              </Card.Header>\n              <div className='card-body'>\n                <Button variant='primary'>Primary</Button>\n                <Button variant='secondary'>Secondary</Button>\n                <Button variant='success'>Success</Button>\n                <Button variant='danger'>Danger</Button>\n                <Button variant='warning'>Warning</Button>\n                <Button variant='info'>Info</Button>\n                <Button variant='light'>Light</Button>\n                <Button variant='dark'>Dark</Button>\n              </div>\n            </Card>\n          </Col>\n          <Col lg='12'>\n            <Card>\n              <Card.Header className='d-block'>\n                <Card.Title>Buttons</Card.Title>\n                <Card.Text className='mb-0 subtitle'>\n                  Button Light style\n                </Card.Text>\n              </Card.Header>\n              <div className='card-body'>\n                <Button variant='primary light'>Primary</Button>\n                <Button variant='secondary light'>Secondary</Button>\n                <Button variant='success light'>Success</Button>\n                <Button variant='danger light'>Danger</Button>\n                <Button variant='warning light'>Warning</Button>\n                <Button variant='info light'>Info</Button>\n                <Button variant='light light'>Light</Button>\n                <Button variant='dark light'>Dark</Button>\n              </div>\n            </Card>\n          </Col>\n          <Col lg='12'>\n            <Card>\n              <Card.Header className='d-block'>\n                <Card.Title>Outline Buttons</Card.Title>\n                <Card.Text className='mb-0 subtitle'>\n                  Default outline button style\n                </Card.Text>\n              </Card.Header>\n              <div className='card-body'>\n                <Button variant='outline-primary'>Primary</Button>\n                <Button variant='outline-secondary'>Secondary</Button>\n                <Button variant='outline-success'>Success</Button>\n                <Button variant='outline-danger'>Danger</Button>\n                <Button variant='outline-warning'>Warning</Button>\n                <Button variant='outline-info'>Info</Button>\n                <Button variant='outline-light'>Light</Button>\n                <Button variant='outline-dark'>Dark</Button>\n              </div>\n            </Card>\n          </Col>\n          <Col lg='12'>\n            <Card>\n              <Card.Header className='d-block'>\n                <Card.Title>Button Sizes</Card.Title>\n                <Card.Text className='mb-0 subtitle'>\n                  add <code>.btn-lg .btn-sm .btn-xs</code> to change the style\n                </Card.Text>\n              </Card.Header>\n              <div className='card-body'>\n                <Button variant='primary btn-lg'>Large Button</Button>\n                <Button variant='primary'>Default Button</Button>\n                <Button variant='primary btn-sm'>Small Button</Button>\n                <Button variant='primary btn-xs'>Extra Small Button</Button>\n                <Button variant='primary btn-xxs'>Extra Small Button</Button>\n              </div>\n            </Card>\n          </Col>\n          <Col lg='12'>\n            <Card>\n              <Card.Header className='d-block'>\n                <Card.Title>Outline Button Sizes</Card.Title>\n                <Card.Text className='mb-0 subtitle'>\n                  add <code>.btn-lg .btn-sm .btn-xs</code> to change the style\n                </Card.Text>\n              </Card.Header>\n              <div className='card-body'>\n                <Button variant='outline-primary btn-lg'>Large button</Button>\n                <Button variant='outline-primary'>Default button</Button>\n                <Button variant='outline-primary btn-md'>Small button</Button>\n                <Button variant='outline-primary btn-sm'>Small button</Button>\n                <Button variant='outline-primary btn-xs'>\n                  Extra small button\n                </Button>\n              </div>\n            </Card>\n          </Col>\n          <Col lg='12'>\n            <Card>\n              <Card.Header className='d-block'>\n                <Card.Title>Rounded Buttons</Card.Title>\n                <Card.Text className='mb-0 subtitle'>\n                  add <code>.btn-rounded</code> to change the style\n                </Card.Text>\n              </Card.Header>\n              <div className='card-body'>\n                <Card.Title></Card.Title>\n                <Button variant='primary btn-rounded'>Primary</Button>\n                <Button variant='secondary btn-rounded'>Secondary</Button>\n                <Button variant='success btn-rounded'>Success</Button>\n                <Button variant='danger btn-rounded'>Danger</Button>\n                <Button variant='warning btn-rounded'>Warning</Button>\n                <Button variant='info btn-rounded'>Info</Button>\n                <Button variant='light btn-rounded'>Light</Button>\n                <Button variant='dark btn-rounded'>Dark</Button>\n              </div>\n            </Card>\n          </Col>\n          <Col lg='12'>\n            <Card>\n              <Card.Header className='d-block'>\n                <Card.Title>Rounded outline Buttons</Card.Title>\n                <Card.Text className='mb-0 subtitle'>\n                  add <code>.btn-rounded</code> to change the style\n                </Card.Text>\n              </Card.Header>\n              <div className='card-body'>\n                <div className='rounded-button'>\n                  <Button variant='outline-primary btn-rounded'>Primary</Button>\n                  <Button variant='outline-secondary btn-rounded'>\n                    Secondary\n                  </Button>\n                  <Button variant='outline-success btn-rounded'>Success</Button>\n                  <Button variant='outline-danger btn-rounded'>Danger</Button>\n                  <Button variant='outline-warning btn-rounded'>Warning</Button>\n                  <Button variant='outline-info btn-rounded'>Info</Button>\n                  <Button variant='outline-light btn-rounded'>Light</Button>\n                  <Button variant='outline-dark btn-rounded'>Dark</Button>\n                </div>\n              </div>\n            </Card>\n          </Col>\n          <Col lg='12'>\n            <Card>\n              <Card.Header className='d-block'>\n                <Card.Title>Button Right icons</Card.Title>\n                <Card.Text className='mb-0 subtitle'>\n                  add <code>.btn-icon-right</code> to change the style\n                </Card.Text>\n              </Card.Header>\n              <div className='card-body'>\n                <Button variant='primary'>\n                  Add to cart{' '}\n                  <span className='btn-icon-right'>\n                    <i className='fa fa-shopping-cart' />\n                  </span>\n                </Button>\n                <Button variant='info'>\n                  Add to wishlist{' '}\n                  <span className='btn-icon-right'>\n                    <i className='fa fa-heart' />\n                  </span>\n                </Button>\n                <Button variant='danger'>\n                  Remove{' '}\n                  <span className='btn-icon-right'>\n                    <i className='fa fa-close' />\n                  </span>\n                </Button>\n                <Button variant='secondary'>\n                  Sent message{' '}\n                  <span className='btn-icon-right'>\n                    <i className='fa fa-envelope' />\n                  </span>\n                </Button>\n                <Button variant='warning'>\n                  Add bookmark{' '}\n                  <span className='btn-icon-right'>\n                    <i className='fa fa-star' />\n                  </span>\n                </Button>\n                <Button variant='success'>\n                  Success{' '}\n                  <span className='btn-icon-right'>\n                    <i className='fa fa-check' />\n                  </span>\n                </Button>\n              </div>\n            </Card>\n          </Col>\n          <Col lg='12'>\n            <Card>\n              <Card.Header className='d-block'>\n                <Card.Title>Button Left icons</Card.Title>\n                <Card.Text className='mb-0 subtitle'>\n                  add <code>.btn-icon-left</code> to change the style\n                </Card.Text>\n              </Card.Header>\n              <div className='card-body'>\n                <Button variant='primary btn-rounded'>\n                  <span className='btn-icon-left text-primary'>\n                    <i className='fa fa-shopping-cart' />\n                  </span>\n                  Buy\n                </Button>\n                <Button variant='info btn-rounded'>\n                  <span className='btn-icon-left text-info'>\n                    <i className='fa fa-plus color-info' />\n                  </span>\n                  Add\n                </Button>\n                <Button variant='danger btn-rounded'>\n                  <span className='btn-icon-left text-danger'>\n                    <i className='fa fa-envelope color-danger' />\n                  </span>\n                  Email\n                </Button>\n                <Button variant='secondary btn-rounded'>\n                  <span className='btn-icon-left text-secondary'>\n                    <i className='fa fa-share-alt color-secondary' />{' '}\n                  </span>\n                  Share\n                </Button>\n                <Button variant='warning btn-rounded'>\n                  <span className='btn-icon-left text-warning'>\n                    <i className='fa fa-download color-warning' />\n                  </span>\n                  Download\n                </Button>\n                <Button variant='success btn-rounded'>\n                  <span className='btn-icon-left text-success'>\n                    <i className='fa fa-upload color-success' />\n                  </span>\n                  Upload\n                </Button>\n              </div>\n            </Card>\n          </Col>\n          <Col lg='12'>\n            <Card>\n              <Card.Header className='d-block'>\n                <Card.Title>Square Buttons</Card.Title>\n                <Card.Text className='mb-0 subtitle'>\n                  add <code>.btn-square</code> to change the style\n                </Card.Text>\n              </Card.Header>\n              <div className='card-body'>\n                <Button variant='primary btn-square'>Primary</Button>\n                <Button variant='secondary btn-square'>Secondary</Button>\n                <Button variant='success btn-square'>Success</Button>\n                <Button variant='danger btn-square'>Danger</Button>\n                <Button variant='warning btn-square'>Warning</Button>\n                <Button variant='info btn-square'>Info</Button>\n                <Button variant='light btn-square'>Light</Button>\n                <Button variant='dark btn-square'>Dark</Button>\n              </div>\n            </Card>\n          </Col>\n          <Col lg='12'>\n            <Card>\n              <Card.Header className='d-block'>\n                <Card.Title>Square Outline Buttons</Card.Title>\n                <Card.Text className='mb-0 subtitle'>\n                  add <code>.btn-square</code> to change the style\n                </Card.Text>\n              </Card.Header>\n              <div className='card-body'>\n                <Button variant='outline-primary btn-square'>Primary</Button>\n                <Button variant='outline-secondary btn-square'>\n                  Secondary\n                </Button>\n                <Button variant='outline-success btn-square'>Success</Button>\n                <Button variant='outline-danger btn-square'>Danger</Button>\n                <Button variant='outline-warning btn-square'>Warning</Button>\n                <Button variant='outline-info btn-square'>Info</Button>\n                <Button variant='outline-light btn-square'>Light</Button>\n                <Button variant='outline-dark btn-square'>Dark</Button>\n              </div>\n            </Card>\n          </Col>\n          <Col lg='12'>\n            <Card>\n              <Card.Header className='d-block'>\n                <Card.Title>Rounded Button</Card.Title>\n                <Card.Text className='mb-0 subtitle'>\n                  add <code>.btn-rounded</code> to change the style\n                </Card.Text>\n              </Card.Header>\n              <div className='card-body'>\n                <Button variant='primary btn-rounded'>Primary</Button>\n                <Button variant='secondary btn-rounded'>Secondary</Button>\n                <Button variant='success btn-rounded'>Success</Button>\n                <Button variant='danger btn-rounded'>Danger</Button>\n                <Button variant='warning btn-rounded'>Warning</Button>\n                <Button variant='info btn-rounded'>Info</Button>\n                <Button variant='light btn-rounded'>Light</Button>\n                <Button variant='dark btn-rounded'>Dark</Button>\n              </div>\n            </Card>\n          </Col>\n          <Col lg='12'>\n            <Card>\n              <Card.Header className='d-block'>\n                <Card.Title>Rounded outline Buttons</Card.Title>\n                <Card.Text className='mb-0 subtitle'>\n                  add <code>.btn-rounded</code> to change the style\n                </Card.Text>\n              </Card.Header>\n              <div className='card-body'>\n                <Button variant='outline-primary btn-rounded'>Primary</Button>\n                <Button variant='outline-secondary btn-rounded'>\n                  Secondary\n                </Button>\n                <Button variant='outline-success btn-rounded'>Success</Button>\n                <Button variant='outline-danger btn-rounded'>Danger</Button>\n                <Button variant='outline-warning btn-rounded'>Warning</Button>\n                <Button variant='outline-info btn-rounded'>Info</Button>\n                <Button variant='outline-light btn-rounded'>Light</Button>\n                <Button variant='outline-dark btn-rounded'>Dark</Button>\n              </div>\n            </Card>\n          </Col>\n          <Col lg='12'>\n            <Card>\n              <Card.Header className='d-block'>\n                <Card.Title>Dropdown Button</Card.Title>\n                <Card.Text className='mb-0 subtitle'>\n                  Default dropdown button style\n                </Card.Text>\n              </Card.Header>\n              <div className='card-body'>\n                <ButtonGroup>\n                  <Dropdown>\n                    <Dropdown.Toggle variant='primary'>Primary</Dropdown.Toggle>\n                    <Dropdown.Menu>\n                      <Dropdown.Item href='javascript:void()'>\n                        Dropdown link\n                      </Dropdown.Item>\n                      <Dropdown.Item href='javascript:void()'>\n                        Dropdown link\n                      </Dropdown.Item>\n                    </Dropdown.Menu>\n                  </Dropdown>\n                </ButtonGroup>\n                <ButtonGroup>\n                  <Dropdown>\n                    <Dropdown.Toggle variant='secondary'>\n                      Secondary\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                      <Dropdown.Item href='javascript:void()'>\n                        Dropdown link\n                      </Dropdown.Item>\n                      <Dropdown.Item href='javascript:void()'>\n                        Dropdown link\n                      </Dropdown.Item>\n                    </Dropdown.Menu>\n                  </Dropdown>\n                </ButtonGroup>\n                <ButtonGroup>\n                  <Dropdown>\n                    <Dropdown.Toggle variant='success'>Success</Dropdown.Toggle>\n                    <Dropdown.Menu>\n                      <Dropdown.Item href='javascript:void()'>\n                        Dropdown link\n                      </Dropdown.Item>\n                      <Dropdown.Item href='javascript:void()'>\n                        Dropdown link\n                      </Dropdown.Item>\n                    </Dropdown.Menu>\n                  </Dropdown>\n                </ButtonGroup>\n                <ButtonGroup>\n                  <Dropdown>\n                    <Dropdown.Toggle variant='warning'>Warning</Dropdown.Toggle>\n                    <Dropdown.Menu>\n                      <Dropdown.Item href='javascript:void()'>\n                        Dropdown link\n                      </Dropdown.Item>\n                      <Dropdown.Item href='javascript:void()'>\n                        Dropdown link\n                      </Dropdown.Item>\n                    </Dropdown.Menu>\n                  </Dropdown>\n                </ButtonGroup>\n\n                <ButtonGroup>\n                  <Dropdown>\n                    <Dropdown.Toggle variant='danger'>Danger</Dropdown.Toggle>\n                    <Dropdown.Menu>\n                      <Dropdown.Item href='javascript:void()'>\n                        Dropdown link\n                      </Dropdown.Item>\n                      <Dropdown.Item href='javascript:void()'>\n                        Dropdown link\n                      </Dropdown.Item>\n                    </Dropdown.Menu>\n                  </Dropdown>\n                </ButtonGroup>\n              </div>\n            </Card>\n          </Col>\n          <Col lg='12'>\n            <Card>\n              <Card.Header className='d-block'>\n                <Card.Title>Buttons Transparent</Card.Title>\n                <Card.Text className='mb-0 subtitle'>\n                  Button transparent style\n                </Card.Text>\n              </Card.Header>\n              <div className='card-body'>\n                <Button variant='primary tp-btn'>Primary</Button>\n                <Button variant='secondary tp-btn'>Secondary</Button>\n                <Button variant='success tp-btn'>Success</Button>\n                <Button variant='danger tp-btn'>Danger</Button>\n                <Button variant='warning tp-btn'>Warning</Button>\n                <Button variant='info tp-btn'>Info</Button>\n                <Button variant='light tp-btn'>Light</Button>\n                <Button variant='dark tp-btn'>Dark</Button>\n              </div>\n            </Card>\n          </Col>\n          <Col lg='12'>\n            <Card>\n              <Card.Header className='d-block'>\n                <Card.Title>Buttons Transparent Light</Card.Title>\n                <Card.Text className='mb-0 subtitle'>\n                  Button transparent light style\n                </Card.Text>\n              </Card.Header>\n              <div className='card-body'>\n                <Button variant='primary tp-btn-light'>Primary</Button>\n                <Button variant='secondary tp-btn-light'>Secondary</Button>\n                <Button variant='success tp-btn-light'>Success</Button>\n                <Button variant='danger tp-btn-light'>Danger</Button>\n                <Button variant='warning tp-btn-light'>Warning</Button>\n                <Button variant='info tp-btn-light'>Info</Button>\n                <Button variant='tp-btn-light text-black'>Light</Button>\n                <Button variant='dark tp-btn-light'>Dark</Button>\n              </div>\n            </Card>\n          </Col>\n          <Col lg='12'>\n            <Card>\n              <Card.Header className='d-block'>\n                <Card.Title>Disabled Button</Card.Title>\n                <Card.Text className='mb-0 subtitle'>\n                  add <code>disabled=\"disabled\"</code> to change the style\n                </Card.Text>\n              </Card.Header>\n              <div className='card-body'>\n                <Button variant='primary btn-rounded' disabled='disabled'>\n                  Primary\n                </Button>\n                <Button variant='secondary btn-rounded' disabled='disabled'>\n                  Secondary\n                </Button>\n                <Button variant='success btn-rounded' disabled='disabled'>\n                  Success\n                </Button>\n                <Button variant='danger btn-rounded' disabled='disabled'>\n                  Danger\n                </Button>\n                <Button variant='warning btn-rounded' disabled='disabled'>\n                  Warning\n                </Button>\n                <Button variant='info btn-rounded' disabled='disabled'>\n                  Info\n                </Button>\n              </div>\n            </Card>\n          </Col>\n          <Col lg='12'>\n            <Card>\n              <Card.Header className='d-block'>\n                <Card.Title>Socia icon Buttons with Name</Card.Title>\n                <Card.Text className='mb-0 subtitle'>\n                  add <code>.btn-facebook, .btn-twitter, .btn-youtube...</code>{' '}\n                  to change the style\n                </Card.Text>\n              </Card.Header>\n              <div className='card-body'>\n                <Button variant='facebook'>\n                  Facebook{' '}\n                  <span className='btn-icon-right'>\n                    <i className='fa fa-facebook' />\n                  </span>\n                </Button>\n                <Button variant='twitter'>\n                  Twitter{' '}\n                  <span className='btn-icon-right'>\n                    <i className='fa fa-twitter' />\n                  </span>\n                </Button>\n                <Button variant='youtube'>\n                  Youtube{' '}\n                  <span className='btn-icon-right'>\n                    <i className='fa fa-youtube' />\n                  </span>\n                </Button>\n                <Button variant='instagram'>\n                  Instagram{' '}\n                  <span className='btn-icon-right'>\n                    <i className='fa fa-instagram' />\n                  </span>\n                </Button>\n                <Button variant='pinterest'>\n                  Pinterest{' '}\n                  <span className='btn-icon-right'>\n                    <i className='fa fa-pinterest' />\n                  </span>\n                </Button>\n                <Button variant='linkedin'>\n                  Linkedin{' '}\n                  <span className='btn-icon-right'>\n                    <i className='fa fa-linkedin' />\n                  </span>\n                </Button>\n                <Button variant='google-plus'>\n                  Google +{' '}\n                  <span className='btn-icon-right'>\n                    <i className='fa fa-google-plus' />\n                  </span>\n                </Button>\n                <Button variant='google'>\n                  Google{' '}\n                  <span className='btn-icon-right'>\n                    <i className='fa fa-google' />\n                  </span>\n                </Button>\n                <Button variant='snapchat'>\n                  Snapchat{' '}\n                  <span className='btn-icon-right'>\n                    <i className='fa fa-snapchat' />\n                  </span>\n                </Button>\n                <Button variant='whatsapp'>\n                  Whatsapp{' '}\n                  <span className='btn-icon-right'>\n                    <i className='fa fa-whatsapp' />\n                  </span>\n                </Button>\n                <Button variant='tumblr'>\n                  Tumblr{' '}\n                  <span className='btn-icon-right'>\n                    <i className='fa fa-tumblr' />\n                  </span>\n                </Button>\n                <Button variant='reddit'>\n                  Reddit{' '}\n                  <span className='btn-icon-right'>\n                    <i className='fa fa-reddit' />\n                  </span>\n                </Button>\n                <Button variant='spotify'>\n                  Spotify{' '}\n                  <span className='btn-icon-right'>\n                    <i className='fa fa-spotify' />\n                  </span>\n                </Button>\n                <Button variant='yahoo'>\n                  Yahoo{' '}\n                  <span className='btn-icon-right'>\n                    <i className='fa fa-yahoo' />\n                  </span>\n                </Button>\n                <Button variant='dribbble'>\n                  Dribbble{' '}\n                  <span className='btn-icon-right'>\n                    <i className='fa fa-dribbble' />\n                  </span>\n                </Button>\n                <Button variant='skype'>\n                  Skype{' '}\n                  <span className='btn-icon-right'>\n                    <i className='fa fa-skype' />\n                  </span>\n                </Button>\n                <Button variant='quora'>\n                  Quora{' '}\n                  <span className='btn-icon-right'>\n                    <i className='fa fa-quora' />\n                  </span>\n                </Button>\n                <Button variant='vimeo'>\n                  Vimeo{' '}\n                  <span className='btn-icon-right'>\n                    <i className='fa fa-vimeo' />\n                  </span>\n                </Button>\n              </div>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    </Fragment>\n  )\n}\n\nexport default UiButton\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/bootstrap/Modal.js",["897","898","899"],"import React, { useState } from \"react\";\nimport { Row, Card, Col, Button, Modal, Container } from \"react-bootstrap\";\nimport PageTitle from \"../../layouts/PageTitle\";\n\nconst UiModal = () => {\n   const [basicModal, setBasicModal] = useState(false);\n   const [contentModal, setContentModal] = useState(false);\n   const [modalCentered, setModalCentered] = useState(false);\n   const [modalWithTooltip, setModalWithTooltip] = useState(false);\n   const [gridInsideModal, setGridInsideModal] = useState(false);\n   const [largeModal, setLargeModal] = useState(false);\n   const [smallModal, setSmallModal] = useState(false);\n   return (\n      <div className=\"h-80\">\n         <PageTitle motherMenu={\"Bootstrap\"} activeMenu={\"Modal\"} />\n         <Row>\n            <Col>\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Bootstrap Modal</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <Card.Text className=\"mb-4\">\n                        Lorem ipsum dolor sit amet consectetur adipisicing elit.\n                        A, minima! Eligendi minima illum itaque harum aliquam\n                        vel, sunt magni dolorem! Cum quaerat est cupiditate\n                        saepe quidem, fugiat in at magni ad provident distinctio\n                        eum tempore laboriosam adipisci, tempora cumque ex quis\n                        unde voluptatem consequuntur. Excepturi quibusdam\n                        accusamus deleniti officiis ullam repellendus magni\n                        unde? Saepe quibusdam vel, ipsum numquam ratione\n                        tempore. Dolor optio aliquid in velit eaque, sed\n                        delectus reprehenderit quam quidem a eum id nostrum\n                        ullam obcaecati error deleniti modi quasi harum possimus\n                        voluptatum repellat saepe! Omnis dolor maiores eaque\n                        deserunt exercitationem incidunt autem et voluptatibus\n                        molestias quod explicabo ipsam nam vitae a architecto,\n                        consectetur quas facilis sed nulla, placeat eum ex,\n                        ducimus in. Hic quo necessitatibus autem tempora\n                        provident!\n                     </Card.Text>\n                     <div className=\"bootstrap-modal\">\n                        {/* <!-- Button trigger modal --> */}\n                        <Button\n                           variant=\"primary\"\n                           className=\"mb-2 mr-2\"\n                           onClick={() => setBasicModal(true)}\n                        >\n                           Basic modal\n                        </Button>\n                        {/* <!-- Modal --> */}\n                        <Modal className=\"fade\" show={basicModal}>\n                           <Modal.Header>\n                              <Modal.Title>Modal title</Modal.Title>\n                              <Button\n                                 variant=\"\"\n                                 className=\"close\"\n                                 onClick={() => setBasicModal(false)}\n                              >\n                                 <span>&times;</span>\n                              </Button>\n                           </Modal.Header>\n                           <Modal.Body>Modal body text goes here.</Modal.Body>\n                           <Modal.Footer>\n                              <Button\n                                 onClick={() => setBasicModal(false)}\n                                 variant=\"danger light\"\n                              >\n                                 Close\n                              </Button>\n                              <Button variant=\"primary\">Save changes</Button>\n                           </Modal.Footer>\n                        </Modal>\n\n                        {/* <!-- Button trigger modal --> */}\n                        <Button\n                           variant=\"primary\"\n                           className=\"mb-2 mr-2\"\n                           onClick={() => setContentModal(true)}\n                        >\n                           Long content Modal\n                        </Button>\n                        {/* <!-- Modal --> */}\n                        <Modal className=\"fade\" show={contentModal}>\n                           <Modal.Header>\n                              <Modal.Title>Modal title</Modal.Title>\n                              <Button\n                                 variant=\"\"\n                                 className=\"close\"\n                                 onClick={() => setContentModal(false)}\n                              >\n                                 <span>&times;</span>\n                              </Button>\n                           </Modal.Header>\n                           <Modal.Body>\n                              <p>\n                                 Cras mattis consectetur purus sit amet\n                                 fermentum. Cras justo odio, dapibus ac\n                                 facilisis in, egestas eget quam. Morbi leo\n                                 risus, porta ac consectetur ac, vestibulum at\n                                 eros.\n                              </p>\n                              <p>\n                                 Praesent commodo cursus magna, vel scelerisque\n                                 nisl consectetur et. Vivamus sagittis lacus vel\n                                 augue laoreet rutrum faucibus dolor auctor.\n                              </p>\n                              <p>\n                                 Aenean lacinia bibendum nulla sed consectetur.\n                                 Praesent commodo cursus magna, vel scelerisque\n                                 nisl consectetur et. Donec sed odio dui. Donec\n                                 ullamcorper nulla non metus auctor fringilla.\n                              </p>\n                              <p>\n                                 Cras mattis consectetur purus sit amet\n                                 fermentum. Cras justo odio, dapibus ac\n                                 facilisis in, egestas eget quam. Morbi leo\n                                 risus, porta ac consectetur ac, vestibulum at\n                                 eros.\n                              </p>\n                              <p>\n                                 Praesent commodo cursus magna, vel scelerisque\n                                 nisl consectetur et. Vivamus sagittis lacus vel\n                                 augue laoreet rutrum faucibus dolor auctor.\n                              </p>\n                              <p>\n                                 Aenean lacinia bibendum nulla sed consectetur.\n                                 Praesent commodo cursus magna, vel scelerisque\n                                 nisl consectetur et. Donec sed odio dui. Donec\n                                 ullamcorper nulla non metus auctor fringilla.\n                              </p>\n                              <p>\n                                 Cras mattis consectetur purus sit amet\n                                 fermentum. Cras justo odio, dapibus ac\n                                 facilisis in, egestas eget quam. Morbi leo\n                                 risus, porta ac consectetur ac, vestibulum at\n                                 eros.\n                              </p>\n                              <p>\n                                 Praesent commodo cursus magna, vel scelerisque\n                                 nisl consectetur et. Vivamus sagittis lacus vel\n                                 augue laoreet rutrum faucibus dolor auctor.\n                              </p>\n                              <p>\n                                 Aenean lacinia bibendum nulla sed consectetur.\n                                 Praesent commodo cursus magna, vel scelerisque\n                                 nisl consectetur et. Donec sed odio dui. Donec\n                                 ullamcorper nulla non metus auctor fringilla.\n                              </p>\n                              <p>\n                                 Cras mattis consectetur purus sit amet\n                                 fermentum. Cras justo odio, dapibus ac\n                                 facilisis in, egestas eget quam. Morbi leo\n                                 risus, porta ac consectetur ac, vestibulum at\n                                 eros.\n                              </p>\n                              <p>\n                                 Praesent commodo cursus magna, vel scelerisque\n                                 nisl consectetur et. Vivamus sagittis lacus vel\n                                 augue laoreet rutrum faucibus dolor auctor.\n                              </p>\n                              <p>\n                                 Aenean lacinia bibendum nulla sed consectetur.\n                                 Praesent commodo cursus magna, vel scelerisque\n                                 nisl consectetur et. Donec sed odio dui. Donec\n                                 ullamcorper nulla non metus auctor fringilla.\n                              </p>\n                              <p>\n                                 Cras mattis consectetur purus sit amet\n                                 fermentum. Cras justo odio, dapibus ac\n                                 facilisis in, egestas eget quam. Morbi leo\n                                 risus, porta ac consectetur ac, vestibulum at\n                                 eros.\n                              </p>\n                              <p>\n                                 Praesent commodo cursus magna, vel scelerisque\n                                 nisl consectetur et. Vivamus sagittis lacus vel\n                                 augue laoreet rutrum faucibus dolor auctor.\n                              </p>\n                              <p>\n                                 Aenean lacinia bibendum nulla sed consectetur.\n                                 Praesent commodo cursus magna, vel scelerisque\n                                 nisl consectetur et. Donec sed odio dui. Donec\n                                 ullamcorper nulla non metus auctor fringilla.\n                              </p>\n                              <p>\n                                 Cras mattis consectetur purus sit amet\n                                 fermentum. Cras justo odio, dapibus ac\n                                 facilisis in, egestas eget quam. Morbi leo\n                                 risus, porta ac consectetur ac, vestibulum at\n                                 eros.\n                              </p>\n                              <p>\n                                 Praesent commodo cursus magna, vel scelerisque\n                                 nisl consectetur et. Vivamus sagittis lacus vel\n                                 augue laoreet rutrum faucibus dolor auctor.\n                              </p>\n                              <p>\n                                 Aenean lacinia bibendum nulla sed consectetur.\n                                 Praesent commodo cursus magna, vel scelerisque\n                                 nisl consectetur et. Donec sed odio dui. Donec\n                                 ullamcorper nulla non metus auctor fringilla.\n                              </p>\n                           </Modal.Body>\n                           <Modal.Footer>\n                              <Button\n                                 variant=\"danger light\"\n                                 onClick={() => setContentModal(false)}\n                              >\n                                 Close\n                              </Button>\n                              <Button variant=\"primary\">Save changes</Button>\n                           </Modal.Footer>\n                        </Modal>\n                        {/* <!-- Button trigger modal --> */}\n                        <Button\n                           variant=\"primary\"\n                           type=\"button\"\n                           className=\"mb-2 mr-2\"\n                           onClick={() => setModalCentered(true)}\n                        >\n                           Modal centered\n                        </Button>\n                        {/* <!-- Modal --> */}\n                        <Modal className=\"fade\" show={modalCentered}>\n                           <Modal.Header>\n                              <Modal.Title>Modal title</Modal.Title>\n                              <Button\n                                 onClick={() => setModalCentered(false)}\n                                 variant=\"\"\n                                 className=\"close\"\n                              >\n                                 <span>&times;</span>\n                              </Button>\n                           </Modal.Header>\n                           <Modal.Body>\n                              <p>\n                                 Cras mattis consectetur purus sit amet\n                                 fermentum. Cras justo odio, dapibus ac\n                                 facilisis in, egestas eget quam. Morbi leo\n                                 risus, porta ac consectetur ac, vestibulum at\n                                 eros.\n                              </p>\n                           </Modal.Body>\n                           <Modal.Footer>\n                              <Button\n                                 onClick={() => setModalCentered(false)}\n                                 variant=\"danger light\"\n                              >\n                                 Close\n                              </Button>\n                              <Button variant=\"primary\">Save changes</Button>\n                           </Modal.Footer>\n                        </Modal>\n\n                        {/* <!-- Button trigger modal --> */}\n                        <Button\n                           variant=\"primary\"\n                           className=\"mb-2 mr-2\"\n                           onClick={() => setModalWithTooltip(true)}\n                        >\n                           Modal with tooltip\n                        </Button>\n                        {/* <!-- Modal --> */}\n                        <Modal className=\"fade\" show={modalWithTooltip}>\n                           <Modal.Header>\n                              <Modal.Title>Modal title</Modal.Title>\n                              <Button\n                                 variant=\"\"\n                                 className=\"close\"\n                                 onClick={() => setModalWithTooltip(false)}\n                              >\n                                 <span>&times;</span>\n                              </Button>\n                           </Modal.Header>\n                           <Modal.Body>\n                              <h5>Popover in a modal</h5>\n                              <p>\n                                 This{\" \"}\n                                 <a\n                                    href=\"#\"\n                                    role=\"button\"\n                                    data-container=\"body\"\n                                    data-toggle=\"popover\"\n                                    className=\"btn btn-secondary popover-test\"\n                                    title=\"Popover title\"\n                                    data-content=\"Popover body content is set in this attribute.\"\n                                 >\n                                    button\n                                 </a>{\" \"}\n                                 triggers a popover on click.\n                              </p>\n                              <hr />\n                              <h5>Tooltips in a modal</h5>\n                              <p>\n                                 <a\n                                    href=\"#\"\n                                    className=\"tooltip-test text-primary\"\n                                    data-toggle=\"tooltip\"\n                                    title=\"Told you!\"\n                                 >\n                                    This link\n                                 </a>{\" \"}\n                                 and{\" \"}\n                                 <a\n                                    href=\"#\"\n                                    className=\"tooltip-test text-primary\"\n                                    data-toggle=\"tooltip\"\n                                    title=\"Another one!\"\n                                 >\n                                    that link\n                                 </a>{\" \"}\n                                 have tooltips on hover.\n                              </p>\n                           </Modal.Body>\n                           <Modal.Footer>\n                              <Button\n                                 variant=\"danger light\"\n                                 onClick={() => setModalWithTooltip(false)}\n                              >\n                                 Close\n                              </Button>\n                              <Button variant=\"primary\">Save changes</Button>\n                           </Modal.Footer>\n                        </Modal>\n\n                        {/* <!-- Button trigger modal --> */}\n                        <Button\n                           variant=\"primary\"\n                           className=\"mb-2 mr-2\"\n                           onClick={() => setGridInsideModal(true)}\n                        >\n                           Grid Inside Modal\n                        </Button>\n                        {/* <!-- Modal --> */}\n                        <Modal className=\"fade\" show={gridInsideModal}>\n                           <Modal.Header>\n                              <Modal.Title>Modal title</Modal.Title>\n                              <Button\n                                 variant=\"\"\n                                 className=\"close\"\n                                 onClick={() => setGridInsideModal(false)}\n                              >\n                                 <span>&times;</span>\n                              </Button>\n                           </Modal.Header>\n                           <Modal.Body>\n                              <Container>\n                                 <Row>\n                                    <Col md=\"4\">.col-md-4</Col>\n                                    <Col md=\"4\" className=\"ml-auto\">\n                                       .col-md-4 .ml-auto\n                                    </Col>\n                                 </Row>\n                                 <Row>\n                                    <Col md=\"3\" className=\"ml-auto\">\n                                       .col-md-3 .ml-auto\n                                    </Col>\n                                    <Col md=\"2\" className=\"ml-auto\">\n                                       .col-md-2 .ml-auto\n                                    </Col>\n                                 </Row>\n                                 <Row>\n                                    <Col md=\"6\" className=\"ml-auto\">\n                                       .col-md-6 .ml-auto\n                                    </Col>\n                                 </Row>\n                                 <Row>\n                                    <Col sm=\"9\">\n                                       Level 1: .col-sm-9\n                                       <Row>\n                                          <Col sm=\"6\">\n                                             Level 2: .col-8 .col-sm-6\n                                          </Col>\n                                          <Col sm=\"6\">\n                                             Level 2: .col-4 .col-sm-6\n                                          </Col>\n                                       </Row>\n                                    </Col>\n                                 </Row>\n                              </Container>\n                           </Modal.Body>\n                           <Modal.Footer>\n                              <Button\n                                 variant=\"danger light\"\n                                 onClick={() => setGridInsideModal(false)}\n                              >\n                                 Close\n                              </Button>\n                              <Button variant=\"primary\">Save changes</Button>\n                           </Modal.Footer>\n                        </Modal>\n\n                        {/* <!-- Large modal --> */}\n                        <Button\n                           variant=\"primary\"\n                           className=\"mb-2 mr-2\"\n                           onClick={() => setLargeModal(true)}\n                        >\n                           Large modal\n                        </Button>\n                        <Modal\n                           className=\"fade bd-example-modal-lg\"\n                           show={largeModal}\n                           size=\"lg\"\n                        >\n                           <Modal.Header>\n                              <Modal.Title>Modal title</Modal.Title>\n                              <Button\n                                 variant=\"\"\n                                 className=\"close\"\n                                 onClick={() => setLargeModal(false)}\n                              >\n                                 <span>&times;</span>\n                              </Button>\n                           </Modal.Header>\n                           <Modal.Body>Modal body text goes here.</Modal.Body>\n                           <Modal.Footer>\n                              <Button\n                                 variant=\"danger light\"\n                                 onClick={() => setLargeModal(false)}\n                              >\n                                 Close\n                              </Button>\n                              <Button\n                                 variant=\"\"\n                                 type=\"button\"\n                                 className=\"btn btn-primary\"\n                              >\n                                 Save changes\n                              </Button>\n                           </Modal.Footer>\n                        </Modal>\n\n                        {/* <!-- Small modal --> */}\n                        <Button\n                           variant=\"primary\"\n                           className=\"mb-2 mr-2\"\n                           onClick={() => setSmallModal(true)}\n                        >\n                           Small modal\n                        </Button>\n                        <Modal\n                           className=\"fade bd-example-modal-sm\"\n                           size=\"sm\"\n                           show={smallModal}\n                        >\n                           <Modal.Header>\n                              <Modal.Title>Modal title</Modal.Title>\n                              <Button\n                                 variant=\"\"\n                                 className=\"close\"\n                                 onClick={() => setSmallModal(false)}\n                              >\n                                 <span>&times;</span>\n                              </Button>\n                           </Modal.Header>\n                           <Modal.Body>Modal body text goes here.</Modal.Body>\n                           <Modal.Footer>\n                              <Button\n                                 variant=\"danger light\"\n                                 onClick={() => setSmallModal(false)}\n                              >\n                                 Close\n                              </Button>\n                              <Button variant=\"primary\">Save changes</Button>\n                           </Modal.Footer>\n                        </Modal>\n                     </div>\n                  </Card.Body>\n               </Card>\n            </Col>\n         </Row>\n      </div>\n   );\n};\n\nexport default UiModal;\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/bootstrap/MediaObject.js",["900"],"import React, { Fragment } from 'react'\n/// Compoent\nimport PageTitle from '../../layouts/PageTitle'\n\n/// Image\nimport avatar1 from '../../../images/avatar/1.jpg'\nimport avatar2 from '../../../images/avatar/2.jpg'\nimport avatar3 from '../../../images/avatar/3.jpg'\nimport avatar7 from '../../../images/avatar/7.jpg'\nimport avatar4 from '../../../images/avatar/4.jpg'\nimport avatar5 from '../../../images/avatar/5.jpg'\nimport avatar6 from '../../../images/avatar/6.jpg'\nimport avatar8 from '../../../images/avatar/8.jpg'\n\n/// Bootstrap\nimport { Row, Col, Card, Media } from 'react-bootstrap'\n\nconst UiMediaObject = () => {\n  const heading = 'Media heading'\n  const text =\n    'Cras sit amet nibh libero, in gravida nulla. Nulla vel metus scelerisque ante sollicitudin. Cras purus odio, vestibulum in vulputate at, tempus viverra turpis. Fusce condimentum nunc ac nisi vulputate fringilla. Donec lacinia congue felis in faucibus.'\n  const text2 =\n    ' Cras sit amet nibh libero, in gravida nulla. Nulla vel metus scelerisque ante sollicitudin. Cras purus odio, vestibulum in vulputate at, tempus viverra turpis. Fuscecondimentum nunc ac nisi vulputate fringilla. Donec lacinia congue felis in faucibus. vulputate at, tempus viverra turpis. Fusce condimentum nunc ac nisi vulputate fringilla. Donec lacinia congue felis in faucibus.'\n  const text3 =\n    'Donec sed odio dui. Nullam quis risus eget urna mollis ornare vel eu leo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.'\n\n  return (\n    <Fragment>\n      <PageTitle activeMenu='Media Object' motherMenu='Bootstrap' />\n      <Row>\n        <Col xl='6' lg='12'>\n          <Card>\n            <Card.Header>\n              <Card.Title>Media Object</Card.Title>\n            </Card.Header>\n            <Card.Body>\n              <div className='bootstrap-media'>\n                <Media>\n                  <img\n                    className='mr-3 img-fluid '\n                    width='60'\n                    src={avatar1}\n                    alt='DexignZone'\n                  />\n                  <Media.Body>\n                    <h5 className='mt-0'>{heading}</h5>\n                    <p className='mb-0'>{text}</p>\n                  </Media.Body>\n                </Media>\n                <Media className='mt-4'>\n                  <img\n                    className='mr-3 img-fluid '\n                    width='60'\n                    src={avatar7}\n                    alt='DexignZone'\n                  />\n                  <Media.Body>\n                    <h5 className='mt-0'>{heading}</h5>\n                    <p className='mb-0'>{text}</p>\n                  </Media.Body>\n                </Media>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col xl='6' lg='12'>\n          <Card>\n            <Card.Header>\n              <Card.Title>Nesting</Card.Title>\n            </Card.Header>\n            <Card.Body>\n              <div className='bootstrap-media'>\n                <Media>\n                  <img\n                    className='mr-3 '\n                    width='60'\n                    src={avatar2}\n                    alt='DexignZone'\n                  />\n                  <Media.Body>\n                    <h5 className='mt-0'>{heading}</h5>\n                    <p className='mb-0'>{text}</p>\n\n                    <Media className='mt-4'>\n                      <a className='pr-3' href='#'>\n                        <img\n                          className=''\n                          width='60'\n                          src={avatar3}\n                          alt='DexignZone'\n                        />\n                      </a>\n                      <Media.Body>\n                        <h5 className='mt-0'>{heading}</h5>\n                        <p className='mb-0'>{text}</p>\n                      </Media.Body>\n                    </Media>\n                  </Media.Body>\n                </Media>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col xl='6' lg='12'>\n          <Card>\n            <Card.Header>\n              <Card.Title>Align Top</Card.Title>\n            </Card.Header>\n            <Card.Body>\n              <div className='bootstrap-media'>\n                <Media>\n                  <img\n                    className='align-self-start mr-3 '\n                    width='60'\n                    src={avatar4}\n                    alt='DexignZone'\n                  />\n                  <Media.Body>\n                    <h5 className='mt-0'>Top-aligned media</h5>\n                    <p>{text}</p>\n                    <p className='mb-0'>{text3}</p>\n                  </Media.Body>\n                </Media>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col xl='6' lg='12'>\n          <Card>\n            <Card.Header>\n              <Card.Title>Align Center</Card.Title>\n            </Card.Header>\n            <Card.Body>\n              <div className='bootstrap-media'>\n                <Media>\n                  <img\n                    className='align-self-center mr-3 '\n                    width='60'\n                    src={avatar5}\n                    alt='DexignZone'\n                  />\n                  <Media.Body>\n                    <h5 className='mt-0'>Center-aligned media</h5>\n                    <p>{text}</p>\n                    <p className='mb-0'>{text3}</p>\n                  </Media.Body>\n                </Media>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col xl='6' lg='12'>\n          <Card>\n            <Card.Header>\n              <Card.Title>Align Bottom</Card.Title>\n            </Card.Header>\n            <Card.Body>\n              <div className='bootstrap-media'>\n                <Media>\n                  <img\n                    className='align-self-end mr-3 '\n                    width='60'\n                    src={avatar6}\n                    alt='DexignZone'\n                  />\n                  <Media.Body>\n                    <h5 className='mt-0'>Bottom-aligned media</h5>\n                    <p>{text}</p>\n                    <p className='mb-0'>{text3}</p>\n                  </Media.Body>\n                </Media>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col xl='6' lg='12'>\n          <Card>\n            <Card.Header>\n              <Card.Title>Order</Card.Title>\n            </Card.Header>\n            <Card.Body>\n              <div className='bootstrap-media'>\n                <Media>\n                  <Media.Body>\n                    <h5 className='mt-0'>Media object</h5>\n                    <p className='mb-0'>{text}</p>\n                  </Media.Body>\n                  <img\n                    className='ml-3 '\n                    width='60'\n                    src={avatar7}\n                    alt='DexignZone'\n                  />\n                </Media>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n\n      <Row>\n        <div className='col-lg-12'>\n          <Card>\n            <Card.Header>\n              <Card.Title>Media list</Card.Title>\n            </Card.Header>\n            <Card.Body>\n              <div className='bootstrap-media'>\n                <ul className='list-unstyled'>\n                  <li className='media'>\n                    <img\n                      className='mr-3 '\n                      width='60'\n                      src={avatar8}\n                      alt='DexignZone'\n                    />\n                    <Media.Body>\n                      <h5 className='mt-0'>List-based media object</h5>\n                      <p className='mb-0'>{text2}</p>\n                    </Media.Body>\n                  </li>\n                  <li className='media my-4'>\n                    <img\n                      className='mr-3 '\n                      width='60'\n                      src={avatar1}\n                      alt='DexignZone'\n                    />\n                    <Media.Body>\n                      <h5 className='mt-0'>List-based media object</h5>\n                      <p className='mb-0'>{text2}</p>\n                    </Media.Body>\n                  </li>\n                  <li className='media'>\n                    <img\n                      className='mr-3 '\n                      width='60'\n                      src={avatar2}\n                      alt='DexignZone'\n                    />\n                    <Media.Body>\n                      <h5 className='mt-0'>List-based media object</h5>\n                      <p className='mb-0'>{text2}</p>\n                    </Media.Body>\n                  </li>\n                </ul>\n              </div>\n            </Card.Body>\n          </Card>\n        </div>\n      </Row>\n    </Fragment>\n  )\n}\n\nexport default UiMediaObject\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/bootstrap/Cards.js",["901","902","903","904"],"import React, { Fragment } from \"react\";\n\n/// Compoents\nimport PageTitle from \"../../layouts/PageTitle\";\n\n/// Image\nimport img1 from \"../../../images/card/1.png\";\nimport img2 from \"../../../images/card/2.png\";\nimport img3 from \"../../../images/card/3.png\";\n/// Bootstrap\nimport { Row, Card, Col, Button, Nav } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nconst UiCards = () => {\n   return (\n      <Fragment>\n         <PageTitle activeMenu=\"Card\" motherMenu=\"Bootstrap\" />\n         <Row>\n            <Col xl=\"6\" lg=\"6\" md=\"6\" >\n               <Card>\n                  <Card.Header className=\" border-0 pb-0\">\n                     <Card.Title>Card title</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <Card.Text>\n                        He lay on his armour-like back, and if he lifted his\n                        head a little he could see his brown belly, slightly\n                        domed and divided by arches into stiff <br /> sections.\n                        The bedding was hardly able to cover it and seemed ready\n                        to slide off any moment.\n                     </Card.Text>\n                  </Card.Body>\n                  <Card.Footer className=\" border-0 pt-0\">\n                     <Card.Text className=\" d-inline\">Card footer</Card.Text>\n                     <Card.Link href=\"#\" className=\"float-right\">\n                        Card link\n                     </Card.Link>\n                  </Card.Footer>\n               </Card>\n            </Col>\n            <Col xl=\"6\" lg=\"6\" md=\"6\">\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Card title</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <Card.Text>\n                        This is a wider card with supporting text and below as a\n                        natural lead-in to the additional content. This content\n                        is a little\n                        <br /> bit longer. Some quick example text to build the\n                        bulk{\" \"}\n                     </Card.Text>\n                  </Card.Body>\n                  <Card.Footer className=\" d-sm-flex justify-content-between align-items-center\">\n                     <Card.Text className=\" text-dark d-inline\">\n                        Last updated 3 mins ago\n                     </Card.Text>\n\n                     <a href=\"#\" className=\"btn btn-primary\">\n                        Go somewhere\n                     </a>\n                  </Card.Footer>\n               </Card>\n            </Col>\n            <Col xl=\"6\" lg=\"6\" md=\"6\">\n               <Card className=\"text-center\">\n                  <Card.Header>\n                     <Card.Title>Card Title</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <Card.Text>\n                        This is a wider card with supporting text and below as a\n                        natural lead-in to the additional content. This content\n                     </Card.Text>\n                     <Button as=\"a\" variant=\"primary\" href=\"#\" className=\"mt-3\">\n                        Go somewhere\n                     </Button>\n                  </Card.Body>\n                  <Card.Footer>\n                     <Card.Text className=\" text-dark\">\n                        Last updateed 3 min ago\n                     </Card.Text>\n                  </Card.Footer>\n               </Card>\n            </Col>\n            <Col xl=\"6\" lg=\"6\" md=\"6\">\n               <Card className=\"text-center\">\n                  <Card.Header>\n                     <Card.Title>Special title treatment</Card.Title>\n                  </Card.Header>\n                  <Card.Body className=\" custom-tab-1\">\n                     <ul className=\"nav nav-tabs card-body-tabs mb-3\">\n                        <Nav.Item as=\"li\">\n                           <Nav.Link active href=\"#\">\n                              Active\n                           </Nav.Link>\n                        </Nav.Item>\n                        <Nav.Item as=\"li\">\n                           <Nav.Link href=\"#\">Link</Nav.Link>\n                        </Nav.Item>\n                        <Nav.Item as=\"li\">\n                           <Nav.Link disabled href=\"#\">\n                              Disabled\n                           </Nav.Link>\n                        </Nav.Item>\n                     </ul>\n\n                     <Card.Text>\n                        With supporting text below as a natural lead-in to\n                        additional content.\n                     </Card.Text>\n                     <Button variant=\"primary\" href=\"#\" className=\"mt-3\">\n                        Go somewhere\n                     </Button>\n                  </Card.Body>\n               </Card>\n            </Col>\n            <Col xl=\"6\" lg=\"6\" md=\"6\">\n               <Card className=\"text-white bg-primary\">\n                  <Card.Header>\n                     <Card.Title className=\"text-white\">\n                        Primary card title\n                     </Card.Title>\n                  </Card.Header>\n                  <Card.Body className=\" mb-0\">\n                     <Card.Text>\n                        Some quick example text to build on the card title and\n                        make up the bulk of the card's content.\n                     </Card.Text>\n                     <Button\n                        as=\"a\"\n                        variant=\"primary light\"\n                        href=\"#\"\n                        className=\"btn-card mt-3\"\n                     >\n                        Go somewhere\n                     </Button>\n                  </Card.Body>\n                  <Card.Footer className=\" bg-transparent border-0 text-white\">\n                     Last updateed 3 min ago\n                  </Card.Footer>\n               </Card>\n            </Col>\n            <Col xl=\"6\" lg=\"6\" md=\"6\">\n               <Card className=\"text-white bg-secondary\">\n                  <Card.Header>\n                     <Card.Title className=\"text-white\">\n                        Secondary card title\n                     </Card.Title>\n                  </Card.Header>\n                  <Card.Body className=\" mb-0\">\n                     <Card.Text>\n                        Some quick example text to build on the card title and\n                        make up the bulk of the card's content.\n                     </Card.Text>\n                     <Button\n                        as=\"a\"\n                        variant=\"secondary light\"\n                        href=\"#\"\n                        className=\"btn-card mt-3\"\n                     >\n                        Go somewhere\n                     </Button>\n                  </Card.Body>\n                  <Card.Footer className=\" bg-transparent border-0 text-white\">\n                     Last updateed 3 min ago\n                  </Card.Footer>\n               </Card>\n            </Col>\n            <Col xl=\"6\" lg=\"6\" md=\"6\">\n               <Card className=\"text-white bg-success\">\n                  <Card.Header>\n                     <Card.Title className=\"text-white\">\n                        Success card title\n                     </Card.Title>\n                  </Card.Header>\n                  <Card.Body className=\" mb-0\">\n                     <Card.Text>\n                        Some quick example text to build on the card title and\n                        make up the bulk of the card's content.\n                     </Card.Text>\n                     <Button\n                        as=\"a\"\n                        variant=\"success light\"\n                        href=\"#\"\n                        className=\"btn-card mt-3\"\n                     >\n                        Go somewhere\n                     </Button>\n                  </Card.Body>\n                  <Card.Footer className=\" bg-transparent border-0 text-white\">\n                     Last updateed 3 min ago\n                  </Card.Footer>\n               </Card>\n            </Col>\n            <Col xl=\"6\" lg=\"6\" md=\"6\">\n               <Card className=\"text-white bg-danger\">\n                  <Card.Header>\n                     <Card.Title className=\"text-white\">\n                        Danger card title\n                     </Card.Title>\n                  </Card.Header>\n                  <Card.Body className=\" mb-0\">\n                     <Card.Text>\n                        Some quick example text to build on the card title and\n                        make up the bulk of the card's content.\n                     </Card.Text>\n                     <Button\n                        as=\"a\"\n                        variant=\"danger light\"\n                        href=\"#\"\n                        className=\"btn-card mt-3\"\n                     >\n                        Go somewhere\n                     </Button>\n                  </Card.Body>\n                  <Card.Footer className=\" bg-transparent border-0 text-white\">\n                     Last updateed 3 min ago\n                  </Card.Footer>\n               </Card>\n            </Col>\n            <Col xl=\"6\" lg=\"6\" md=\"6\">\n               <Card className=\"text-white bg-warning\">\n                  <Card.Header>\n                     <Card.Title className=\"text-white\">\n                        Warning card title\n                     </Card.Title>\n                  </Card.Header>\n                  <Card.Body className=\" mb-0\">\n                     <Card.Text>\n                        Some quick example text to build on the card title and\n                        make up the bulk of the card's content.\n                     </Card.Text>\n                     <Button\n                        as=\"a\"\n                        variant=\"warning light\"\n                        href=\"#\"\n                        className=\"btn-card mt-3\"\n                     >\n                        Go somewhere\n                     </Button>\n                  </Card.Body>\n                  <Card.Footer className=\" bg-transparent border-0 text-white\">\n                     Last updateed 3 min ago\n                  </Card.Footer>\n               </Card>\n            </Col>\n            <Col xl=\"6\" lg=\"6\" md=\"6\">\n               <Card className=\"text-white bg-info\">\n                  <Card.Header>\n                     <Card.Title className=\"text-white\">\n                        Info card title\n                     </Card.Title>\n                  </Card.Header>\n                  <Card.Body className=\" mb-0\">\n                     <Card.Text>\n                        Some quick example text to build on the card title and\n                        make up the bulk of the card's content.\n                     </Card.Text>\n                     <Button\n                        as=\"a\"\n                        variant=\"info light\"\n                        href=\"#\"\n                        className=\"btn-card mt-3\"\n                     >\n                        Go somewhere\n                     </Button>\n                  </Card.Body>\n                  <Card.Footer className=\" bg-transparent border-0 text-white\">\n                     Last updateed 3 min ago\n                  </Card.Footer>\n               </Card>\n            </Col>\n            <Col xl=\"6\" lg=\"6\" md=\"6\">\n               <Card className=\"bg-light\">\n                  <Card.Header>\n                     <Card.Title>Light card title</Card.Title>\n                  </Card.Header>\n                  <Card.Body className=\" mb-0\">\n                     <Card.Text>\n                        Some quick example text to build on the card title and\n                        make up the bulk of the card's content.\n                     </Card.Text>\n                     <Button\n                        as=\"a\"\n                        variant=\"dark\"\n                        href=\"#\"\n                        className=\"btn-card mt-3\"\n                     >\n                        Go somewhere\n                     </Button>\n                  </Card.Body>\n                  <Card.Footer className=\" bg-transparent border-0\">\n                     Last updateed 3 min ago\n                  </Card.Footer>\n               </Card>\n            </Col>\n            <Col xl=\"6\" lg=\"6\" md=\"6\">\n               <Card className=\"text-white bg-dark\">\n                  <Card.Header>\n                     <Card.Title className=\"text-white\">\n                        Dark card title\n                     </Card.Title>\n                  </Card.Header>\n                  <Card.Body className=\" mb-0\">\n                     <Card.Text>\n                        Some quick example text to build on the card title and\n                        make up the bulk of the card's content.\n                     </Card.Text>\n                     <Button\n                        as=\"a\"\n                        variant=\"light\"\n                        href=\"#\"\n                        className=\"btn-card mt-3 text-dark\"\n                     >\n                        Go somewhere\n                     </Button>\n                  </Card.Body>\n                  <Card.Footer className=\" bg-transparent border-0 text-white\">\n                     Last updateed 3 min ago\n                  </Card.Footer>\n               </Card>\n            </Col>\n            <Col xl=\"6\" lg=\"6\" md=\"6\">\n               <Card className=\"mb-3\">\n                  <img\n                     className=\"card-img-top img-fluid\"\n                     src={img1}\n                     alt=\"Card image cap\"\n                  />\n                  <Card.Header>\n                     <Card.Title>Card title</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <Card.Text>\n                        This is a wider card with supporting text below as a\n                        natural lead-in to additional content. This content is a\n                        little bit longer.\n                     </Card.Text>\n                     <Card.Text className=\" text-dark\">\n                        Last updated 3 mins ago\n                     </Card.Text>\n                  </Card.Body>\n               </Card>\n            </Col>\n            <Col xl=\"6\" lg=\"6\" md=\"6\">\n               <Card className=\"mb-3\">\n                  <img\n                     className=\"card-img-top img-fluid\"\n                     src={img2}\n                     alt=\"Card image cap\"\n                  />\n                  <Card.Header>\n                     <Card.Title>Card title</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <Card.Text>\n                        He lay on his armour-like back, and if he lifted his\n                        head a little\n                     </Card.Text>\n                  </Card.Body>\n                  <Card.Footer>\n                     <Card.Text className=\" d-inline\">Card footer</Card.Text>\n                     <Link to=\"/ui-card\" className=\"card-link float-right\">\n                        Go somewhere\n                     </Link>\n                  </Card.Footer>\n               </Card>\n            </Col>\n            <Col xl=\"6\" lg=\"6\">\n               <Card className=\"mb-3\">\n                  <Card.Header>\n                     <Card.Title>Card title</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <Card.Text>\n                        This is a wider card with supporting text and below as a\n                        natural lead-in to the additional content. This content\n                        is a little\n                     </Card.Text>\n                  </Card.Body>\n                  <img\n                     className=\"card-img-bottom img-fluid\"\n                     src={img3}\n                     alt=\"Card image cap\"\n                  />\n                  <Card.Footer>\n                     <Card.Text className=\" d-inline\">Card footer</Card.Text>\n                     <Link to=\"/ui-card\" className=\"card-link float-right\">\n                        Go somewhere\n                     </Link>\n                  </Card.Footer>\n               </Card>\n            </Col>\n\t\t\t\n         </Row>\n      </Fragment>\n   );\n};\n\nexport default UiCards;\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/bootstrap/Carousel.js",["905"],"import React from 'react'\nimport { Fragment } from 'react'\n\n/// Page Title\nimport PageTitle from '../../layouts/PageTitle'\n\n/// Images\nimport img1 from '../../../images/big/img1.jpg'\nimport img2 from '../../../images/big/img2.jpg'\nimport img3 from '../../../images/big/img3.jpg'\nimport img4 from '../../../images/big/img4.jpg'\nimport img5 from '../../../images/big/img5.jpg'\nimport img6 from '../../../images/big/img6.jpg'\nimport img7 from '../../../images/big/img7.jpg'\n\n/// Bootstrap\nimport { Row, Col, Card, Carousel } from 'react-bootstrap'\n\n/// carousel data\nconst carousel1 = [img1, img2, img3]\nconst carousel2 = [\n  { img: img2, text: 'Frist' },\n  { img: img3, text: 'Second' },\n  { img: img4, text: 'Third' },\n]\nconst carousel3 = [img3, img4, img5]\nconst carousel4 = [img4, img5, img6]\nconst carousel5 = [\n  { img: img5, text: 'Frist' },\n  { img: img6, text: 'Second' },\n  { img: img7, text: 'Third' },\n]\n\nconst UiCarousel = () => {\n  return (\n    <Fragment>\n      <PageTitle motherMenu='Bootstrap' activeMenu='Carousel' />\n      <Row>\n        <Col xl={6}>\n          <Card>\n            <Card.Body className='p-4'>\n              <h4 className='card-intro-title'>Slides only</h4>\n              <Carousel>\n                {carousel1.map((carousel, i) => (\n                  <Carousel.Item key={i}>\n                    <img\n                      src={carousel}\n                      className='d-block w-100'\n                      alt={`Slide ${i + 1}`}\n                    />\n                  </Carousel.Item>\n                ))}\n              </Carousel>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col xl={6}>\n          <Card>\n            <Card.Body className='p-4'>\n              <h4 className='card-intro-title'>With Captions</h4>\n              <Carousel controls={false} indicators={false}>\n                {carousel2.map((carousel, i) => (\n                  <Carousel.Item key={i}>\n                    <img\n                      className='d-block w-100'\n                      src={carousel.img}\n                      alt={`${carousel.text} slide`}\n                    />\n                    <Carousel.Caption className=' d-none d-md-block'>\n                      <h5>{carousel.text} slide label</h5>\n                      <p>\n                        Nulla vitae elit libero, a pharetra augue mollis\n                        interdum.\n                      </p>\n                    </Carousel.Caption>\n                  </Carousel.Item>\n                ))}\n              </Carousel>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col xl={6}>\n          <Card>\n            <Card.Body className='p-4'>\n              <h4 className='card-intro-title'>Slides only</h4>\n              <Carousel controls={false} indicators={false}>\n                {carousel3.map((carousel, i) => (\n                  <Carousel.Item key={i}>\n                    <img\n                      src={carousel}\n                      className='d-block w-100'\n                      alt={`Slide ${i + 1}`}\n                    />\n                  </Carousel.Item>\n                ))}\n              </Carousel>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col xl={6}>\n          <Card>\n            <Card.Body className='p-4'>\n              <h4 className='card-intro-title mb-4'>Slides With indicators</h4>\n              <Carousel>\n                {carousel1.map((carousel, i) => (\n                  <Carousel.Item key={i}>\n                    <img\n                      src={carousel}\n                      className='d-block w-100'\n                      alt={`Slide ${i + 1}`}\n                    />\n                  </Carousel.Item>\n                ))}\n              </Carousel>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col xl={6}>\n          <Card>\n            <Card.Body className='p-4'>\n              <h4 className='card-intro-title mb-4'>Slides With captions</h4>\n              <Carousel>\n                {carousel5.map((carousel, i) => (\n                  <Carousel.Item key={i}>\n                    <img\n                      className='d-block w-100'\n                      src={carousel.img}\n                      alt={`${carousel.text} slide`}\n                    />\n                    <Carousel.Caption className=' d-none d-md-block'>\n                      <h5>{carousel.text} slide label</h5>\n                      <p>\n                        Nulla vitae elit libero, a pharetra augue mollis\n                        interdum.\n                      </p>\n                    </Carousel.Caption>\n                  </Carousel.Item>\n                ))}\n              </Carousel>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\n\nexport default UiCarousel\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/bootstrap/ListGroup.js",["906","907","908","909"],"import React, { Fragment } from \"react\";\nimport PageTitle from \"../../layouts/PageTitle\";\nimport { Row, Card, Col, ListGroup, Badge, Tab } from \"react-bootstrap\";\n\nconst UiListGroup = () => {\n   const listItem = [\n      \"Cras justo odio\",\n      \"Dapibus ac facilisis in\",\n      \"Morbi leo risus\",\n      \"Porta ac consectetur ac\",\n      \"Vestibulum at eros\",\n   ];\n   return (\n      <Fragment>\n         <PageTitle activeMenu=\"List Group\" motherMenu=\"Bootstrap\" />\n         <Row>\n            <Col xl=\"4\" lg=\"6\" md=\"6\">\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Basic List Group</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <div className=\"basic-list-group\">\n                        <ListGroup as=\"ul\">\n                           {listItem.map((list, i) => (\n                              <Fragment key={i}>\n                                 <ListGroup.Item as=\"li\">{list}</ListGroup.Item>\n                              </Fragment>\n                           ))}\n                        </ListGroup>\n                     </div>\n                  </Card.Body>\n               </Card>\n            </Col>\n            <Col xl=\"4\" lg=\"6\" md=\"6\">\n               <Card>\n                  <Card.Header>\n                     <Card.Title>List Active items</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <div className=\"basic-list-group\">\n                        <ListGroup as=\"ul\">\n                           {listItem.map((list, i) => (\n                              <Fragment key={i}>\n                                 {i === 0 ? (\n                                    <ListGroup.Item as=\"li\" active>\n                                       {list}\n                                    </ListGroup.Item>\n                                 ) : (\n                                    <ListGroup.Item as=\"li\">\n                                       {list}\n                                    </ListGroup.Item>\n                                 )}\n                              </Fragment>\n                           ))}\n                        </ListGroup>\n                     </div>\n                  </Card.Body>\n               </Card>\n            </Col>\n            <Col xl=\"4\" lg=\"6\" md=\"6\">\n               <Card>\n                  <Card.Header>\n                     <Card.Title>List Disabled items</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <div className=\"basic-list-group\">\n                        <ListGroup as=\"ul\">\n                           {listItem.map((list, i) => (\n                              <Fragment key={i}>\n                                 {i === 0 ? (\n                                    <ListGroup.Item as=\"li\" disabled>\n                                       {list}\n                                    </ListGroup.Item>\n                                 ) : (\n                                    <ListGroup.Item as=\"li\">\n                                       {list}\n                                    </ListGroup.Item>\n                                 )}\n                              </Fragment>\n                           ))}\n                        </ListGroup>\n                     </div>\n                  </Card.Body>\n               </Card>\n            </Col>\n            <Col xl=\"4\" lg=\"6\" md=\"6\">\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Links and buttons items</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <div className=\"basic-list-group\">\n                        <ListGroup>\n                           {listItem.map((list, i) => (\n                              <Fragment key={i}>\n                                 {i === 0 ? (\n                                    <ListGroup.Item action active>\n                                       {list}\n                                    </ListGroup.Item>\n                                 ) : i === listItem.length - 1 ? (\n                                    <ListGroup.Item\n                                       action\n                                       action\n                                       className=\"list-group-item-action disabled\"\n                                    >\n                                       {list}\n                                    </ListGroup.Item>\n                                 ) : (\n                                    <ListGroup.Item action>\n                                       {list}\n                                    </ListGroup.Item>\n                                 )}\n                              </Fragment>\n                           ))}\n                        </ListGroup>\n                     </div>\n                  </Card.Body>\n               </Card>\n            </Col>\n            <Col xl=\"4\" lg=\"6\" md=\"6\">\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Flush</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <ListGroup as=\"ul\" variant=\"flush\">\n                        {listItem.map((list, i) => (\n                           <Fragment key={i}>\n                              <ListGroup.Item as=\"li\">{list}</ListGroup.Item>\n                           </Fragment>\n                        ))}\n                     </ListGroup>\n                  </Card.Body>\n               </Card>\n            </Col>\n            <Col xl=\"4\" lg=\"6\" md=\"6\">\n               <Card>\n                  <Card.Header>\n                     <Card.Title>With badges</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <div className=\"basic-list-group\">\n                        <ListGroup>\n                           {listItem.map((list, i) => (\n                              <ListGroup.Item\n                                 className=\"d-flex justify-content-between align-items-center\"\n                                 key={i}\n                              >\n                                 {list}\n                                 <Badge variant=\"primary\" pill>\n                                    {i + 1}\n                                 </Badge>\n                              </ListGroup.Item>\n                           ))}\n                        </ListGroup>\n                     </div>\n                  </Card.Body>\n               </Card>\n            </Col>\n            <Col xl=\"6\" lg=\"6\">\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Custom content</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <div className=\"basic-list-group\">\n                        <ListGroup>\n                           <ListGroup.Item\n                              action\n                              action\n                              active\n                              className=\"flex-column align-items-start\"\n                           >\n                              <div className=\"d-flex w-100 justify-content-between\">\n                                 <h5 className=\"mb-3 text-white\">\n                                    List group item heading\n                                 </h5>\n                                 <small>3 days ago</small>\n                              </div>\n                              <p className=\"mb-1\">\n                                 Donec id elit non mi porta gravida at eget\n                                 metus. Maecenas sed diam eget risus varius\n                                 blandit.\n                              </p>\n                              <small>Donec id elit non mi porta.</small>\n                           </ListGroup.Item>\n                           <ListGroup.Item\n                              action\n                              action\n                              className=\"flex-column\"\n                           >\n                              <div className=\"d-flex w-100 justify-content-between\">\n                                 <h5 className=\"mb-3\">\n                                    List group item heading\n                                 </h5>\n                                 <small className=\"text-muted\">\n                                    3 days ago\n                                 </small>\n                              </div>\n                              <p className=\"mb-1\">\n                                 Donec id elit non mi porta gravida at eget\n                                 metus. Maecenas sed diam eget risus varius\n                                 blandit.\n                              </p>\n                              <small className=\"text-muted\">\n                                 Donec id elit non mi porta.\n                              </small>\n                           </ListGroup.Item>\n                           <ListGroup.Item\n                              action\n                              action\n                              className=\"flex-column align-items-start\"\n                           >\n                              <div className=\"d-flex w-100 justify-content-between\">\n                                 <h5 className=\"mb-3\">\n                                    List group item heading\n                                 </h5>\n                                 <small className=\"text-muted\">\n                                    3 days ago\n                                 </small>\n                              </div>\n                              <p className=\"mb-1\">\n                                 Donec id elit non mi porta gravida at eget\n                                 metus. Maecenas sed diam eget risus varius\n                                 blandit.\n                              </p>\n                              <small className=\"text-muted\">\n                                 Donec id elit non mi porta.\n                              </small>\n                           </ListGroup.Item>\n                        </ListGroup>\n                     </div>\n                  </Card.Body>\n               </Card>\n            </Col>\n            <Col xl=\"6\" lg=\"6\">\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Contextual</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <div className=\"basic-list-group\">\n                        <ListGroup as=\"ul\">\n                           <ListGroup.Item variant=\"\">\n                              Dapibus ac facilisis in\n                           </ListGroup.Item>\n                           <ListGroup.Item variant=\"primary\">\n                              This is a primary list group item\n                           </ListGroup.Item>\n                           <ListGroup.Item variant=\"secondary\">\n                              This is a secondary list group item\n                           </ListGroup.Item>\n                           <ListGroup.Item variant=\"success\">\n                              This is a success list group item\n                           </ListGroup.Item>\n                           <ListGroup.Item variant=\"danger\">\n                              This is a danger list group item\n                           </ListGroup.Item>\n                           <ListGroup.Item variant=\"warning\">\n                              This is a warning list group item\n                           </ListGroup.Item>\n                           <ListGroup.Item variant=\"info\">\n                              This is a info list group item\n                           </ListGroup.Item>\n                           <ListGroup.Item variant=\"light\">\n                              This is a light list group item\n                           </ListGroup.Item>\n                           <ListGroup.Item variant=\"dark\">\n                              This is a dark list group item\n                           </ListGroup.Item>\n                        </ListGroup>\n                     </div>\n                  </Card.Body>\n               </Card>\n            </Col>\n         </Row>\n         <Row>\n            <div className=\"col-lg-12\">\n               <Card>\n                  <Card.Header>\n                     <Card.Title>List Tab</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <div className=\"basic-list-group\">\n                        <Row>\n                           <Tab.Container defaultActiveKey=\"#home\">\n                              <Col lg=\"6\" xl=\"2\">\n                                 <ListGroup className=\"mb-4\" id=\"list-tab\">\n                                    <ListGroup.Item action href=\"#home\">\n                                       Home\n                                    </ListGroup.Item>\n                                    <ListGroup.Item action href=\"#profile\">\n                                       Profile\n                                    </ListGroup.Item>\n                                    <ListGroup.Item action href=\"#messages\">\n                                       Messages\n                                    </ListGroup.Item>\n                                    <ListGroup.Item action href=\"#settings\">\n                                       Settings\n                                    </ListGroup.Item>\n                                 </ListGroup>\n                              </Col>\n                              <Col lg=\"6\" xl=\"10\">\n                                 <Tab.Content>\n                                    <Tab.Pane eventKey=\"#home\">\n                                       <h4 className=\"mb-4\">\n                                          Home Tab Content\n                                       </h4>\n                                       <p>\n                                          Velit aute mollit ipsum ad dolor\n                                          consectetur nulla officia culpa\n                                          adipisicing exercitation fugiat\n                                          tempor. Voluptate deserunt sit sunt\n                                          nisi aliqua fugiat proident ea ut.\n                                          Mollit voluptate reprehenderit\n                                          occaecat nisi ad non minim tempor sunt\n                                          voluptate consectetur exercitation id\n                                          ut nulla. Ea et fugiat aliquip nostrud\n                                          sunt incididunt consectetur culpa\n                                          aliquip eiusmod dolor. Anim ad Lorem\n                                          aliqua in cupidatat nisi enim eu\n                                          nostrud do aliquip veniam minim.\n                                       </p>\n                                    </Tab.Pane>\n                                    <Tab.Pane eventKey=\"#profile\">\n                                       <h4 className=\"mb-4\">\n                                          Profile Tab Content\n                                       </h4>\n                                       <p>\n                                          Cupidatat quis ad sint excepteur\n                                          laborum in esse qui. Et excepteur\n                                          consectetur ex nisi eu do cillum ad\n                                          laborum. Mollit et eu officia dolore\n                                          sunt Lorem culpa qui commodo velit ex\n                                          amet id ex. Officia anim incididunt\n                                          laboris deserunt anim aute dolor\n                                          incididunt veniam aute dolore do\n                                          exercitation. Dolor nisi culpa ex ad\n                                          irure in elit eu dolore. Ad laboris\n                                          ipsum reprehenderit irure non commodo\n                                          enim culpa commodo veniam incididunt\n                                          veniam ad.\n                                       </p>\n                                    </Tab.Pane>\n                                    <Tab.Pane eventKey=\"#messages\">\n                                       <h4 className=\"mb-4\">\n                                          Messages Tab Content\n                                       </h4>\n                                       <p>\n                                          Ut ut do pariatur aliquip aliqua\n                                          aliquip exercitation do nostrud\n                                          commodo reprehenderit aute ipsum\n                                          voluptate. Irure Lorem et laboris\n                                          nostrud amet cupidatat cupidatat anim\n                                          do ut velit mollit consequat enim\n                                          tempor. Consectetur est minim nostrud\n                                          nostrud consectetur irure labore\n                                          voluptate irure. Ipsum id Lorem sit\n                                          sint voluptate est pariatur eu ad\n                                          cupidatat et deserunt culpa sit\n                                          eiusmod deserunt. Consectetur et\n                                          fugiat anim do eiusmod aliquip nulla\n                                          laborum elit adipisicing pariatur\n                                          cillum.\n                                       </p>\n                                    </Tab.Pane>\n                                    <Tab.Pane eventKey=\"#settings\">\n                                       <h4 className=\"mb-4\">\n                                          Settings Tab Content\n                                       </h4>\n                                       <p>\n                                          Irure enim occaecat labore sit qui\n                                          aliquip reprehenderit amet velit.\n                                          Deserunt ullamco ex elit nostrud ut\n                                          dolore nisi officia magna sit occaecat\n                                          laboris sunt dolor. Nisi eu minim\n                                          cillum occaecat aute est cupidatat\n                                          aliqua labore aute occaecat ea aliquip\n                                          sunt amet. Aute mollit dolor ut\n                                          exercitation irure commodo non amet\n                                          consectetur quis amet culpa. Quis\n                                          ullamco nisi amet qui aute irure eu.\n                                          Magna labore dolor quis ex labore id\n                                          nostrud deserunt dolor eiusmod eu\n                                          pariatur culpa mollit in irure.\n                                       </p>\n                                    </Tab.Pane>\n                                 </Tab.Content>\n                              </Col>\n                           </Tab.Container>\n                        </Row>\n                     </div>\n                  </Card.Body>\n               </Card>\n\t\t\t   </div>\n         </Row>\n      </Fragment>\n   );\n};\n\nexport default UiListGroup;\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/bootstrap/PopOver.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/bootstrap/Pagination.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/bootstrap/ProgressBar.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/bootstrap/Grid.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/bootstrap/DropDown.js",["910","911","912"],"import React, { Fragment } from 'react'\nimport PageTitle from '../../layouts/PageTitle'\nimport {\n  Row,\n  Col,\n  Card,\n  Dropdown,\n  DropdownButton,\n  ButtonGroup,\n  Button,\n  SplitButton,\n} from 'react-bootstrap'\n\nconst UiDropDown = () => {\n  return (\n    <Fragment>\n      <PageTitle activeMenu='Dropdown' motherMenu='Bootstrap' />\n      <Row>\n        <Col xl={4} lg={6} md={6}>\n          <Card>\n            <Card.Header className='d-block'>\n              <Card.Title>Basic Dropdown</Card.Title>\n              <Card.Text className='m-0 subtitle'>\n                A dropdown menu is a toggleable menu that allows the user to\n                choose one value from a predefined list\n              </Card.Text>\n            </Card.Header>\n            <Card.Body>\n              <div className='basic-dropdown'>\n                <Dropdown>\n                  <Dropdown.Toggle variant='primary'>\n                    Dropdown button\n                  </Dropdown.Toggle>\n                  <Dropdown.Menu>\n                    <Dropdown.Item href='#'>Link 1</Dropdown.Item>\n                    <Dropdown.Item href='#'>Link 2</Dropdown.Item>\n                    <Dropdown.Item href='#'>Link 3</Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n\n        <Col xl={4} lg={6} md={6}>\n          <Card>\n            <Card.Header className='d-block'>\n              <Card.Title>Dropdown Divider</Card.Title>\n              <Card.Text className='m-0 subtitle'>\n                The <code>.dropdown-divider</code> class is used to separate\n                links inside the dropdown menu with a thin horizontal border\n              </Card.Text>\n            </Card.Header>\n            <Card.Body>\n              <div className='basic-dropdown'>\n                <Dropdown>\n                  <Dropdown.Toggle variant='primary'>\n                    Dropdown button\n                  </Dropdown.Toggle>\n                  <Dropdown.Menu>\n                    <Dropdown.Item href='#'>Link 1</Dropdown.Item>\n                    <Dropdown.Item href='#'>Link 2</Dropdown.Item>\n                    <Dropdown.Item href='#'>Link 3</Dropdown.Item>\n                    <div className='dropdown-divider'></div>\n                    <Dropdown.Item href='#'>Another link</Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n\n        <Col xl={4} lg={12}>\n          <Card>\n            <Card.Header className='d-block'>\n              <Card.Title>Dropdown Header</Card.Title>\n              <Card.Text className='m-0 subtitle'>\n                The <code>.dropdown-header</code> class is used to add headers\n                inside the dropdown menu\n              </Card.Text>\n            </Card.Header>\n            <Card.Body>\n              <div className='basic-dropdown'>\n                <Dropdown>\n                  <Dropdown.Toggle variant='primary'>\n                    Dropdown button\n                  </Dropdown.Toggle>\n                  <Dropdown.Menu>\n                    <h5 className='dropdown-header'>Dropdown header</h5>\n                    <Dropdown.Item href='#'>Link 1</Dropdown.Item>\n                    <Dropdown.Item href='#'>Link 2</Dropdown.Item>\n                    <Dropdown.Item href='#'>Link 3</Dropdown.Item>\n                    <h5 className='dropdown-header'>Dropdown header</h5>\n                    <Dropdown.Item href='#'>Another link</Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col xl={4} lg={6} md={6}>\n          <Card>\n            <Card.Header className='d-block'>\n              <Card.Title>Disable and Active items</Card.Title>\n              <Card.Text className='m-0 subtitle'>\n                The <code>.dropdown-header</code> class is used to add headers\n                inside the dropdown menu\n              </Card.Text>\n            </Card.Header>\n            <Card.Body>\n              <div className='basic-dropdown'>\n                <Dropdown>\n                  <Dropdown.Toggle variant='primary'>\n                    Dropdown button\n                  </Dropdown.Toggle>\n                  <Dropdown.Menu>\n                    <Dropdown.Item href='#'>Normal</Dropdown.Item>\n                    <a className='dropdown-item active' href='#'>\n                      Active\n                    </a>\n                    <a className='dropdown-item disabled' href='#'>\n                      Disabled\n                    </a>\n                  </Dropdown.Menu>\n                </Dropdown>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n\n        <Col xl={4} lg={6} md={6}>\n          <Card>\n            <Card.Header className='d-block'>\n              <Card.Title>Align Right</Card.Title>\n              <Card.Text className='m-0 subtitle'>\n                To right-align the dropdown, add the{' '}\n                <code>.dropdown-menu-right</code> class to the element with\n                .dropdown-menu\n              </Card.Text>\n            </Card.Header>\n            <Card.Body>\n              <div className='basic-dropdown'>\n                <Dropdown>\n                  <Dropdown.Toggle variant='primary'>\n                    Dropdown button\n                  </Dropdown.Toggle>\n                  <Dropdown.Menu className='dropdown-menu-right'>\n                    <Dropdown.Item href='#'>Link 1</Dropdown.Item>\n                    <Dropdown.Item href='#'>Link 2</Dropdown.Item>\n                    <Dropdown.Item href='#'>Link 3</Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n\n        <Col xl={4} lg={6} md={6}>\n          <Card>\n            <Card.Header className='d-block'>\n              <Card.Title>Dropup</Card.Title>\n              <Card.Text className='m-0 subtitle'>\n                The <code>.dropup</code> class makes the dropdown menu expand\n                upwards instead of downwards\n              </Card.Text>\n            </Card.Header>\n            <Card.Body>\n              <div className='basic-dropdown'>\n                {/* <!-- Default dropup button --> */}\n                <DropdownButton\n                  as={ButtonGroup}\n                  id='dropdown-button-drop-up'\n                  drop='up'\n                  variant='primary'\n                  title='Dropup'\n                  className='mr-1'\n                >\n                  <Dropdown.Item href='#'>Link 1</Dropdown.Item>\n                  <Dropdown.Item href='#'>Link 2</Dropdown.Item>\n                  <Dropdown.Item href='#'>Link 3</Dropdown.Item>\n                </DropdownButton>\n\n                {/* <!-- Split dropup button --> */}\n                <SplitButton\n                  as={ButtonGroup}\n                  variant='primary'\n                  id='dropdown-button-drop-up'\n                  className='mt-1'\n                  drop='up'\n                  title='Split dropup'\n                >\n                  <Dropdown.Item href='#'>Link 1</Dropdown.Item>\n                  <Dropdown.Item href='#'>Link 2</Dropdown.Item>\n                  <Dropdown.Item href='#'>Link 3</Dropdown.Item>\n                </SplitButton>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n\n        <Col xl={6} lg={6} md={6}>\n          <Card>\n            <Card.Header className='d-block'>\n              <Card.Title>Dropright </Card.Title>\n              <Card.Text className='m-0 subtitle'>\n                Trigger dropdown menus at the right of the elements by adding{' '}\n                <code>.dropright</code> to the parent element\n              </Card.Text>\n            </Card.Header>\n            <Card.Body>\n              <div className='basic-dropdown'>\n                {/* <!-- Default dropright button --> */}\n                <div className='btn-group dropright '>\n                  <DropdownButton\n                    as={ButtonGroup}\n                    id='dropdown-button-drop-right'\n                    drop='right'\n                    variant='primary'\n                    title=' Dropright'\n                    className='mr-1'\n                  >\n                    <Dropdown.Item href='#'>Link 1</Dropdown.Item>\n                    <Dropdown.Item href='#'>Link 2</Dropdown.Item>\n                    <Dropdown.Item href='#'>Link 3</Dropdown.Item>\n                  </DropdownButton>\n                </div>\n\n                {/* <!-- Split dropright button --> */}\n                <div className='btn-group dropright '>\n                  <SplitButton\n                    as={ButtonGroup}\n                    variant='primary'\n                    id='dropdown-button-drop-right'\n                    className='mt-1'\n                    drop='righy'\n                    title='Split dropright'\n                  >\n                    <Dropdown.Item href='#'>Link 1</Dropdown.Item>\n                    <Dropdown.Item href='#'>Link 2</Dropdown.Item>\n                    <Dropdown.Item href='#'>Link 3</Dropdown.Item>\n                  </SplitButton>\n                </div>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n\n        <Col xl={6} lg={12}>\n          <Card>\n            <Card.Header className='d-block'>\n              <Card.Title>Dropleft </Card.Title>\n              <Card.Text className='m-0 subtitle'>\n                Trigger dropdown menus at the right of the elements by adding{' '}\n                <code>.dropleft </code> to the parent element\n              </Card.Text>\n            </Card.Header>\n            <Card.Body>\n              <div className='basic-dropdown'>\n                {/* <!-- Default dropleft button --> */}\n                <DropdownButton\n                  as={ButtonGroup}\n                  id='dropdown-button-drop-left'\n                  drop='left'\n                  variant='primary'\n                  className='mr-1'\n                  title=' Dropleft'\n                >\n                  <Dropdown.Item href='#'>Link 1</Dropdown.Item>\n                  <Dropdown.Item href='#'>Link 2</Dropdown.Item>\n                  <Dropdown.Item href='#'>Link 3</Dropdown.Item>\n                </DropdownButton>\n\n                {/* <!-- Split dropleft button --> */}\n                <div className='btn-group '>\n                  <SplitButton\n                    as={ButtonGroup}\n                    variant='primary'\n                    id='dropdown-button-drop-left'\n                    className='mt-1'\n                    drop='left'\n                    title='Split dropleft'\n                  >\n                    <Dropdown.Item href='#'>Link 1</Dropdown.Item>\n                    <Dropdown.Item href='#'>Link 2</Dropdown.Item>\n                    <Dropdown.Item href='#'>Link 3</Dropdown.Item>\n                  </SplitButton>\n                </div>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col lg={12}>\n          <Card>\n            <Card.Header className='d-block'>\n              <Card.Title>Button Dropdowns</Card.Title>\n            </Card.Header>\n            <Card.Body>\n              <div className='button-dropdown'>\n                {[\n                  'Primary',\n                  'Secondary',\n                  'Success',\n                  'Info',\n                  'Warning',\n                  'Danger',\n                ].map((variant) => (\n                  <SplitButton\n                    key={variant}\n                    as={ButtonGroup}\n                    variant={variant.toLowerCase()}\n                    id='dropdown-button-drop-dwon'\n                    className='mt-1 mr-1'\n                    drop='dwon'\n                    title={` ${variant}`}\n                  >\n                    <Dropdown.Item href='#'>Link 1</Dropdown.Item>\n                    <Dropdown.Item href='#'>Link 2</Dropdown.Item>\n                    <Dropdown.Item href='#'>Link 3</Dropdown.Item>\n                  </SplitButton>\n                ))}\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col lg={12}>\n          <Card>\n            <Card.Header className='d-block'>\n              <Card.Title>Sizing</Card.Title>\n              <Card.Text className='m-0 subtitle'>\n                Button dropdowns work with buttons of all sizes, including\n                default and split dropdown buttons.\n              </Card.Text>\n            </Card.Header>\n            <Card.Body>\n              <div className='dropdown-size'>\n                {/* <!-- Large button groups (default and split) --> */}\n                <DropdownButton\n                  as={ButtonGroup}\n                  id='dropdown-button-drop-down'\n                  drop='down'\n                  variant='primary'\n                  size='lg'\n                  title=' Large button'\n                  className='mr-1'\n                >\n                  <Dropdown.Item href='#'>Action</Dropdown.Item>\n                  <Dropdown.Item href='#'>Another action</Dropdown.Item>\n                  <Dropdown.Item href='#'>Something else here</Dropdown.Item>\n                  <div className='dropdown-divider'></div>\n                  <Dropdown.Item href='#'>Separated link</Dropdown.Item>\n                </DropdownButton>\n\n                <SplitButton\n                  as={ButtonGroup}\n                  id='dropdown-button-drop-down'\n                  drop='down'\n                  variant='primary'\n                  size='lg'\n                  title=' Large split button'\n                  className='mt-1 mr-1'\n                >\n                  <Dropdown.Item href='#'>Action</Dropdown.Item>\n                  <Dropdown.Item href='#'>Another action</Dropdown.Item>\n                  <Dropdown.Item href='#'>Something else here</Dropdown.Item>\n                  <div className='dropdown-divider'></div>\n                  <Dropdown.Item href='#'>Separated link</Dropdown.Item>\n                </SplitButton>\n\n                {/* <!-- Small button groups (default and split) --> */}\n\n                <DropdownButton\n                  as={ButtonGroup}\n                  id='dropdown-button-drop-down'\n                  drop='down'\n                  variant='primary'\n                  size='sm'\n                  className='mt-1 mr-1'\n                  title=' Large button'\n                >\n                  <Dropdown.Item href='#'>Action</Dropdown.Item>\n                  <Dropdown.Item href='#'>Another action</Dropdown.Item>\n                  <Dropdown.Item href='#'>Something else here</Dropdown.Item>\n                  <div className='dropdown-divider'></div>\n                  <Dropdown.Item href='#'>Separated link</Dropdown.Item>\n                </DropdownButton>\n\n                <SplitButton\n                  as={ButtonGroup}\n                  id='dropdown-button-drop-down'\n                  drop='down'\n                  variant='primary'\n                  size='sm'\n                  title=' Large split button'\n                  className='mt-1 mr-1'\n                >\n                  <Dropdown.Item href='#'>Action</Dropdown.Item>\n                  <Dropdown.Item href='#'>Another action</Dropdown.Item>\n                  <Dropdown.Item href='#'>Something else here</Dropdown.Item>\n                  <div className='dropdown-divider'></div>\n                  <Dropdown.Item href='#'>Separated link</Dropdown.Item>\n                </SplitButton>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col lg={12}>\n          <Card>\n            <Card.Header className='d-block'>\n              <Card.Title>Custom style</Card.Title>\n              <Card.Text className='m-0 subtitle'>\n                Use <code>.custom-dropdown</code> this class for this style\n              </Card.Text>\n            </Card.Header>\n            <Card.Body>\n              <Row>\n                <Col xl={3}>\n                  <Dropdown>\n                    <Dropdown.Toggle variant='' className='pl-0 mt-1'>\n                      Last 7 days\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                      <Dropdown.Item href='#'>Last 1 Month</Dropdown.Item>\n                      <Dropdown.Item href='#'>Last 6 Month</Dropdown.Item>\n                      <Dropdown.Item href='#'>Last 10 Month</Dropdown.Item>\n                    </Dropdown.Menu>\n                  </Dropdown>\n                </Col>\n\n                <Col xl={3}>\n                  <Dropdown>\n                    <Dropdown.Toggle\n                      variant='outline-primary'\n                      size='sm'\n                      className='mt-1'\n                    >\n                      Last 7 days\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                      <Dropdown.Item href='#'>Last 1 Month</Dropdown.Item>\n                      <Dropdown.Item href='#'>Last 6 Month</Dropdown.Item>\n                      <Dropdown.Item href='#'>Last 10 Month</Dropdown.Item>\n                    </Dropdown.Menu>\n                  </Dropdown>\n                </Col>\n\n                <Col xl={3}>\n                  <Dropdown>\n                    <Dropdown.Toggle\n                      variant='outline-primary'\n                      size='sm'\n                      className='mt-1'\n                    >\n                      Last 1 Hour\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                      <Dropdown.Item href='#'>Last 1 hour</Dropdown.Item>\n                      <Dropdown.Item href='#'>Last 2 hour</Dropdown.Item>\n                      <Dropdown.Item href='#'>Last 3 hour</Dropdown.Item>\n                    </Dropdown.Menu>\n                  </Dropdown>\n                </Col>\n\n                <Col xl={3}>\n                  <Dropdown>\n                    <Dropdown.Toggle\n                      variant='primary'\n                      size='sm'\n                      className='mt-1'\n                    >\n                      Last 1 Hour\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                      <Dropdown.Item href='#'>Last 1 hour</Dropdown.Item>\n                      <Dropdown.Item href='#'>Last 2 hour</Dropdown.Item>\n                      <Dropdown.Item href='#'>Last 3 hour</Dropdown.Item>\n                    </Dropdown.Menu>\n                  </Dropdown>\n                </Col>\n\n                <Col xl={3}>\n                  <Dropdown>\n                    <Dropdown.Toggle\n                      variant='primary'\n                      className='btn btn-sm btn-primary mt-1'\n                      data-toggle='dropdown'\n                    >\n                      <i className='ti-search m-r-5' /> 3 AM\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                      <Dropdown.Item href='#'>6 AM</Dropdown.Item>\n                      <Dropdown.Item href='#'>9 AM</Dropdown.Item>\n                      <Dropdown.Item href='#'>12 AM</Dropdown.Item>\n                    </Dropdown.Menu>\n                  </Dropdown>\n                </Col>\n\n                <Col xl={3}>\n                  <Dropdown>\n\t\t\t\t  <Dropdown.Toggle\n                      variant='primary'\n                      size='sm'\n                      id='whiteSpace'\n                      className='mt-1'\n                    >\n                      <i className='ti-calendar m-r-5' /> March 20, 2018 &nbsp;\n                      To &nbsp;April 20, 2018\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                      <Dropdown.Item href='#'>\n                        May 20, 2018 &nbsp; To &nbsp; June 20, 2018\n                      </Dropdown.Item>\n                      <Dropdown.Item href='#'>\n                        July 20, 2018 &nbsp; To &nbsp; August 20, 2018\n                      </Dropdown.Item>\n                    </Dropdown.Menu>\n                  </Dropdown>\n                </Col>\n                <Col xl={3}>\n                  <Dropdown>\n                    <Dropdown.Toggle\n                      as='button'\n                      variant=''\n                      className='btn sharp btn-primary tp-btn mt-1'\n                      id='tp-btn'\n                    >\n                      <svg\n                        xmlns='http://www.w3.org/2000/svg'\n                        xmlnsXlink='http://www.w3.org/1999/xlink'\n                        width='18px'\n                        height='18px'\n                        viewBox='0 0 24 24'\n                        version='1.1'\n                      >\n                        <g\n                          stroke='none'\n                          strokeWidth='1'\n                          fill='none'\n                          fillRule='evenodd'\n                        >\n                          <rect x='0' y='0' width='24' height='24' />\n                          <circle fill='#000000' cx='12' cy='5' r='2' />\n                          <circle fill='#000000' cx='12' cy='12' r='2' />\n                          <circle fill='#000000' cx='12' cy='19' r='2' />\n                        </g>\n                      </svg>\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                      <Dropdown.Item href='#'>Option 1</Dropdown.Item>\n                      <Dropdown.Item href='#'>Option 2</Dropdown.Item>\n                      <Dropdown.Item href='#'>Option 3</Dropdown.Item>\n                    </Dropdown.Menu>\n                  </Dropdown>\n                </Col>\n\n                <Col xl={3}>\n                  <Dropdown>\n                    <Dropdown.Toggle\n                      as='button'\n                      variant=''\n                      className='btn sharp btn-primary tp-btn mt-1'\n                      id='tp-btn'\n                    >\n                      <svg\n                        xmlns='http://www.w3.org/2000/svg'\n                        xmlnsXlink='http://www.w3.org/1999/xlink'\n                        width='18px'\n                        height='18px'\n                        viewBox='0 0 24 24'\n                        version='1.1'\n                      >\n                        <g\n                          stroke='none'\n                          strokeWidth='1'\n                          fill='none'\n                          fillRule='evenodd'\n                        >\n                          <rect x='0' y='0' width='24' height='24' />\n                          <circle fill='#000000' cx='12' cy='5' r='2' />\n                          <circle fill='#000000' cx='12' cy='12' r='2' />\n                          <circle fill='#000000' cx='12' cy='19' r='2' />\n                        </g>\n                      </svg>\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                      <Dropdown.Item href='#'>Option 1</Dropdown.Item>\n                      <Dropdown.Item href='#'>Option 2</Dropdown.Item>\n                      <Dropdown.Item href='#'>Option 3</Dropdown.Item>\n                    </Dropdown.Menu>\n                  </Dropdown>\n                </Col>\n              </Row>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\n\nexport default UiDropDown\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/table/DataTable.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/bootstrap/Typography.js",["913","914","915","916","917","918"],"import React, { Fragment } from 'react'\nimport PageTitle from '../../layouts/PageTitle'\nimport { Row, Col, Card } from 'react-bootstrap'\n\nconst UiTypography = () => {\n  return (\n    <Fragment>\n      <PageTitle activeMenu='Typography' motherMenu='Bootstrap' />\n      <Row>\n        <Col xs={12}>\n          <Card>\n            <Card.Body>\n              <Row className='justify-content-between'>\n                <Col lg={4}>\n                  <div className='mb-4'>\n                    <h4 className='card-title card-intro-title'>Typography</h4>\n                    <h6>\n                      Use tags <code>h1 to h6</code> for get desire heading.\n                    </h6>\n                  </div>\n                  <div className='card-content'>\n                    <h1>h1. Bootstrap heading</h1>\n                    <h2>h2. Bootstrap heading</h2>\n                    <h3>h3. Bootstrap heading</h3>\n                    <h4>h4. Bootstrap heading</h4>\n                    <h5>h5. Bootstrap heading</h5>\n                    <h6>h6. Bootstrap heading</h6>\n                  </div>\n                </Col>\n                <Col lg={3}>\n                  <div className='mb-4'>\n                    <h4 className='card-title card-intro-title'>\n                      Paragraph with justify\n                    </h4>\n                    <p>\n                      Use tags <code>text-justify</code> for get desire\n                      paragraph.\n                    </p>\n                  </div>\n                  <div className='card-content'>\n                    <p className='text-justify'>\n                      Ambitioni dedisse scripsisse iudicaretur. Cras mattis\n                      iudicium purus sit amet fermentum. Donec sed odio operae,\n                      eu vulputate felis rhoncus. Praeterea iter est quasdam res\n                      quas ex communi. At nos hinc posthac, sitientis piros\n                      Afros. Petierunt uti sibi concilium totius Galliae in diem\n                      certam indicere. Cras mattis iudicium purus sit amet\n                      fermentum.\n                    </p>\n                  </div>\n                </Col>\n                <Col lg={4}>\n                  <div className='mb-4'>\n                    <h4 className='card-title card-intro-title'>\n                      Alignment text\n                    </h4>\n                    <p>\n                      Use tags <code>text-left, text-center, text-right</code>{' '}\n                      for get desire text.\n                    </p>\n                  </div>\n                  <div className='card-content'>\n                    <p className='text-left'>\n                      Left aligned text on all viewport sizes.\n                    </p>\n                    <p className='text-center'>\n                      Center aligned text on all viewport sizes.\n                    </p>\n                    <p className='text-right'>\n                      Right aligned text on all viewport sizes.\n                    </p>\n                  </div>\n                </Col>\n                <Col xs={12}>\n                  <hr />\n                  <br />\n                </Col>\n                <Col lg={6}>\n                  <div className='mb-4'>\n                    <h4 className='card-title card-intro-title'>\n                      View port text\n                    </h4>\n                    <p>\n                      Use tags{' '}\n                      <code>\n                        text-sm-left, text-md-left, text-lg-left, text-xl-left\n                      </code>{' '}\n                      for get desire text.\n                    </p>\n                  </div>\n                  <div className='card-content'>\n                    <p className='text-sm-left'>\n                      Left aligned text on viewports sized SM (small) or wider.\n                    </p>\n                    <p className='text-md-left'>\n                      Left aligned text on viewports sized MD (medium) or wider.\n                    </p>\n                    <p className='text-lg-left'>\n                      Left aligned text on viewports sized LG (large) or wider.\n                    </p>\n                    <p className='text-xl-left'>\n                      Left aligned text on viewports sized XL (extra-large) or\n                      wider.\n                    </p>\n                  </div>\n                </Col>\n                <Col lg={6}>\n                  <div className='mb-4'>\n                    <h4 className='card-title card-intro-title'>\n                      Font weight and italics\n                    </h4>\n                    <p>\n                      Use tags{' '}\n                      <code>, font-weight-normal, font-weight-italic</code> for\n                      get desire text.\n                    </p>\n                  </div>\n                  <div className='card-content'>\n                    <p className=''>Bold text.</p>\n                    <p className='font-weight-normal'>Normal weight text.</p>\n                    <p className='font-italic'>Italic text.</p>\n                  </div>\n                </Col>\n                <Col xs={12}>\n                  <hr />\n                  <br />\n                </Col>\n                <Col lg={4}>\n                  <div className='mb-4'>\n                    <h4 className='card-title card-intro-title'>Text colors</h4>\n                    <p>Use tags below class for get desire text.</p>\n                  </div>\n                  <div className='card-content'>\n                    <p className='text-muted'>\n                      This is an example of muted text. Add class{' '}\n                      <code>text-muted</code>\n                    </p>\n                    <p className='text-primary'>\n                      This is an example of primary text. Add class{' '}\n                      <code>text-primary</code>\n                    </p>\n                    <p className='text-success'>\n                      This is an example of success text. Add class{' '}\n                      <code>text-success</code>\n                    </p>\n                    <p className='text-info'>\n                      This is an example of info text. Add class{' '}\n                      <code>text-info</code>\n                    </p>\n                    <p className='text-warning'>\n                      This is an example of warning text. Add class{' '}\n                      <code>text-warning</code>\n                    </p>\n                    <p className='text-danger'>\n                      This is an example of danger text. Add class{' '}\n                      <code>text-danger</code>\n                    </p>\n                  </div>\n                </Col>\n                <Col lg={4}>\n                  <div className='mb-4'>\n                    <h4 className='card-title card-intro-title'>Address</h4>\n                    <p>\n                      Use <code>address</code> for get desire address.\n                    </p>\n                  </div>\n                  <div className='card-content'>\n                    <address>\n                      <strong>Twitter, Inc.</strong>\n                      <br />\n                      795 Folsom Ave, Suite 600\n                      <br />\n                      San Francisco, CA 94107\n                      <br />\n                      <abbr title='Phone'>P:</abbr>(123) 456-7890\n                    </address>\n                    <address>\n                      <strong>George Belly</strong>\n                      <br />\n                      <a href='mailto:#'>info@example.com</a>\n                    </address>\n                  </div>\n                </Col>\n                <Col lg={4}>\n                  <div className='mb-4'>\n                    <h4 className='card-title card-intro-title'>Blockquotes</h4>\n                    <p>\n                      Use <code>blockquote</code> for get desire address.\n                    </p>\n                  </div>\n                  <blockquote>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                    Integer posuere erat a ante.\n                  </blockquote>\n                  <blockquote>\n                    <p>\n                      Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                      Integer posuere erat a ante.\n                    </p>\n                    <small>\n                      {' '}\n                      - Someone famous in{' '}\n                      <cite title='Source Title'>Source Title</cite>\n                    </small>\n                  </blockquote>\n                </Col>\n                <Col xs={12}>\n                  <hr />\n                  <br />\n                </Col>\n                <Col lg={4} className=' mb-3'>\n                  <div className='mb-4'>\n                    <h4 className='card-title card-intro-title mb-1'>\n                      Ol Listing\n                    </h4>\n                    <p>\n                      Use tags <code>ol {'>'} li</code> for get desire ol list.\n                    </p>\n                  </div>\n                  <ol>\n                    <li>Lorem ipsum dolor sit amet</li>\n                    <li>Consectetur adipiscing elit</li>\n                    <li>Integer molestie lorem at massa</li>\n                  </ol>\n                </Col>\n                <Col lg={4} className=' mb-3'>\n                  <div className='mb-4'>\n                    <h4 className='card-title card-intro-title mb-1'>\n                      Ul Listing\n                    </h4>\n                    <p>\n                      Use tags <code>ul {'>'} li</code> for get desire ol list.\n                    </p>\n                  </div>\n                  <ul>\n                    <li>Lorem ipsum dolor sit amet</li>\n                    <li>Consectetur adipiscing elit</li>\n                    <li>Integer molestie lorem at massa</li>\n                  </ul>\n                </Col>\n                <Col lg={4} className=' mb-3'>\n                  <div className='mb-4'>\n                    <h4 className='card-title card-intro-title mb-1'>\n                      Description Text\n                    </h4>\n                    <p>\n                      Use tags <code>dl {'>'} dt</code> for get desire ol list.\n                    </p>\n                  </div>\n                  <dl>\n                    <dt>Standard Description List</dt>\n                    <dd>Description Text</dd>\n                    <dt>Description List Title</dt>\n                    <dd>Description List Text</dd>\n                  </dl>\n                </Col>\n                <Col xs={12}>\n                  <hr />\n                  <br />\n                </Col>\n                <Col lg={4} className=' mb-3'>\n                  <div className='mb-4'>\n                    <h4 className='card-title card-intro-title mb-1'>\n                      Fancy Listing 1\n                    </h4>\n                    <p>\n                      Use class <code>list-icons</code> to ul for get desire ol\n                      list.\n                    </p>\n                  </div>\n                  <ul className='list-icons'>\n                    <li>\n                      <span className='align-middle mr-2'>\n                        <i className='ti-angle-right'></i>\n                      </span>{' '}\n                      Lorem ipsum dolor sit amet\n                    </li>\n                    <li>\n                      <span className='align-middle mr-2'>\n                        <i className='ti-angle-right'></i>\n                      </span>{' '}\n                      Consectetur adipiscing elit\n                    </li>\n                    <li>\n                      <span className='align-middle mr-2'>\n                        <i className='ti-angle-right'></i>\n                      </span>{' '}\n                      Integer molestie lorem at massa\n                    </li>\n                  </ul>\n                </Col>\n                <Col lg={4} className=' mb-3'>\n                  <div className='mb-4'>\n                    <h4 className='card-title card-intro-title mb-1'>\n                      Fancy Listing with href\n                    </h4>\n                    <p>\n                      Use class <code>list-icons</code> to ul for get desire ol\n                      list.\n                    </p>\n                  </div>\n                  <ul className='list-icons'>\n                    <li>\n                      <a href='#'>\n                        <span className='align-middle mr-2'>\n                          <i className='fa fa-check text-info'></i>\n                        </span>{' '}\n                        Lorem ipsum dolor sit amet\n                      </a>\n                    </li>\n                    <li>\n                      <a href='#'>\n                        <span className='align-middle mr-2'>\n                          <i className='fa fa-check text-info'></i>\n                        </span>\n                        Consectetur adipiscing elit\n                      </a>\n                    </li>\n                    <li>\n                      <a href='#'>\n                        <span className='align-middle mr-2'>\n                          <i className='fa fa-check text-info'></i>\n                        </span>\n                        Integer molestie lorem at massa\n                      </a>\n                    </li>\n                  </ul>\n                </Col>\n                <Col lg={4} className=' mb-3'>\n                  <div className='mb-4'>\n                    <h4 className='card-title card-intro-title mb-1'>\n                      Fancy Listing with href\n                    </h4>\n                    <p>\n                      Use class <code>list-icons</code> to ul for get desire ol\n                      list.\n                    </p>\n                  </div>\n                  <ul className='list-icons'>\n                    <li>\n                      <a href='#'>\n                        <span className='align-middle mr-2'>\n                          <i className='fa fa-chevron-right'></i>\n                        </span>{' '}\n                        Lorem ipsum dolor sit amet\n                      </a>\n                    </li>\n                    <li>\n                      <a href='#'>\n                        <span className='align-middle mr-2'>\n                          <i className='fa fa-chevron-right'></i>\n                        </span>\n                        Consectetur adipiscing elit\n                      </a>\n                    </li>\n                    <li>\n                      <a href='#'>\n                        <span className='align-middle mr-2'>\n                          <i className='fa fa-chevron-right'></i>\n                        </span>\n                        Integer molestie lorem at massa\n                      </a>\n                    </li>\n                  </ul>\n                </Col>\n              </Row>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\n\nexport default UiTypography\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/bootstrap/Tab.js",["919"],"import React, { Fragment } from 'react'\n\nimport PageTitle from '../../layouts/PageTitle'\nimport { Row, Col, Card, Tabs, Tab, Nav } from 'react-bootstrap'\n\nconst UiTab = () => {\n  const tabData = [\n    {\n      name: 'Home',\n      icon: 'home',\n      content:\n        'Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. Separated they live in Bookmarksgrove.',\n    },\n    {\n      name: 'Profile',\n      icon: 'user',\n      content:\n        \"Raw denim you probably haven't heard of them jean shorts Austin. Nesciunt tofu stumptown aliqua, retro synth master cleanse. Mustache cliche tempor.      \",\n    },\n    {\n      name: 'Contact',\n      icon: 'phone',\n      content:\n        'Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. Separated they live in Bookmarksgrove.',\n    },\n\n    {\n      name: 'Message',\n      icon: 'envelope',\n      content:\n        \"Raw denim you probably haven't heard of them jean shorts Austin. Nesciunt tofu stumptown aliqua, retro synth master cleanse. Mustache cliche tempor.      \",\n    },\n  ]\n\n  return (\n    <Fragment>\n      <PageTitle activeMenu='Tab' motherMenu='Bootstrap' />\n      <Row>\n        <Col xl={6}>\n          <Card>\n            <Card.Header>\n              <Card.Title>Default Tab</Card.Title>\n            </Card.Header>\n            <Card.Body>\n              {/* <!-- Nav tabs --> */}\n              <div className='default-tab'>\n                <Tab.Container defaultActiveKey={tabData[0].name.toLowerCase()}>\n                  <Nav as='ul' className='nav-tabs'>\n                    {tabData.map((data, i) => (\n                      <Nav.Item as='li' key={i}>\n                        <Nav.Link eventKey={data.name.toLowerCase()}>\n                          <i className={`la la-${data.icon} mr-2`} />\n                          {data.name}\n                        </Nav.Link>\n                      </Nav.Item>\n                    ))}\n                  </Nav>\n                  <Tab.Content className='pt-4'>\n                    {tabData.map((data, i) => (\n                      <Tab.Pane eventKey={data.name.toLowerCase()} key={i}>\n                        <h4>This is {data.name} title</h4>\n                        <p>{data.content}</p>\n                        <p>{data.content}</p>\n                      </Tab.Pane>\n                    ))}\n                  </Tab.Content>\n                </Tab.Container>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col xl={6}>\n          <Card>\n            <Card.Header>\n              <Card.Title>Custom Tab 1</Card.Title>\n            </Card.Header>\n            <Card.Body>\n              {/* <!-- Nav tabs --> */}\n              <div className='custom-tab-1'>\n                <Tab.Container defaultActiveKey={tabData[0].name.toLowerCase()}>\n                  <Nav as='ul' className='nav-tabs'>\n                    {tabData.map((data, i) => (\n                      <Nav.Item as='li' key={i}>\n                        <Nav.Link eventKey={data.name.toLowerCase()}>\n                          <i className={`la la-${data.icon} mr-2`} />\n                          {data.name}\n                        </Nav.Link>\n                      </Nav.Item>\n                    ))}\n                  </Nav>\n                  <Tab.Content className='pt-4'>\n                    {tabData.map((data, i) => (\n                      <Tab.Pane eventKey={data.name.toLowerCase()} key={i}>\n                        <h4>This is {data.name} title</h4>\n                        <p>{data.content}</p>\n                        <p>{data.content}</p>\n                      </Tab.Pane>\n                    ))}\n                  </Tab.Content>\n                </Tab.Container>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col xl={6}>\n          <Card>\n            <Card.Header>\n              <Card.Title>Nav Pills Tabs</Card.Title>\n            </Card.Header>\n            <Card.Body>\n              <Tab.Container defaultActiveKey={tabData[0].name.toLowerCase()}>\n                <Nav as='ul' className='nav-pills mb-4 light'>\n                  {tabData.map(\n                    (data, i) =>\n                      i !== tabData.length - 1 && (\n                        <Nav.Item as='li' key={i}>\n                          <Nav.Link eventKey={data.name.toLowerCase()}>\n                            Tab {i === 1 ? 'One' : i === 2 ? 'Two' : 'Three'}\n                          </Nav.Link>\n                        </Nav.Item>\n                      )\n                  )}\n                </Nav>\n                <Tab.Content className='pt-4'>\n                  {tabData.map(\n                    (data, i) =>\n                      i !== tabData.length - 1 && (\n                        <Tab.Pane eventKey={data.name.toLowerCase()} key={i}>\n                          <p>{data.content}</p>\n                          <p>{data.content}</p>\n                        </Tab.Pane>\n                      )\n                  )}\n                </Tab.Content>\n              </Tab.Container>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col xl={6}>\n          <Card>\n            <Card.Header>\n              <Card.Title>Nav Pills Tabs</Card.Title>\n            </Card.Header>\n            <Card.Body>\n              <Tab.Container defaultActiveKey={tabData[0].name.toLowerCase()}>\n                <Nav as='ul' className='nav-pills mb-4 justify-content-end'>\n                  {tabData.map(\n                    (data, i) =>\n                      i !== tabData.length - 1 && (\n                        <Nav.Item as='li' key={i}>\n                          <Nav.Link eventKey={data.name.toLowerCase()}>\n                            Tab {i === 1 ? 'One' : i === 2 ? 'Two' : 'Three'}\n                          </Nav.Link>\n                        </Nav.Item>\n                      )\n                  )}\n                </Nav>\n                <Tab.Content className='pt-4'>\n                  {tabData.map(\n                    (data, i) =>\n                      i !== tabData.length - 1 && (\n                        <Tab.Pane eventKey={data.name.toLowerCase()} key={i}>\n                          <p>{data.content}</p>\n                          <p>{data.content}</p>\n                        </Tab.Pane>\n                      )\n                  )}\n                </Tab.Content>\n              </Tab.Container>\n            </Card.Body>\n          </Card>\n        </Col>\n\n        <div className=\"col-xl-6\">\n          <Card>\n            <Card.Header>\n              <Card.Title>Vertical Nav Pill</Card.Title>\n            </Card.Header>\n            <Card.Body>\n              <Row>\n                <Tab.Container defaultActiveKey={tabData[0].name.toLowerCase()}>\n                  <div className=\"col-sm-4 col-xl-3 col-xxl-5\">\n                    <Nav as='ul' className='flex-column m-0 nav-pills mb-3'>\n                      {tabData.map((data, i) => (\n                        <Nav.Item as='li' key={i}>\n                          <Nav.Link eventKey={data.name.toLowerCase()}>\n                            {data.name}\n                          </Nav.Link>\n                        </Nav.Item>\n                      ))}\n                    </Nav>\n                  </div>\n                  <div  className=\"col-sm-8 col-xl-9 col-xxl-7\">\n                    <Tab.Content className='ml-2'>\n                      {tabData.map((data, i) => (\n                        <Tab.Pane eventKey={data.name.toLowerCase()} key={i}>\n                          <p>\n                            {data.content} {data.content}\n                          </p>\n                        </Tab.Pane>\n                      ))}\n                    </Tab.Content>{' '}\n                  </div>\n                </Tab.Container>\n              </Row>\n            </Card.Body>\n          </Card>\n        </div>\n        <div className=\"col-xl-6\">\n          <Card>\n            <Card.Header>\n              <Card.Title>Vertical Nav Pill</Card.Title>\n            </Card.Header>\n            <Card.Body>\n              <Row>\n                <Tab.Container defaultActiveKey={tabData[0].name.toLowerCase()}>\n                  <div className=\"col-sm-8 col-xl-9 col-xxl-7\">\n                    <Tab.Content>\n                      {tabData.map((data, i) => (\n                        <Tab.Pane eventKey={data.name.toLowerCase()} key={i}>\n                          <p>\n                            {data.content} {data.content}\n                          </p>\n                        </Tab.Pane>\n                      ))}\n                    </Tab.Content>\n                  </div>\n                  <div className=\"col-sm-4 col-xl-3 col-xxl-5\" id='order-2'>\n                    <Nav as='div' variant='pills' className='flex-column m-0'>\n                      {tabData.map((data, i) => (\n                        <Nav.Item as='a' key={i}>\n                          <Nav.Link eventKey={data.name.toLowerCase()}>\n                            {data.name}\n                          </Nav.Link>\n                        </Nav.Item>\n                      ))}\n                    </Nav>\n                  </div>\n                </Tab.Container>\n              </Row>\n            </Card.Body>\n          </Card>\n        </div>\n\n        <div className='col-xl-12'>\n          <Card>\n            <Card.Header>\n              <Card.Title>Tab with icon</Card.Title>\n            </Card.Header>\n            <Card.Body>\n              <Tab.Container defaultActiveKey={tabData[0].name.toLowerCase()}>\n                <Nav as='ul' className='nav-tabs'>\n                  {tabData.map(\n                    (data, i) =>\n                      i !== tabData.length - 1 && (\n                        <Nav.Item as='li' key={i}>\n                          <Nav.Link eventKey={data.name.toLowerCase()}>\n                            <i\n                              className={`ti-${i === 2 ? 'email' : data.icon}`}\n                            />\n                          </Nav.Link>\n                        </Nav.Item>\n                      )\n                  )}\n                </Nav>\n                <Tab.Content className='pt-4'>\n                  {tabData.map(\n                    (data, i) =>\n                      i !== tabData.length - 1 && (\n                        <Tab.Pane eventKey={data.name.toLowerCase()} key={i}>\n                          <h4>This is icon title</h4>\n                          <p>{data.content}</p>\n                          <p>{data.content}</p>\n                        </Tab.Pane>\n                      )\n                  )}\n                </Tab.Content>\n              </Tab.Container>\n            </Card.Body>\n          </Card>\n        </div>\n      </Row>\n    </Fragment>\n  )\n}\n\nexport default UiTab\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Settings/Settings.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/apexcharts/ApexChart.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/table/BootstrapTable.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/AppsMenu/Calendar/Calendar.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/AppsMenu/Shop/ProductGrid/ProductGrid.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/AppsMenu/AppProfile/AppProfile.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/AppsMenu/Shop/ProductGrid/ProductDetail.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/AppsMenu/AppProfile/PostDetails.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/AppsMenu/Shop/ProductList/ProductList.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/AppsMenu/Shop/ProductOrder.js",["920","921","922","923","924","925","926","927","928","929","930","931","932","933","934"],"import React, { Fragment } from \"react\";\n\nimport PageTitle from \"../../../layouts/PageTitle\";\n\nimport { Badge, Dropdown, Table } from \"react-bootstrap\";\n\nconst ProductOrder = () => {\n   const chackbox = document.querySelectorAll(\".product_order_single\");\n   const motherChackBox = document.querySelector(\".product_order\");\n   // console.log(document.querySelectorAll(\".publish_review input\")[0].checked);\n   const chackboxFun = (type) => {\n      for (let i = 0; i < chackbox.length; i++) {\n         const element = chackbox[i];\n         if (type === \"all\") {\n            if (motherChackBox.checked) {\n               element.checked = true;\n            } else {\n               element.checked = false;\n            }\n         } else {\n            if (!element.checked) {\n               motherChackBox.checked = false;\n               break;\n            } else {\n               motherChackBox.checked = true;\n            }\n         }\n      }\n   };\n\n   return (\n      <div className=\"h-80\">\n         <PageTitle activeMenu=\"Product Order\" motherMenu=\"Shop\" />\n         <div className=\"row\">\n            <div className=\"col-lg-12\">\n               <div className=\"card\">\n                  <div className=\"card-body\">\n                     <div className=\"table-responsive\">\n                        <table className=\"table table-sm mb-0 table-responsive-lg text-black\">\n                           <thead>\n                              <tr>\n                                 <th className=\"align-middle\">\n                                    <div className=\"custom-control custom-checkbox\">\n                                       <input\n                                          type=\"checkbox\"\n                                          onClick={() => chackboxFun(\"all\")}\n                                          className=\"custom-control-input product_order\"\n                                          id=\"checkAll\"\n                                       />\n                                       <label\n                                          className=\"custom-control-label\"\n                                          htmlFor=\"checkAll\"\n                                       />\n                                    </div>\n                                 </th>\n                                 <th className=\"align-middle\">Order</th>\n                                 <th className=\"align-middle pr-7\">Date</th>\n                                 <th className=\"align-middle minw200\">\n                                    Ship To\n                                 </th>\n                                 <th className=\"align-middle text-right\">\n                                    Status\n                                 </th>\n                                 <th className=\"align-middle text-right\">\n                                    Amount\n                                 </th>\n                                 <th className=\"no-sort\" />\n                              </tr>\n                           </thead>\n                           <tbody id=\"orders\">\n                              <tr className=\"btn-reveal-trigger\">\n                                 <td className=\"py-2\">\n                                    <div className=\"custom-control custom-checkbox checkbox-success\">\n                                       <input\n                                          type=\"checkbox\"\n                                          onClick={() => chackboxFun()}\n                                          className=\"custom-control-input product_order_single\"\n                                          id=\"checkbox\"\n                                       />\n                                       <label\n                                          className=\"custom-control-label\"\n                                          htmlFor=\"checkbox\"\n                                       />\n                                    </div>\n                                 </td>\n                                 <td className=\"py-2\">\n                                    <a href=\"#\">\n                                       <strong>#181</strong>\n                                    </a>{\" \"}\n                                    by <strong>Ricky Antony</strong>\n                                    <br />\n                                    <a href=\"mailto:ricky@example.com\">\n                                       ricky@example.com\n                                    </a>\n                                 </td>\n                                 <td className=\"py-2\">20/04/2020</td>\n                                 <td className=\"py-2\">\n                                    Ricky Antony, 2392 Main Avenue, Penasauka,\n                                    New Jersey 02149\n                                    <p className=\"mb-0 text-500\">\n                                       Via Flat Rate\n                                    </p>\n                                 </td>\n                                 <td className=\"py-2 text-right\">\n                                    <span className=\"badge badge-success\">\n                                       Completed\n                                       <span className=\"ml-1 fa fa-check\" />\n                                    </span>\n                                 </td>\n                                 <td className=\"py-2 text-right\">$99</td>\n                                 <td className=\"py-2 text-right\">\n                                    <Dropdown className=\"dropdown text-sans-serif\">\n                                       <Dropdown.Toggle\n                                          variant=\"\"\n                                          className=\"btn btn-primary tp-btn-light sharp icon-false\"\n                                          type=\"button\"\n                                          id=\"order-dropdown-0\"\n                                          data-toggle=\"dropdown\"\n                                          data-boundary=\"viewport\"\n                                          aria-haspopup=\"true\"\n                                          aria-expanded=\"false\"\n                                       >\n                                          <span>\n                                             <svg\n                                                xmlns=\"http://www.w3.org/2000/svg\"\n                                                xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n                                                width=\"18px\"\n                                                height=\"18px\"\n                                                viewBox=\"0 0 24 24\"\n                                                version=\"1.1\"\n                                             >\n                                                <g\n                                                   stroke=\"none\"\n                                                   strokeWidth={1}\n                                                   fill=\"none\"\n                                                   fillRule=\"evenodd\"\n                                                >\n                                                   <rect\n                                                      x={0}\n                                                      y={0}\n                                                      width={24}\n                                                      height={24}\n                                                   />\n                                                   <circle\n                                                      fill=\"#000000\"\n                                                      cx={5}\n                                                      cy={12}\n                                                      r={2}\n                                                   />\n                                                   <circle\n                                                      fill=\"#000000\"\n                                                      cx={12}\n                                                      cy={12}\n                                                      r={2}\n                                                   />\n                                                   <circle\n                                                      fill=\"#000000\"\n                                                      cx={19}\n                                                      cy={12}\n                                                      r={2}\n                                                   />\n                                                </g>\n                                             </svg>\n                                          </span>\n                                       </Dropdown.Toggle>\n                                       <Dropdown.Menu\n                                          className=\"dropdown-menu dropdown-menu-right border py-0\"\n                                          aria-labelledby=\"order-dropdown-0\"\n                                       >\n                                          <div className=\"py-2\">\n                                             <a\n                                                className=\"dropdown-item\"\n                                                href=\"#!\"\n                                             >\n                                                Completed\n                                             </a>\n                                             <a\n                                                className=\"dropdown-item\"\n                                                href=\"#!\"\n                                             >\n                                                Processing\n                                             </a>\n                                             <a\n                                                className=\"dropdown-item\"\n                                                href=\"#!\"\n                                             >\n                                                On Hold\n                                             </a>\n                                             <a\n                                                className=\"dropdown-item\"\n                                                href=\"#!\"\n                                             >\n                                                Pending\n                                             </a>\n                                             <div className=\"dropdown-divider\" />\n                                             <a\n                                                className=\"dropdown-item text-danger\"\n                                                href=\"#!\"\n                                             >\n                                                Delete\n                                             </a>\n                                          </div>\n                                       </Dropdown.Menu>\n                                    </Dropdown>\n                                 </td>\n                              </tr>\n                              <tr className=\"btn-reveal-trigger\">\n                                 <td className=\"py-2\">\n                                    <div className=\"custom-control custom-checkbox \">\n                                       <input\n                                          type=\"checkbox\"\n                                          onClick={() => chackboxFun()}\n                                          className=\"custom-control-input product_order_single\"\n                                          id=\"checkbox1\"\n                                       />\n                                       <label\n                                          className=\"custom-control-label\"\n                                          htmlFor=\"checkbox1\"\n                                       />\n                                    </div>\n                                 </td>\n                                 <td className=\"py-2\">\n                                    <a href=\"#\">\n                                       <strong>#182</strong>\n                                    </a>{\" \"}\n                                    by <strong>Kin Rossow</strong>\n                                    <br />\n                                    <a href=\"mailto:kin@example.com\">\n                                       kin@example.com\n                                    </a>\n                                 </td>\n                                 <td className=\"py-2\">20/04/2020</td>\n                                 <td className=\"py-2\">\n                                    Kin Rossow, 1 Hollywood Blvd,Beverly Hills,\n                                    California 90210\n                                    <p className=\"mb-0 text-500\">\n                                       Via Free Shipping\n                                    </p>\n                                 </td>\n                                 <td className=\"py-2 text-right\">\n                                    <span className=\"badge badge-primary\">\n                                       Processing\n                                       <span className=\"ml-1 fa fa-redo\" />\n                                    </span>\n                                 </td>\n                                 <td className=\"py-2 text-right\">$120</td>\n                                 <td className=\"py-2 text-right\">\n                                    <Dropdown className=\"dropdown text-sans-serif\">\n                                       <Dropdown.Toggle\n                                          variant=\"\"\n                                          className=\"btn btn-primary tp-btn-light sharp icon-false\"\n                                          type=\"button\"\n                                          id=\"order-dropdown-0\"\n                                          data-toggle=\"dropdown\"\n                                          data-boundary=\"viewport\"\n                                          aria-haspopup=\"true\"\n                                          aria-expanded=\"false\"\n                                       >\n                                          <span>\n                                             <svg\n                                                xmlns=\"http://www.w3.org/2000/svg\"\n                                                xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n                                                width=\"18px\"\n                                                height=\"18px\"\n                                                viewBox=\"0 0 24 24\"\n                                                version=\"1.1\"\n                                             >\n                                                <g\n                                                   stroke=\"none\"\n                                                   strokeWidth={1}\n                                                   fill=\"none\"\n                                                   fillRule=\"evenodd\"\n                                                >\n                                                   <rect\n                                                      x={0}\n                                                      y={0}\n                                                      width={24}\n                                                      height={24}\n                                                   />\n                                                   <circle\n                                                      fill=\"#000000\"\n                                                      cx={5}\n                                                      cy={12}\n                                                      r={2}\n                                                   />\n                                                   <circle\n                                                      fill=\"#000000\"\n                                                      cx={12}\n                                                      cy={12}\n                                                      r={2}\n                                                   />\n                                                   <circle\n                                                      fill=\"#000000\"\n                                                      cx={19}\n                                                      cy={12}\n                                                      r={2}\n                                                   />\n                                                </g>\n                                             </svg>\n                                          </span>\n                                       </Dropdown.Toggle>\n                                       <Dropdown.Menu\n                                          className=\"dropdown-menu dropdown-menu-right border py-0\"\n                                          aria-labelledby=\"order-dropdown-0\"\n                                       >\n                                          <div className=\"py-2\">\n                                             <a\n                                                className=\"dropdown-item\"\n                                                href=\"#!\"\n                                             >\n                                                Completed\n                                             </a>\n                                             <a\n                                                className=\"dropdown-item\"\n                                                href=\"#!\"\n                                             >\n                                                Processing\n                                             </a>\n                                             <a\n                                                className=\"dropdown-item\"\n                                                href=\"#!\"\n                                             >\n                                                On Hold\n                                             </a>\n                                             <a\n                                                className=\"dropdown-item\"\n                                                href=\"#!\"\n                                             >\n                                                Pending\n                                             </a>\n                                             <div className=\"dropdown-divider\" />\n                                             <a\n                                                className=\"dropdown-item text-danger\"\n                                                href=\"#!\"\n                                             >\n                                                Delete\n                                             </a>\n                                          </div>\n                                       </Dropdown.Menu>\n                                    </Dropdown>\n                                 </td>\n                              </tr>\n                              <tr className=\"btn-reveal-trigger\">\n                                 <td className=\"py-2\">\n                                    <div className=\"custom-control custom-checkbox checkbox-secondary\">\n                                       <input\n                                          type=\"checkbox\"\n                                          onClick={() => chackboxFun()}\n                                          className=\"custom-control-input product_order_single\"\n                                          id=\"checkbox2\"\n                                       />\n                                       <label\n                                          className=\"custom-control-label\"\n                                          htmlFor=\"checkbox2\"\n                                       />\n                                    </div>\n                                 </td>\n                                 <td className=\"py-2\">\n                                    <a href=\"#\">\n                                       <strong>#183</strong>\n                                    </a>{\" \"}\n                                    by <strong>Merry Diana</strong>\n                                    <br />\n                                    <a href=\"mailto:merry@example.com\">\n                                       merry@example.com\n                                    </a>\n                                 </td>\n                                 <td className=\"py-2\">30/04/2020</td>\n                                 <td className=\"py-2\">\n                                    Merry Diana, 1 Infinite Loop, Cupertino,\n                                    California 90210\n                                    <p className=\"mb-0 text-500\">\n                                       Via Link Road\n                                    </p>\n                                 </td>\n                                 <td className=\"py-2 text-right\">\n                                    <span className=\"badge badge-secondary\">\n                                       On Hold\n                                       <span className=\"ml-1 fa fa-ban\" />\n                                    </span>\n                                 </td>\n                                 <td className=\"py-2 text-right\">$70</td>\n                                 <td className=\"py-2 text-right\">\n                                    <Dropdown className=\"dropdown text-sans-serif\">\n                                       <Dropdown.Toggle\n                                          variant=\"\"\n                                          className=\"btn btn-primary tp-btn-light sharp icon-false\"\n                                          type=\"button\"\n                                          id=\"order-dropdown-0\"\n                                          data-toggle=\"dropdown\"\n                                          data-boundary=\"viewport\"\n                                          aria-haspopup=\"true\"\n                                          aria-expanded=\"false\"\n                                       >\n                                          <span>\n                                             <svg\n                                                xmlns=\"http://www.w3.org/2000/svg\"\n                                                xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n                                                width=\"18px\"\n                                                height=\"18px\"\n                                                viewBox=\"0 0 24 24\"\n                                                version=\"1.1\"\n                                             >\n                                                <g\n                                                   stroke=\"none\"\n                                                   strokeWidth={1}\n                                                   fill=\"none\"\n                                                   fillRule=\"evenodd\"\n                                                >\n                                                   <rect\n                                                      x={0}\n                                                      y={0}\n                                                      width={24}\n                                                      height={24}\n                                                   />\n                                                   <circle\n                                                      fill=\"#000000\"\n                                                      cx={5}\n                                                      cy={12}\n                                                      r={2}\n                                                   />\n                                                   <circle\n                                                      fill=\"#000000\"\n                                                      cx={12}\n                                                      cy={12}\n                                                      r={2}\n                                                   />\n                                                   <circle\n                                                      fill=\"#000000\"\n                                                      cx={19}\n                                                      cy={12}\n                                                      r={2}\n                                                   />\n                                                </g>\n                                             </svg>\n                                          </span>\n                                       </Dropdown.Toggle>\n                                       <Dropdown.Menu\n                                          className=\"dropdown-menu dropdown-menu-right border py-0\"\n                                          aria-labelledby=\"order-dropdown-0\"\n                                       >\n                                          <div className=\"py-2\">\n                                             <a\n                                                className=\"dropdown-item\"\n                                                href=\"#!\"\n                                             >\n                                                Completed\n                                             </a>\n                                             <a\n                                                className=\"dropdown-item\"\n                                                href=\"#!\"\n                                             >\n                                                Processing\n                                             </a>\n                                             <a\n                                                className=\"dropdown-item\"\n                                                href=\"#!\"\n                                             >\n                                                On Hold\n                                             </a>\n                                             <a\n                                                className=\"dropdown-item\"\n                                                href=\"#!\"\n                                             >\n                                                Pending\n                                             </a>\n                                             <div className=\"dropdown-divider\" />\n                                             <a\n                                                className=\"dropdown-item text-danger\"\n                                                href=\"#!\"\n                                             >\n                                                Delete\n                                             </a>\n                                          </div>\n                                       </Dropdown.Menu>\n                                    </Dropdown>\n                                 </td>\n                              </tr>\n                              <tr className=\"btn-reveal-trigger\">\n                                 <td className=\"py-2\">\n                                    <div className=\"custom-control custom-checkbox  checkbox-warning\">\n                                       <input\n                                          type=\"checkbox\"\n                                          onClick={() => chackboxFun()}\n                                          className=\"custom-control-input product_order_single\"\n                                          id=\"checkbox3\"\n                                       />\n                                       <label\n                                          className=\"custom-control-label\"\n                                          htmlFor=\"checkbox3\"\n                                       />\n                                    </div>\n                                 </td>\n                                 <td className=\"py-2\">\n                                    <a href=\"#\">\n                                       <strong>#184</strong>\n                                    </a>{\" \"}\n                                    by <strong>Bucky Robert</strong>\n                                    <br />\n                                    <a href=\"mailto:bucky@example.com\">\n                                       bucky@example.com\n                                    </a>\n                                 </td>\n                                 <td className=\"py-2\">30/04/2020</td>\n                                 <td className=\"py-2\">\n                                    Bucky Robert, 1 Infinite Loop, Cupertino,\n                                    California 90210\n                                    <p className=\"mb-0 text-500\">\n                                       Via Free Shipping\n                                    </p>\n                                 </td>\n                                 <td className=\"py-2 text-right\">\n                                    <span className=\"badge badge-warning\">\n                                       Pending\n                                       <span className=\"ml-1 fas fa-stream\" />\n                                    </span>\n                                 </td>\n                                 <td className=\"py-2 text-right\">$92</td>\n                                 <td className=\"py-2 text-right\">\n                                    <Dropdown className=\"dropdown text-sans-serif\">\n                                       <Dropdown.Toggle\n                                          variant=\"\"\n                                          className=\"btn btn-primary tp-btn-light sharp icon-false\"\n                                          type=\"button\"\n                                          id=\"order-dropdown-0\"\n                                          data-toggle=\"dropdown\"\n                                          data-boundary=\"viewport\"\n                                          aria-haspopup=\"true\"\n                                          aria-expanded=\"false\"\n                                       >\n                                          <span>\n                                             <svg\n                                                xmlns=\"http://www.w3.org/2000/svg\"\n                                                xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n                                                width=\"18px\"\n                                                height=\"18px\"\n                                                viewBox=\"0 0 24 24\"\n                                                version=\"1.1\"\n                                             >\n                                                <g\n                                                   stroke=\"none\"\n                                                   strokeWidth={1}\n                                                   fill=\"none\"\n                                                   fillRule=\"evenodd\"\n                                                >\n                                                   <rect\n                                                      x={0}\n                                                      y={0}\n                                                      width={24}\n                                                      height={24}\n                                                   />\n                                                   <circle\n                                                      fill=\"#000000\"\n                                                      cx={5}\n                                                      cy={12}\n                                                      r={2}\n                                                   />\n                                                   <circle\n                                                      fill=\"#000000\"\n                                                      cx={12}\n                                                      cy={12}\n                                                      r={2}\n                                                   />\n                                                   <circle\n                                                      fill=\"#000000\"\n                                                      cx={19}\n                                                      cy={12}\n                                                      r={2}\n                                                   />\n                                                </g>\n                                             </svg>\n                                          </span>\n                                       </Dropdown.Toggle>\n                                       <Dropdown.Menu\n                                          className=\"dropdown-menu dropdown-menu-right border py-0\"\n                                          aria-labelledby=\"order-dropdown-0\"\n                                       >\n                                          <div className=\"py-2\">\n                                             <a\n                                                className=\"dropdown-item\"\n                                                href=\"#!\"\n                                             >\n                                                Completed\n                                             </a>\n                                             <a\n                                                className=\"dropdown-item\"\n                                                href=\"#!\"\n                                             >\n                                                Processing\n                                             </a>\n                                             <a\n                                                className=\"dropdown-item\"\n                                                href=\"#!\"\n                                             >\n                                                On Hold\n                                             </a>\n                                             <a\n                                                className=\"dropdown-item\"\n                                                href=\"#!\"\n                                             >\n                                                Pending\n                                             </a>\n                                             <div className=\"dropdown-divider\" />\n                                             <a\n                                                className=\"dropdown-item text-danger\"\n                                                href=\"#!\"\n                                             >\n                                                Delete\n                                             </a>\n                                          </div>\n                                       </Dropdown.Menu>\n                                    </Dropdown>\n                                 </td>\n                              </tr>\n                              <tr className=\"btn-reveal-trigger\">\n                                 <td className=\"py-2\">\n                                    <div className=\"custom-control custom-checkbox checkbox-secondary\">\n                                       <input\n                                          type=\"checkbox\"\n                                          onClick={() => chackboxFun()}\n                                          className=\"custom-control-input product_order_single\"\n                                          id=\"checkbox4\"\n                                       />\n                                       <label\n                                          className=\"custom-control-label\"\n                                          htmlFor=\"checkbox4\"\n                                       />\n                                    </div>\n                                 </td>\n                                 <td className=\"py-2\">\n                                    <a href=\"#\">\n                                       <strong>#185</strong>\n                                    </a>{\" \"}\n                                    by <strong>Rocky Zampa</strong>\n                                    <br />\n                                    <a href=\"mailto:rocky@example.com\">\n                                       rocky@example.com\n                                    </a>\n                                 </td>\n                                 <td className=\"py-2\">30/04/2020</td>\n                                 <td className=\"py-2\">\n                                    Rocky Zampa, 1 Infinite Loop, Cupertino,\n                                    California 90210\n                                    <p className=\"mb-0 text-500\">\n                                       Via Free Road\n                                    </p>\n                                 </td>\n                                 <td className=\"py-2 text-right\">\n                                    <span className=\"badge badge-secondary\">\n                                       On Hold\n                                       <span className=\"ml-1 fa fa-ban\" />\n                                    </span>\n                                 </td>\n                                 <td className=\"py-2 text-right\">$120</td>\n                                 <td className=\"py-2 text-right\">\n                                    <Dropdown className=\"dropdown text-sans-serif\">\n                                       <Dropdown.Toggle\n                                          variant=\"\"\n                                          className=\"btn btn-primary tp-btn-light sharp icon-false\"\n                                          type=\"button\"\n                                          id=\"order-dropdown-0\"\n                                          data-toggle=\"dropdown\"\n                                          data-boundary=\"viewport\"\n                                          aria-haspopup=\"true\"\n                                          aria-expanded=\"false\"\n                                       >\n                                          <span>\n                                             <svg\n                                                xmlns=\"http://www.w3.org/2000/svg\"\n                                                xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n                                                width=\"18px\"\n                                                height=\"18px\"\n                                                viewBox=\"0 0 24 24\"\n                                                version=\"1.1\"\n                                             >\n                                                <g\n                                                   stroke=\"none\"\n                                                   strokeWidth={1}\n                                                   fill=\"none\"\n                                                   fillRule=\"evenodd\"\n                                                >\n                                                   <rect\n                                                      x={0}\n                                                      y={0}\n                                                      width={24}\n                                                      height={24}\n                                                   />\n                                                   <circle\n                                                      fill=\"#000000\"\n                                                      cx={5}\n                                                      cy={12}\n                                                      r={2}\n                                                   />\n                                                   <circle\n                                                      fill=\"#000000\"\n                                                      cx={12}\n                                                      cy={12}\n                                                      r={2}\n                                                   />\n                                                   <circle\n                                                      fill=\"#000000\"\n                                                      cx={19}\n                                                      cy={12}\n                                                      r={2}\n                                                   />\n                                                </g>\n                                             </svg>\n                                          </span>\n                                       </Dropdown.Toggle>\n                                       <Dropdown.Menu\n                                          className=\"dropdown-menu dropdown-menu-right border py-0\"\n                                          aria-labelledby=\"order-dropdown-0\"\n                                       >\n                                          <div className=\"py-2\">\n                                             <a\n                                                className=\"dropdown-item\"\n                                                href=\"#!\"\n                                             >\n                                                Completed\n                                             </a>\n                                             <a\n                                                className=\"dropdown-item\"\n                                                href=\"#!\"\n                                             >\n                                                Processing\n                                             </a>\n                                             <a\n                                                className=\"dropdown-item\"\n                                                href=\"#!\"\n                                             >\n                                                On Hold\n                                             </a>\n                                             <a\n                                                className=\"dropdown-item\"\n                                                href=\"#!\"\n                                             >\n                                                Pending\n                                             </a>\n                                             <div className=\"dropdown-divider\" />\n                                             <a\n                                                className=\"dropdown-item text-danger\"\n                                                href=\"#!\"\n                                             >\n                                                Delete\n                                             </a>\n                                          </div>\n                                       </Dropdown.Menu>\n                                    </Dropdown>\n                                 </td>\n                              </tr>\n                              <tr className=\"btn-reveal-trigger\">\n                                 <td className=\"py-2\">\n                                    <div className=\"custom-control custom-checkbox \">\n                                       <input\n                                          type=\"checkbox\"\n                                          onClick={() => chackboxFun()}\n                                          className=\"custom-control-input product_order_single\"\n                                          id=\"checkbox5\"\n                                       />\n                                       <label\n                                          className=\"custom-control-label\"\n                                          htmlFor=\"checkbox5\"\n                                       />\n                                    </div>\n                                 </td>\n                                 <td className=\"py-2\">\n                                    <a href=\"#\">\n                                       <strong>#186</strong>\n                                    </a>{\" \"}\n                                    by <strong>Ricky John</strong>\n                                    <br />\n                                    <a href=\"mailto:ricky@example.com\">\n                                       ricky@example.com\n                                    </a>\n                                 </td>\n                                 <td className=\"py-2\">30/04/2020</td>\n                                 <td className=\"py-2\">\n                                    Ricky John, 1 Infinite Loop, Cupertino,\n                                    California 90210\n                                    <p className=\"mb-0 text-500\">\n                                       Via Free Shipping\n                                    </p>\n                                 </td>\n                                 <td className=\"py-2 text-right\">\n                                    <span className=\"badge badge-primary\">\n                                       Processing\n                                       <span className=\"ml-1 fa fa-redo\" />\n                                    </span>\n                                 </td>\n                                 <td className=\"py-2 text-right\">$145</td>\n                                 <td className=\"py-2 text-right\">\n                                    <Dropdown className=\"dropdown text-sans-serif\">\n                                       <Dropdown.Toggle\n                                          variant=\"\"\n                                          className=\"btn btn-primary tp-btn-light sharp icon-false\"\n                                          type=\"button\"\n                                          id=\"order-dropdown-0\"\n                                          data-toggle=\"dropdown\"\n                                          data-boundary=\"viewport\"\n                                          aria-haspopup=\"true\"\n                                          aria-expanded=\"false\"\n                                       >\n                                          <span>\n                                             <svg\n                                                xmlns=\"http://www.w3.org/2000/svg\"\n                                                xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n                                                width=\"18px\"\n                                                height=\"18px\"\n                                                viewBox=\"0 0 24 24\"\n                                                version=\"1.1\"\n                                             >\n                                                <g\n                                                   stroke=\"none\"\n                                                   strokeWidth={1}\n                                                   fill=\"none\"\n                                                   fillRule=\"evenodd\"\n                                                >\n                                                   <rect\n                                                      x={0}\n                                                      y={0}\n                                                      width={24}\n                                                      height={24}\n                                                   />\n                                                   <circle\n                                                      fill=\"#000000\"\n                                                      cx={5}\n                                                      cy={12}\n                                                      r={2}\n                                                   />\n                                                   <circle\n                                                      fill=\"#000000\"\n                                                      cx={12}\n                                                      cy={12}\n                                                      r={2}\n                                                   />\n                                                   <circle\n                                                      fill=\"#000000\"\n                                                      cx={19}\n                                                      cy={12}\n                                                      r={2}\n                                                   />\n                                                </g>\n                                             </svg>\n                                          </span>\n                                       </Dropdown.Toggle>\n                                       <Dropdown.Menu\n                                          className=\"dropdown-menu dropdown-menu-right border py-0\"\n                                          aria-labelledby=\"order-dropdown-0\"\n                                       >\n                                          <div className=\"py-2\">\n                                             <a\n                                                className=\"dropdown-item\"\n                                                href=\"#!\"\n                                             >\n                                                Completed\n                                             </a>\n                                             <a\n                                                className=\"dropdown-item\"\n                                                href=\"#!\"\n                                             >\n                                                Processing\n                                             </a>\n                                             <a\n                                                className=\"dropdown-item\"\n                                                href=\"#!\"\n                                             >\n                                                On Hold\n                                             </a>\n                                             <a\n                                                className=\"dropdown-item\"\n                                                href=\"#!\"\n                                             >\n                                                Pending\n                                             </a>\n                                             <div className=\"dropdown-divider\" />\n                                             <a\n                                                className=\"dropdown-item text-danger\"\n                                                href=\"#!\"\n                                             >\n                                                Delete\n                                             </a>\n                                          </div>\n                                       </Dropdown.Menu>\n                                    </Dropdown>\n                                 </td>\n                              </tr>\n                              <tr className=\"btn-reveal-trigger\">\n                                 <td className=\"py-2\">\n                                    <div className=\"custom-control custom-checkbox checkbox-success\">\n                                       <input\n                                          type=\"checkbox\"\n                                          onClick={() => chackboxFun()}\n                                          className=\"custom-control-input product_order_single\"\n                                          id=\"checkbox6\"\n                                       />\n                                       <label\n                                          className=\"custom-control-label\"\n                                          htmlFor=\"checkbox6\"\n                                       />\n                                    </div>\n                                 </td>\n                                 <td className=\"py-2\">\n                                    <a href=\"#\">\n                                       <strong>#187</strong>\n                                    </a>{\" \"}\n                                    by <strong>Cristofer Henric</strong>\n                                    <br />\n                                    <a href=\"mailto:cristofer@example.com\">\n                                       cristofer@example.com\n                                    </a>\n                                 </td>\n                                 <td className=\"py-2\">30/04/2020</td>\n                                 <td className=\"py-2\">\n                                    Cristofer Henric, 1 Infinite Loop,\n                                    Cupertino, California 90210\n                                    <p className=\"mb-0 text-500\">\n                                       Via Flat Rate\n                                    </p>\n                                 </td>\n                                 <td className=\"py-2 text-right\">\n                                    <span className=\"badge badge-success\">\n                                       Completed\n                                       <span className=\"ml-1 fa fa-check\" />\n                                    </span>\n                                 </td>\n                                 <td className=\"py-2 text-right\">$55</td>\n                                 <td className=\"py-2 text-right\">\n                                    <Dropdown className=\"dropdown text-sans-serif\">\n                                       <Dropdown.Toggle\n                                          variant=\"\"\n                                          className=\"btn btn-primary tp-btn-light sharp icon-false\"\n                                          type=\"button\"\n                                          id=\"order-dropdown-0\"\n                                          data-toggle=\"dropdown\"\n                                          data-boundary=\"viewport\"\n                                          aria-haspopup=\"true\"\n                                          aria-expanded=\"false\"\n                                       >\n                                          <span>\n                                             <svg\n                                                xmlns=\"http://www.w3.org/2000/svg\"\n                                                xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n                                                width=\"18px\"\n                                                height=\"18px\"\n                                                viewBox=\"0 0 24 24\"\n                                                version=\"1.1\"\n                                             >\n                                                <g\n                                                   stroke=\"none\"\n                                                   strokeWidth={1}\n                                                   fill=\"none\"\n                                                   fillRule=\"evenodd\"\n                                                >\n                                                   <rect\n                                                      x={0}\n                                                      y={0}\n                                                      width={24}\n                                                      height={24}\n                                                   />\n                                                   <circle\n                                                      fill=\"#000000\"\n                                                      cx={5}\n                                                      cy={12}\n                                                      r={2}\n                                                   />\n                                                   <circle\n                                                      fill=\"#000000\"\n                                                      cx={12}\n                                                      cy={12}\n                                                      r={2}\n                                                   />\n                                                   <circle\n                                                      fill=\"#000000\"\n                                                      cx={19}\n                                                      cy={12}\n                                                      r={2}\n                                                   />\n                                                </g>\n                                             </svg>\n                                          </span>\n                                       </Dropdown.Toggle>\n                                       <Dropdown.Menu\n                                          className=\"dropdown-menu dropdown-menu-right border py-0\"\n                                          aria-labelledby=\"order-dropdown-0\"\n                                       >\n                                          <div className=\"py-2\">\n                                             <a\n                                                className=\"dropdown-item\"\n                                                href=\"#!\"\n                                             >\n                                                Completed\n                                             </a>\n                                             <a\n                                                className=\"dropdown-item\"\n                                                href=\"#!\"\n                                             >\n                                                Processing\n                                             </a>\n                                             <a\n                                                className=\"dropdown-item\"\n                                                href=\"#!\"\n                                             >\n                                                On Hold\n                                             </a>\n                                             <a\n                                                className=\"dropdown-item\"\n                                                href=\"#!\"\n                                             >\n                                                Pending\n                                             </a>\n                                             <div className=\"dropdown-divider\" />\n                                             <a\n                                                className=\"dropdown-item text-danger\"\n                                                href=\"#!\"\n                                             >\n                                                Delete\n                                             </a>\n                                          </div>\n                                       </Dropdown.Menu>\n                                    </Dropdown>\n                                 </td>\n                              </tr>\n                              <tr className=\"btn-reveal-trigger\">\n                                 <td className=\"py-2\">\n                                    <div className=\"custom-control custom-checkbox checkbox-secondary\">\n                                       <input\n                                          type=\"checkbox\"\n                                          onClick={() => chackboxFun()}\n                                          className=\"custom-control-input product_order_single\"\n                                          id=\"checkbox7\"\n                                       />\n                                       <label\n                                          className=\"custom-control-label\"\n                                          htmlFor=\"checkbox7\"\n                                       />\n                                    </div>\n                                 </td>\n                                 <td className=\"py-2\">\n                                    <a href=\"#\">\n                                       <strong>#188</strong>\n                                    </a>{\" \"}\n                                    by <strong>Brate Lee</strong>\n                                    <br />\n                                    <a href=\"mailto:lee@example.com\">\n                                       lee@example.com\n                                    </a>\n                                 </td>\n                                 <td className=\"py-2\">29/04/2020</td>\n                                 <td className=\"py-2\">\n                                    Brate Lee, 1 Infinite Loop, Cupertino,\n                                    California 90210\n                                    <p className=\"mb-0 text-500\">\n                                       Via Link Road\n                                    </p>\n                                 </td>\n                                 <td className=\"py-2 text-right\">\n                                    <span className=\"badge badge-secondary\">\n                                       On Hold\n                                       <span className=\"ml-1 fa fa-ban\" />\n                                    </span>\n                                 </td>\n                                 <td className=\"py-2 text-right\">$90</td>\n                                 <td className=\"py-2 text-right\">\n                                    <Dropdown className=\"dropdown text-sans-serif\">\n                                       <Dropdown.Toggle\n                                          variant=\"\"\n                                          className=\"btn btn-primary tp-btn-light sharp icon-false\"\n                                          type=\"button\"\n                                          id=\"order-dropdown-0\"\n                                          data-toggle=\"dropdown\"\n                                          data-boundary=\"viewport\"\n                                          aria-haspopup=\"true\"\n                                          aria-expanded=\"false\"\n                                       >\n                                          <span>\n                                             <svg\n                                                xmlns=\"http://www.w3.org/2000/svg\"\n                                                xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n                                                width=\"18px\"\n                                                height=\"18px\"\n                                                viewBox=\"0 0 24 24\"\n                                                version=\"1.1\"\n                                             >\n                                                <g\n                                                   stroke=\"none\"\n                                                   strokeWidth={1}\n                                                   fill=\"none\"\n                                                   fillRule=\"evenodd\"\n                                                >\n                                                   <rect\n                                                      x={0}\n                                                      y={0}\n                                                      width={24}\n                                                      height={24}\n                                                   />\n                                                   <circle\n                                                      fill=\"#000000\"\n                                                      cx={5}\n                                                      cy={12}\n                                                      r={2}\n                                                   />\n                                                   <circle\n                                                      fill=\"#000000\"\n                                                      cx={12}\n                                                      cy={12}\n                                                      r={2}\n                                                   />\n                                                   <circle\n                                                      fill=\"#000000\"\n                                                      cx={19}\n                                                      cy={12}\n                                                      r={2}\n                                                   />\n                                                </g>\n                                             </svg>\n                                          </span>\n                                       </Dropdown.Toggle>\n                                       <Dropdown.Menu\n                                          className=\"dropdown-menu dropdown-menu-right border py-0\"\n                                          aria-labelledby=\"order-dropdown-0\"\n                                       >\n                                          <div className=\"py-2\">\n                                             <a\n                                                className=\"dropdown-item\"\n                                                href=\"#!\"\n                                             >\n                                                Completed\n                                             </a>\n                                             <a\n                                                className=\"dropdown-item\"\n                                                href=\"#!\"\n                                             >\n                                                Processing\n                                             </a>\n                                             <a\n                                                className=\"dropdown-item\"\n                                                href=\"#!\"\n                                             >\n                                                On Hold\n                                             </a>\n                                             <a\n                                                className=\"dropdown-item\"\n                                                href=\"#!\"\n                                             >\n                                                Pending\n                                             </a>\n                                             <div className=\"dropdown-divider\" />\n                                             <a\n                                                className=\"dropdown-item text-danger\"\n                                                href=\"#!\"\n                                             >\n                                                Delete\n                                             </a>\n                                          </div>\n                                       </Dropdown.Menu>\n                                    </Dropdown>\n                                 </td>\n                              </tr>\n                              <tr className=\"btn-reveal-trigger\">\n                                 <td className=\"py-2\">\n                                    <div className=\"custom-control custom-checkbox \">\n                                       <input\n                                          type=\"checkbox\"\n                                          onClick={() => chackboxFun()}\n                                          className=\"custom-control-input product_order_single\"\n                                          id=\"checkbox8\"\n                                       />\n                                       <label\n                                          className=\"custom-control-label\"\n                                          htmlFor=\"checkbox8\"\n                                       />\n                                    </div>\n                                 </td>\n                                 <td className=\"py-2\">\n                                    <a href=\"#\">\n                                       <strong>#189</strong>\n                                    </a>{\" \"}\n                                    by <strong>Thomas Stephenson</strong>\n                                    <br />\n                                    <a href=\"mailto:Stephenson@example.com\">\n                                       Stephenson@example.com\n                                    </a>\n                                 </td>\n                                 <td className=\"py-2\">29/04/2020</td>\n                                 <td className=\"py-2\">\n                                    Thomas Stephenson, 116 Ballifeary Road,\n                                    Bamff\n                                    <p className=\"mb-0 text-500\">\n                                       Via Flat Rate\n                                    </p>\n                                 </td>\n                                 <td className=\"py-2 text-right\">\n                                    <span className=\"badge badge-primary\">\n                                       Processing\n                                       <span className=\"ml-1 fa fa-redo\" />\n                                    </span>\n                                 </td>\n                                 <td className=\"py-2 text-right\">$52</td>\n                                 <td className=\"py-2 text-right\">\n                                    <Dropdown className=\"dropdown text-sans-serif\">\n                                       <Dropdown.Toggle\n                                          variant=\"\"\n                                          className=\"btn btn-primary tp-btn-light sharp icon-false\"\n                                          type=\"button\"\n                                          id=\"order-dropdown-0\"\n                                          data-toggle=\"dropdown\"\n                                          data-boundary=\"viewport\"\n                                          aria-haspopup=\"true\"\n                                          aria-expanded=\"false\"\n                                       >\n                                          <span>\n                                             <svg\n                                                xmlns=\"http://www.w3.org/2000/svg\"\n                                                xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n                                                width=\"18px\"\n                                                height=\"18px\"\n                                                viewBox=\"0 0 24 24\"\n                                                version=\"1.1\"\n                                             >\n                                                <g\n                                                   stroke=\"none\"\n                                                   strokeWidth={1}\n                                                   fill=\"none\"\n                                                   fillRule=\"evenodd\"\n                                                >\n                                                   <rect\n                                                      x={0}\n                                                      y={0}\n                                                      width={24}\n                                                      height={24}\n                                                   />\n                                                   <circle\n                                                      fill=\"#000000\"\n                                                      cx={5}\n                                                      cy={12}\n                                                      r={2}\n                                                   />\n                                                   <circle\n                                                      fill=\"#000000\"\n                                                      cx={12}\n                                                      cy={12}\n                                                      r={2}\n                                                   />\n                                                   <circle\n                                                      fill=\"#000000\"\n                                                      cx={19}\n                                                      cy={12}\n                                                      r={2}\n                                                   />\n                                                </g>\n                                             </svg>\n                                          </span>\n                                       </Dropdown.Toggle>\n                                       <Dropdown.Menu\n                                          className=\"dropdown-menu dropdown-menu-right border py-0\"\n                                          aria-labelledby=\"order-dropdown-0\"\n                                       >\n                                          <div className=\"py-2\">\n                                             <a\n                                                className=\"dropdown-item\"\n                                                href=\"#!\"\n                                             >\n                                                Completed\n                                             </a>\n                                             <a\n                                                className=\"dropdown-item\"\n                                                href=\"#!\"\n                                             >\n                                                Processing\n                                             </a>\n                                             <a\n                                                className=\"dropdown-item\"\n                                                href=\"#!\"\n                                             >\n                                                On Hold\n                                             </a>\n                                             <a\n                                                className=\"dropdown-item\"\n                                                href=\"#!\"\n                                             >\n                                                Pending\n                                             </a>\n                                             <div className=\"dropdown-divider\" />\n                                             <a\n                                                className=\"dropdown-item text-danger\"\n                                                href=\"#!\"\n                                             >\n                                                Delete\n                                             </a>\n                                          </div>\n                                       </Dropdown.Menu>\n                                    </Dropdown>\n                                 </td>\n                              </tr>\n                              <tr className=\"btn-reveal-trigger\">\n                                 <td className=\"py-2\">\n                                    <div className=\"custom-control custom-checkbox checkbox-success\">\n                                       <input\n                                          type=\"checkbox\"\n                                          onClick={() => chackboxFun()}\n                                          className=\"custom-control-input product_order_single\"\n                                          id=\"checkbox9\"\n                                       />\n                                       <label\n                                          className=\"custom-control-label\"\n                                          htmlFor=\"checkbox9\"\n                                       />\n                                    </div>\n                                 </td>\n                                 <td className=\"py-2\">\n                                    <a href=\"#\">\n                                       <strong>#190</strong>\n                                    </a>{\" \"}\n                                    by <strong>Evie Singh</strong>\n                                    <br />\n                                    <a href=\"mailto:eviewsing@example.com\">\n                                       eviewsing@example.com\n                                    </a>\n                                 </td>\n                                 <td className=\"py-2\">29/04/2020</td>\n                                 <td className=\"py-2\">\n                                    Evie Singh, 54 Castledore Road, Tunstead\n                                    <p className=\"mb-0 text-500\">\n                                       Via Flat Rate\n                                    </p>\n                                 </td>\n                                 <td className=\"py-2 text-right\">\n                                    <span className=\"badge badge-success\">\n                                       Completed\n                                       <span className=\"ml-1 fa fa-check\" />\n                                    </span>\n                                 </td>\n                                 <td className=\"py-2 text-right\">$90</td>\n                                 <td className=\"py-2 text-right\">\n                                    <Dropdown className=\"dropdown text-sans-serif\">\n                                       <Dropdown.Toggle\n                                          variant=\"\"\n                                          className=\"btn btn-primary tp-btn-light sharp icon-false\"\n                                          type=\"button\"\n                                          id=\"order-dropdown-0\"\n                                          data-toggle=\"dropdown\"\n                                          data-boundary=\"viewport\"\n                                          aria-haspopup=\"true\"\n                                          aria-expanded=\"false\"\n                                       >\n                                          <span>\n                                             <svg\n                                                xmlns=\"http://www.w3.org/2000/svg\"\n                                                xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n                                                width=\"18px\"\n                                                height=\"18px\"\n                                                viewBox=\"0 0 24 24\"\n                                                version=\"1.1\"\n                                             >\n                                                <g\n                                                   stroke=\"none\"\n                                                   strokeWidth={1}\n                                                   fill=\"none\"\n                                                   fillRule=\"evenodd\"\n                                                >\n                                                   <rect\n                                                      x={0}\n                                                      y={0}\n                                                      width={24}\n                                                      height={24}\n                                                   />\n                                                   <circle\n                                                      fill=\"#000000\"\n                                                      cx={5}\n                                                      cy={12}\n                                                      r={2}\n                                                   />\n                                                   <circle\n                                                      fill=\"#000000\"\n                                                      cx={12}\n                                                      cy={12}\n                                                      r={2}\n                                                   />\n                                                   <circle\n                                                      fill=\"#000000\"\n                                                      cx={19}\n                                                      cy={12}\n                                                      r={2}\n                                                   />\n                                                </g>\n                                             </svg>\n                                          </span>\n                                       </Dropdown.Toggle>\n                                       <Dropdown.Menu\n                                          className=\"dropdown-menu dropdown-menu-right border py-0\"\n                                          aria-labelledby=\"order-dropdown-0\"\n                                       >\n                                          <div className=\"py-2\">\n                                             <a\n                                                className=\"dropdown-item\"\n                                                href=\"#!\"\n                                             >\n                                                Completed\n                                             </a>\n                                             <a\n                                                className=\"dropdown-item\"\n                                                href=\"#!\"\n                                             >\n                                                Processing\n                                             </a>\n                                             <a\n                                                className=\"dropdown-item\"\n                                                href=\"#!\"\n                                             >\n                                                On Hold\n                                             </a>\n                                             <a\n                                                className=\"dropdown-item\"\n                                                href=\"#!\"\n                                             >\n                                                Pending\n                                             </a>\n                                             <div className=\"dropdown-divider\" />\n                                             <a\n                                                className=\"dropdown-item text-danger\"\n                                                href=\"#!\"\n                                             >\n                                                Delete\n                                             </a>\n                                          </div>\n                                       </Dropdown.Menu>\n                                    </Dropdown>\n                                 </td>\n                              </tr>\n                              <tr className=\"btn-reveal-trigger\">\n                                 <td className=\"py-2\">\n                                    <div className=\"custom-control custom-checkbox checkbox-success\">\n                                       <input\n                                          type=\"checkbox\"\n                                          onClick={() => chackboxFun()}\n                                          className=\"custom-control-input product_order_single\"\n                                          id=\"checkbox10\"\n                                       />\n                                       <label\n                                          className=\"custom-control-label\"\n                                          htmlFor=\"checkbox10\"\n                                       />\n                                    </div>\n                                 </td>\n                                 <td className=\"py-2\">\n                                    <a href=\"#\">\n                                       <strong>#191</strong>\n                                    </a>{\" \"}\n                                    by <strong>David Peters</strong>\n                                    <br />\n                                    <a href=\"mailto:peter@example.com\">\n                                       peter@example.com\n                                    </a>\n                                 </td>\n                                 <td className=\"py-2\">29/04/2020</td>\n                                 <td className=\"py-2\">\n                                    David Peters, Rhyd Y Groes, Rhosgoch, LL66\n                                    0AT\n                                    <p className=\"mb-0 text-500\">\n                                       Via Link Road\n                                    </p>\n                                 </td>\n                                 <td className=\"py-2 text-right\">\n                                    <span className=\"badge badge-success\">\n                                       Completed\n                                       <span className=\"ml-1 fa fa-check\" />\n                                    </span>\n                                 </td>\n                                 <td className=\"py-2 text-right\">$69</td>\n                                 <td className=\"py-2 text-right\">\n                                    <Dropdown className=\"dropdown text-sans-serif\">\n                                       <Dropdown.Toggle\n                                          variant=\"\"\n                                          className=\"btn btn-primary tp-btn-light sharp icon-false\"\n                                          type=\"button\"\n                                          id=\"order-dropdown-0\"\n                                          data-toggle=\"dropdown\"\n                                          data-boundary=\"viewport\"\n                                          aria-haspopup=\"true\"\n                                          aria-expanded=\"false\"\n                                       >\n                                          <span>\n                                             <svg\n                                                xmlns=\"http://www.w3.org/2000/svg\"\n                                                xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n                                                width=\"18px\"\n                                                height=\"18px\"\n                                                viewBox=\"0 0 24 24\"\n                                                version=\"1.1\"\n                                             >\n                                                <g\n                                                   stroke=\"none\"\n                                                   strokeWidth={1}\n                                                   fill=\"none\"\n                                                   fillRule=\"evenodd\"\n                                                >\n                                                   <rect\n                                                      x={0}\n                                                      y={0}\n                                                      width={24}\n                                                      height={24}\n                                                   />\n                                                   <circle\n                                                      fill=\"#000000\"\n                                                      cx={5}\n                                                      cy={12}\n                                                      r={2}\n                                                   />\n                                                   <circle\n                                                      fill=\"#000000\"\n                                                      cx={12}\n                                                      cy={12}\n                                                      r={2}\n                                                   />\n                                                   <circle\n                                                      fill=\"#000000\"\n                                                      cx={19}\n                                                      cy={12}\n                                                      r={2}\n                                                   />\n                                                </g>\n                                             </svg>\n                                          </span>\n                                       </Dropdown.Toggle>\n                                       <Dropdown.Menu\n                                          className=\"dropdown-menu dropdown-menu-right border py-0\"\n                                          aria-labelledby=\"order-dropdown-0\"\n                                       >\n                                          <div className=\"py-2\">\n                                             <a\n                                                className=\"dropdown-item\"\n                                                href=\"#!\"\n                                             >\n                                                Completed\n                                             </a>\n                                             <a\n                                                className=\"dropdown-item\"\n                                                href=\"#!\"\n                                             >\n                                                Processing\n                                             </a>\n                                             <a\n                                                className=\"dropdown-item\"\n                                                href=\"#!\"\n                                             >\n                                                On Hold\n                                             </a>\n                                             <a\n                                                className=\"dropdown-item\"\n                                                href=\"#!\"\n                                             >\n                                                Pending\n                                             </a>\n                                             <div className=\"dropdown-divider\" />\n                                             <a\n                                                className=\"dropdown-item text-danger\"\n                                                href=\"#!\"\n                                             >\n                                                Delete\n                                             </a>\n                                          </div>\n                                       </Dropdown.Menu>\n                                    </Dropdown>\n                                 </td>\n                              </tr>\n                              <tr className=\"btn-reveal-trigger\">\n                                 <td className=\"py-2\">\n                                    <div className=\"custom-control custom-checkbox \">\n                                       <input\n                                          type=\"checkbox\"\n                                          onClick={() => chackboxFun()}\n                                          className=\"custom-control-input product_order_single\"\n                                          id=\"checkbox11\"\n                                       />\n                                       <label\n                                          className=\"custom-control-label\"\n                                          htmlFor=\"checkbox11\"\n                                       />\n                                    </div>\n                                 </td>\n                                 <td className=\"py-2\">\n                                    <a href=\"#\">\n                                       <strong>#192</strong>\n                                    </a>{\" \"}\n                                    by <strong>Jennifer Johnson</strong>\n                                    <br />\n                                    <a href=\"mailto:jennifer@example.com\">\n                                       jennifer@example.com\n                                    </a>\n                                 </td>\n                                 <td className=\"py-2\">28/04/2020</td>\n                                 <td className=\"py-2\">\n                                    Jennifer Johnson, Rhyd Y Groes, Rhosgoch,\n                                    LL66 0AT\n                                    <p className=\"mb-0 text-500\">\n                                       Via Flat Rate\n                                    </p>\n                                 </td>\n                                 <td className=\"py-2 text-right\">\n                                    <span className=\"badge badge-primary\">\n                                       Processing\n                                       <span className=\"ml-1 fa fa-redo\" />\n                                    </span>\n                                 </td>\n                                 <td className=\"py-2 text-right\">$112</td>\n                                 <td className=\"py-2 text-right\">\n                                    <Dropdown className=\"dropdown text-sans-serif\">\n                                       <Dropdown.Toggle\n                                          variant=\"\"\n                                          className=\"btn btn-primary tp-btn-light sharp icon-false\"\n                                          type=\"button\"\n                                          id=\"order-dropdown-0\"\n                                          data-toggle=\"dropdown\"\n                                          data-boundary=\"viewport\"\n                                          aria-haspopup=\"true\"\n                                          aria-expanded=\"false\"\n                                       >\n                                          <span>\n                                             <svg\n                                                xmlns=\"http://www.w3.org/2000/svg\"\n                                                xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n                                                width=\"18px\"\n                                                height=\"18px\"\n                                                viewBox=\"0 0 24 24\"\n                                                version=\"1.1\"\n                                             >\n                                                <g\n                                                   stroke=\"none\"\n                                                   strokeWidth={1}\n                                                   fill=\"none\"\n                                                   fillRule=\"evenodd\"\n                                                >\n                                                   <rect\n                                                      x={0}\n                                                      y={0}\n                                                      width={24}\n                                                      height={24}\n                                                   />\n                                                   <circle\n                                                      fill=\"#000000\"\n                                                      cx={5}\n                                                      cy={12}\n                                                      r={2}\n                                                   />\n                                                   <circle\n                                                      fill=\"#000000\"\n                                                      cx={12}\n                                                      cy={12}\n                                                      r={2}\n                                                   />\n                                                   <circle\n                                                      fill=\"#000000\"\n                                                      cx={19}\n                                                      cy={12}\n                                                      r={2}\n                                                   />\n                                                </g>\n                                             </svg>\n                                          </span>\n                                       </Dropdown.Toggle>\n                                       <Dropdown.Menu\n                                          className=\"dropdown-menu dropdown-menu-right border py-0\"\n                                          aria-labelledby=\"order-dropdown-0\"\n                                       >\n                                          <div className=\"py-2\">\n                                             <a\n                                                className=\"dropdown-item\"\n                                                href=\"#!\"\n                                             >\n                                                Completed\n                                             </a>\n                                             <a\n                                                className=\"dropdown-item\"\n                                                href=\"#!\"\n                                             >\n                                                Processing\n                                             </a>\n                                             <a\n                                                className=\"dropdown-item\"\n                                                href=\"#!\"\n                                             >\n                                                On Hold\n                                             </a>\n                                             <a\n                                                className=\"dropdown-item\"\n                                                href=\"#!\"\n                                             >\n                                                Pending\n                                             </a>\n                                             <div className=\"dropdown-divider\" />\n                                             <a\n                                                className=\"dropdown-item text-danger\"\n                                                href=\"#!\"\n                                             >\n                                                Delete\n                                             </a>\n                                          </div>\n                                       </Dropdown.Menu>\n                                    </Dropdown>\n                                 </td>\n                              </tr>\n                           </tbody>\n                        </table>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default ProductOrder;\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/AppsMenu/Email/Compose/Compose.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/AppsMenu/Shop/Checkout/Checkout.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/AppsMenu/Shop/Invoice/Invoice.js",["935"],"import React, { Fragment } from \"react\";\nimport PageTitle from \"../../../../layouts/PageTitle\";\nimport QrCode from \"../../../../../images/qr.png\";\nimport Logo1 from \"../../../../../images/logo.png\";\nimport LogoText from \"../../../../../images/logo-text.png\";\n\n\nconst Invoice = () => {\n   return (\n      <Fragment>\n         <PageTitle motherMenu=\"Layout\" activeMenu=\"Blank\" />\n\n         <div className=\"row\">\n            <div className=\"col-lg-12\">\n               <div className=\"card mt-3\">\n                  <div className=\"card-header\">\n                     {\" \"}\n                     Invoice <strong>01/01/01/2018</strong>{\" \"}\n                     <span className=\"float-right\">\n                        <strong>Status:</strong> Pending\n                     </span>{\" \"}\n                  </div>\n                  <div className='card-body'>\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<div className=\"col-xl-3 col-sm-6 mb-4\">\n\t\t\t\t\t\t\t<h6>From:</h6>\n\t\t\t\t\t\t\t<div> <strong>Webz Poland</strong> </div>\n\t\t\t\t\t\t\t<div>Madalinskiego 8</div>\n\t\t\t\t\t\t\t<div>71-101 Szczecin, Poland</div>\n\t\t\t\t\t\t\t<div>Email: info@example.com</div>\n\t\t\t\t\t\t\t<div>Phone: +91 987 654 3210</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"col-xl-3 col-sm-6 mb-4\">\n\t\t\t\t\t\t\t<h6>To:</h6>\n\t\t\t\t\t\t\t<div> <strong>Bob Mart</strong> </div>\n\t\t\t\t\t\t\t<div>Attn: Daniel Marek</div>\n\t\t\t\t\t\t\t<div>43-190 Mikolow, Poland</div>\n\t\t\t\t\t\t\t<div>Email: info@example.com</div>\n\t\t\t\t\t\t\t<div>Phone: +91 987 654 3210</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"col-xl-6 col-lg-9 col-md-12 col-sm-12 mb-4 d-flex justify-content-lg-end justify-content-md-center justify-content-xs-start\">\n\t\t\t\t\t\t\t<div className=\"row align-items-center\">\n\t\t\t\t\t\t\t\t<div className=\"col-sm-9\"> \n\t\t\t\t\t\t\t\t\t<div className=\"brand-logo mb-3\">\n\t\t\t\t\t\t\t\t\t\t<img className=\"logo-abbr mr-2\" width=\"50\" src={Logo1} alt=\"\"/>\n\t\t\t\t\t\t\t\t\t\t<img className=\"logo-compact\" width=\"110\" src={LogoText} alt=\"\"/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<span>Please send exact amount: <strong className=\"d-block\">0.15050000 BTC</strong>\n\t\t\t\t\t\t\t\t\t\t<strong>1DonateWffyhwAjskoEwXt83pHZxhLTr8H</strong></span><br/>\n\t\t\t\t\t\t\t\t\t<small className=\"text-muted\">Current exchange rate 1BTC = $6590 USD</small>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"col-sm-3 mt-3\"> <img src={QrCode} className=\"img-fluid width110\"/> </div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n                     <div className=\"table-responsive\">\n                        <table className=\"table table-striped\">\n                           <thead>\n                              <tr>\n                                 <th className=\"center\">#</th>\n                                 <th>Item</th>\n                                 <th>Description</th>\n                                 <th className=\"right\">Unit Cost</th>\n                                 <th className=\"center\">Qty</th>\n                                 <th className=\"right\">Total</th>\n                              </tr>\n                           </thead>\n                           <tbody>\n                              <tr>\n                                 <td className=\"center\">1</td>\n                                 <td className=\"left strong\">Origin License</td>\n                                 <td className=\"left\">Extended License</td>\n                                 <td className=\"right\">$999,00</td>\n                                 <td className=\"center\">1</td>\n                                 <td className=\"right\">$999,00</td>\n                              </tr>\n                              <tr>\n                                 <td className=\"center\">2</td>\n                                 <td className=\"left\">Custom Services</td>\n                                 <td className=\"left\">\n                                    Instalation and Customization (cost per\n                                    hour)\n                                 </td>\n                                 <td className=\"right\">$150,00</td>\n                                 <td className=\"center\">20</td>\n                                 <td className=\"right\">$3.000,00</td>\n                              </tr>\n                              <tr>\n                                 <td className=\"center\">3</td>\n                                 <td className=\"left\">Hosting</td>\n                                 <td className=\"left\">1 year subcription</td>\n                                 <td className=\"right\">$499,00</td>\n                                 <td className=\"center\">1</td>\n                                 <td className=\"right\">$499,00</td>\n                              </tr>\n                              <tr>\n                                 <td className=\"center\">4</td>\n                                 <td className=\"left\">Platinum Support</td>\n                                 <td className=\"left\">\n                                    1 year subcription 24/7\n                                 </td>\n                                 <td className=\"right\">$3.999,00</td>\n                                 <td className=\"center\">1</td>\n                                 <td className=\"right\">$3.999,00</td>\n                              </tr>\n                           </tbody>\n                        </table>\n                     </div>\n                     <div className=\"row\">\n                        <div className=\"col-lg-4 col-sm-5\"> </div>\n                        <div className=\"col-lg-4 col-sm-5 ml-auto\">\n                           <table className=\"table table-clear\">\n                              <tbody>\n                                 <tr>\n                                    <td className=\"left\">\n                                       <strong>Subtotal</strong>\n                                    </td>\n                                    <td className=\"right\">$8.497,00</td>\n                                 </tr>\n                                 <tr>\n                                    <td className=\"left\">\n                                       <strong>Discount (20%)</strong>\n                                    </td>\n                                    <td className=\"right\">$1,699,40</td>\n                                 </tr>\n                                 <tr>\n                                    <td className=\"left\">\n                                       <strong>VAT (10%)</strong>\n                                    </td>\n                                    <td className=\"right\">$679,76</td>\n                                 </tr>\n                                 <tr>\n                                    <td className=\"left\">\n                                       <strong>Total</strong>\n                                    </td>\n                                    <td className=\"right\">\n                                       <strong>$7.477,36</strong>\n                                       <br />\n                                       <strong>0.15050000 BTC</strong>\n                                    </td>\n                                 </tr>\n                              </tbody>\n                           </table>\n                        </div>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n      </Fragment>\n   );\n};\n\nexport default Invoice;\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Forms/Wizard/Wizard.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/AppsMenu/Shop/Customers/Customers.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/AppsMenu/Email/Inbox/Inbox.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/AppsMenu/Email/Read/Read.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Forms/Pickers/Pickers.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Forms/Summernote/SummerNote.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/PluginsMenu/Select2/Select2.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Forms/Element/Element.js",["936","937"],"import React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport PageTItle from \"../../../layouts/PageTitle\";\nimport { SplitButton, ButtonGroup, Dropdown } from \"react-bootstrap\";\nimport DropdownMultiselect from \"react-multiselect-dropdown-bootstrap\";\n\nconst Element = () => {\n   return (\n      <Fragment>\n         <PageTItle activeMenu=\"Element\" motherMenu=\"Form\" />\n\n         <div className=\"row\">\n            <div className=\"col-xl-6 col-lg-6\">\n               <div className=\"card\">\n                  <div className=\"card-header\">\n                     <h4 className=\"card-title\">Input Style</h4>\n                  </div>\n                  <div className=\"card-body\">\n                     <div className=\"basic-form\">\n                        <form onSubmit={(e) => e.preventDefault()}>\n                           <div className=\"form-group\">\n                              <input\n                                 type=\"text\"\n                                 className=\"form-control input-default \"\n                                 placeholder=\"input-default\"\n                              />\n                           </div>\n                           <div className=\"form-group\">\n                              <input\n                                 type=\"text\"\n                                 className=\"form-control input-rounded\"\n                                 placeholder=\"input-rounded\"\n                              />\n                           </div>\n                        </form>\n                     </div>\n                  </div>\n               </div>\n            </div>\n            <div className=\"col-xl-6 col-lg-6\">\n               <div className=\"card\">\n                  <div className=\"card-header\">\n                     <h4 className=\"card-title\">Checkbox</h4>\n                  </div>\n                  <div className=\"card-body\">\n                     <div className=\"row\">\n                        <div className=\" col-xl-4 col-lg-6 col-sm-4\">\n                           <div className=\"custom-control custom-checkbox mb-3\">\n                              <input\n                                 type=\"checkbox\"\n                                 defaultChecked\n                                 className=\"custom-control-input\"\n                                 id=\"customCheckBox1\"\n                                 required\n                              />\n                              <label\n                                 className=\"custom-control-label\"\n                                 htmlFor=\"customCheckBox1\"\n                              >\n                                 Checkbox 1\n                              </label>\n                           </div>\n                        </div>\n                        <div className=\"col-xl-4 col-lg-6 col-sm-4\">\n                           <div className=\"custom-control custom-checkbox mb-3 checkbox-info\">\n                              <input\n                                 type=\"checkbox\"\n                                 defaultChecked\n                                 className=\"custom-control-input\"\n                                 id=\"customCheckBox2\"\n                                 required\n                              />\n                              <label\n                                 className=\"custom-control-label\"\n                                 htmlFor=\"customCheckBox2\"\n                              >\n                                 Checkbox 2\n                              </label>\n                           </div>\n                        </div>\n\n                        <div className=\"col-xl-4 col-lg-6 col-sm-4\">\n                           <div className=\"custom-control custom-checkbox mb-3 checkbox-success\">\n                              <input\n                                 type=\"checkbox\"\n                                 defaultChecked\n                                 className=\"custom-control-input\"\n                                 id=\"customCheckBox3\"\n                                 required\n                              />\n                              <label\n                                 className=\"custom-control-label\"\n                                 htmlFor=\"customCheckBox3\"\n                              >\n                                 Checkbox 3\n                              </label>\n                           </div>\n                        </div>\n                        <div className=\"col-xl-4 col-lg-6 col-sm-4\">\n                           <div className=\"custom-control custom-checkbox mb-3 checkbox-warning\">\n                              <input\n                                 type=\"checkbox\"\n                                 defaultChecked\n                                 className=\"custom-control-input\"\n                                 id=\"customCheckBox4\"\n                                 required\n                              />\n                              <label\n                                 className=\"custom-control-label\"\n                                 htmlFor=\"customCheckBox4\"\n                              >\n                                 Checkbox 4\n                              </label>\n                           </div>\n                        </div>\n                        <div className=\"col-xl-4 col-lg-6 col-sm-4\">\n                           <div className=\"custom-control custom-checkbox mb-3 checkbox-danger\">\n                              <input\n                                 type=\"checkbox\"\n                                 defaultChecked\n                                 className=\"custom-control-input\"\n                                 id=\"customCheckBox5\"\n                                 required\n                              />\n                              <label\n                                 className=\"custom-control-label\"\n                                 htmlFor=\"customCheckBox5\"\n                              >\n                                 Checkbox 5\n                              </label>\n                           </div>\n                        </div>\n                     </div>\n                     <div className=\"row\">\n                        <div className=\"col\">\n                           <div className=\"custom-control custom-checkbox mb-3 check-xs\">\n                              <input\n                                 type=\"checkbox\"\n                                 defaultChecked\n                                 className=\"custom-control-input\"\n                                 id=\"customCheckBox6\"\n                                 required\n                              />\n                              <label\n                                 className=\"custom-control-label\"\n                                 htmlFor=\"customCheckBox6\"\n                              ></label>\n                           </div>\n                        </div>\n                        <div className=\"col\">\n                           <div className=\"custom-control custom-checkbox mb-3 checkbox-info\">\n                              <input\n                                 type=\"checkbox\"\n                                 defaultChecked\n                                 className=\"custom-control-input\"\n                                 id=\"customCheckBox7\"\n                                 required\n                              />\n                              <label\n                                 className=\"custom-control-label\"\n                                 htmlFor=\"customCheckBox7\"\n                              ></label>\n                           </div>\n                        </div>\n                        <div className=\"col\">\n                           <div className=\"custom-control custom-checkbox mb-3 checkbox-success check-lg\">\n                              <input\n                                 type=\"checkbox\"\n                                 defaultChecked\n                                 className=\"custom-control-input\"\n                                 id=\"customCheckBox8\"\n                                 required\n                              />\n                              <label\n                                 className=\"custom-control-label\"\n                                 htmlFor=\"customCheckBox8\"\n                              ></label>\n                           </div>\n                        </div>\n                        <div className=\"col\">\n                           <div className=\"custom-control custom-checkbox mb-3 checkbox-warning check-xl\">\n                              <input\n                                 type=\"checkbox\"\n                                 defaultChecked\n                                 className=\"custom-control-input\"\n                                 id=\"customCheckBox9\"\n                                 required\n                              />\n                              <label\n                                 className=\"custom-control-label\"\n                                 htmlFor=\"customCheckBox9\"\n                              ></label>\n                           </div>\n                        </div>\n                     </div>\n                  </div>\n               </div>\n            </div>\n            <div className=\"col-xl-6 col-lg-6\">\n               <div className=\"card\">\n                  <div className=\"card-header\">\n                     <h4 className=\"card-title\">Textarea</h4>\n                  </div>\n                  <div className=\"card-body\">\n                     <div className=\"basic-form\">\n                        <form onSubmit={(e) => e.preventDefault()}>\n                           <div className=\"form-group\">\n                              <textarea\n                                 className=\"form-control\"\n                                 rows=\"4\"\n                                 id=\"comment\"\n                              ></textarea>\n                           </div>\n                        </form>\n                     </div>\n                  </div>\n               </div>\n            </div>\n            <div className=\"col-xl-6 col-lg-6\">\n               <div className=\"card\">\n                  <div className=\"card-header\">\n                     <h4 className=\"card-title\">Input Size</h4>\n                  </div>\n                  <div className=\"card-body\">\n                     <div className=\"basic-form\">\n                        <form onSubmit={(e) => e.preventDefault()}>\n                           <div className=\"form-group\">\n                              <input\n                                 className=\"form-control form-control-lg\"\n                                 type=\"text\"\n                                 placeholder=\"form-control-lg\"\n                              />\n                           </div>\n                           <div className=\"form-group\">\n                              <input\n                                 className=\"form-control\"\n                                 type=\"text\"\n                                 placeholder=\"Default input\"\n                              />\n                           </div>\n                           <div className=\"form-group\">\n                              <input\n                                 className=\"form-control form-control-sm\"\n                                 type=\"text\"\n                                 placeholder=\"form-control-sm\"\n                              />\n                           </div>\n                        </form>\n                     </div>\n                  </div>\n               </div>\n            </div>\n            <div className=\"col-xl-6 col-lg-6\">\n               <div className=\"card\">\n                  <div className=\"card-header\">\n                     <h4 className=\"card-title\">Select Size</h4>\n                  </div>\n                  <div className=\"card-body\">\n                     <div className=\"basic-form\">\n                        <form onSubmit={(e) => e.preventDefault()}>\n                           <div className=\"form-group\">\n                              <select\n                                 defaultValue={\"option\"}\n                                 className=\"form-control form-control-lg\"\n                              >\n                                 <option>Option 1</option>\n                                 <option>Option 2</option>\n                                 <option>Option 3</option>\n                              </select>\n                           </div>\n                           <div className=\"form-group\">\n                              <select\n                                 defaultValue={\"option\"}\n                                 className=\"form-control\"\n                              >\n                                 <option>Option 1</option>\n                                 <option>Option 2</option>\n                                 <option>Option 3</option>\n                              </select>\n                           </div>\n                           <div className=\"form-group\">\n                              <select\n                                 defaultValue={\"option\"}\n                                 className=\"form-control form-control-sm\"\n                              >\n                                 <option>Option 1</option>\n                                 <option>Option 2</option>\n                                 <option>Option 3</option>\n                              </select>\n                           </div>\n                        </form>\n                     </div>\n                  </div>\n               </div>\n            </div>\n            <div className=\"col-xl-6 col-lg-6\">\n               <div className=\"card\">\n                  <div className=\"card-header\">\n                     <h4 className=\"card-title\">Select List</h4>\n                  </div>\n                  <div className=\"card-body\">\n                     <div className=\"basic-form\">\n                        <form onSubmit={(e) => e.preventDefault()}>\n                           <div className=\"form-group\">\n                              <label>Select list (select one):</label>\n                              <select\n                                 defaultValue={\"option\"}\n                                 className=\"form-control\"\n                                 id=\"sel1\"\n                              >\n                                 <option>1</option>\n                                 <option>2</option>\n                                 <option>3</option>\n                                 <option>4</option>\n                              </select>\n                           </div>\n                           <div className=\"form-group\">\n                              <label>\n                                 Mutiple select list (hold shift to select more\n                                 than one):\n                              </label>\n                              <div id=\"multiselect\">\n                                 <DropdownMultiselect\n                                    options={[\"1\", \"2\", \"3\", \"4\", \"5\", \"6\"]}\n                                 />\n                              </div>\n                           </div>\n                        </form>\n                     </div>\n                  </div>\n               </div>\n            </div>\n            <div className=\"col-xl-6 col-lg-12\">\n               <div className=\"card\">\n                  <div className=\"card-header\">\n                     <h4 className=\"card-title\">Horizontal Form</h4>\n                  </div>\n                  <div className=\"card-body\">\n                     <div className=\"basic-form\">\n                        <form onSubmit={(e) => e.preventDefault()}>\n                           <div className=\"form-row\">\n                              <div className=\"form-group col-md-6\">\n                                 <label>First Name</label>\n                                 <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"1234 Main St\"\n                                 />\n                              </div>\n                              <div className=\"form-group col-md-6\">\n                                 <label>Email</label>\n                                 <input\n                                    type=\"email\"\n                                    className=\"form-control\"\n                                    placeholder=\"Email\"\n                                 />\n                              </div>\n                              <div className=\"form-group col-md-6\">\n                                 <label>Password</label>\n                                 <input\n                                    type=\"password\"\n                                    className=\"form-control\"\n                                    placeholder=\"Password\"\n                                 />\n                              </div>\n                              <div className=\"form-group col-md-6\">\n                                 <label>City</label>\n                                 <input type=\"text\" className=\"form-control\" />\n                              </div>\n                           </div>\n                           <div className=\"form-row\">\n                              <div className=\"form-group col-md-4\">\n                                 <label>State</label>\n                                 <select\n                                    defaultValue={\"option\"}\n                                    id=\"inputState\"\n                                    className=\"form-control\"\n                                 >\n                                    <option value=\"option\" disabled>\n                                       Choose...\n                                    </option>\n                                    <option>Option 1</option>\n                                    <option>Option 2</option>\n                                    <option>Option 3</option>\n                                 </select>\n                              </div>\n                              <div className=\"form-group col-md-2\">\n                                 <label>Zip</label>\n                                 <input type=\"text\" className=\"form-control\" />\n                              </div>\n                           </div>\n                           <div className=\"form-group\">\n                              <div className=\"form-check\">\n                                 <input\n                                    className=\"form-check-input\"\n                                    type=\"checkbox\"\n                                 />\n                                 <label className=\"form-check-label\">\n                                    Check me out\n                                 </label>\n                              </div>\n                           </div>\n                           <button type=\"submit\" className=\"btn btn-primary\">\n                              Sign in\n                           </button>\n                        </form>\n                     </div>\n                  </div>\n               </div>\n            </div>\n            <div className=\"col-xl-6 col-lg-12\">\n               <div className=\"card\">\n                  <div className=\"card-header\">\n                     <h4 className=\"card-title\">Vertical Form</h4>\n                  </div>\n                  <div className=\"card-body\">\n                     <div className=\"basic-form\">\n                        <form onSubmit={(e) => e.preventDefault()}>\n                           <div className=\"form-group row\">\n                              <label className=\"col-sm-3 col-form-label\">\n                                 Email\n                              </label>\n                              <div className=\"col-sm-9\">\n                                 <input\n                                    type=\"email\"\n                                    className=\"form-control\"\n                                    placeholder=\"Email\"\n                                 />\n                              </div>\n                           </div>\n                           <div className=\"form-group row\">\n                              <label className=\"col-sm-3 col-form-label\">\n                                 Password\n                              </label>\n                              <div className=\"col-sm-9\">\n                                 <input\n                                    type=\"password\"\n                                    className=\"form-control\"\n                                    placeholder=\"Password\"\n                                 />\n                              </div>\n                           </div>\n                           <fieldset className=\"form-group\">\n                              <div className=\"row\">\n                                 <label className=\"col-form-label col-sm-3 pt-0\">\n                                    Radios\n                                 </label>\n                                 <div className=\"col-sm-9\">\n                                    <div className=\"form-check\">\n                                       <input\n                                          className=\"form-check-input\"\n                                          type=\"radio\"\n                                          name=\"gridRadios\"\n                                          value=\"option1\"\n                                          defaultChecked\n                                       />\n                                       <label className=\"form-check-label\">\n                                          First radio\n                                       </label>\n                                    </div>\n                                    <div className=\"form-check\">\n                                       <input\n                                          className=\"form-check-input\"\n                                          type=\"radio\"\n                                          name=\"gridRadios\"\n                                          value=\"option2\"\n                                       />\n                                       <label className=\"form-check-label\">\n                                          Second radio\n                                       </label>\n                                    </div>\n                                    <div className=\"form-check disabled\">\n                                       <input\n                                          className=\"form-check-input\"\n                                          type=\"radio\"\n                                          name=\"gridRadios\"\n                                          value=\"option3\"\n                                          disabled\n                                       />\n                                       <label className=\"form-check-label\">\n                                          Third disabled radio\n                                       </label>\n                                    </div>\n                                 </div>\n                              </div>\n                           </fieldset>\n                           <div className=\"form-group row\">\n                              <div className=\"col-sm-3\">Checkbox</div>\n                              <div className=\"col-sm-9\">\n                                 <div className=\"form-check\">\n                                    <input\n                                       className=\"form-check-input\"\n                                       type=\"checkbox\"\n                                    />\n                                    <label className=\"form-check-label\">\n                                       Example checkbox\n                                    </label>\n                                 </div>\n                              </div>\n                           </div>\n                           <div className=\"form-group row\">\n                              <div className=\"col-sm-10\">\n                                 <button\n                                    type=\"submit\"\n                                    className=\"btn btn-primary\"\n                                 >\n                                    Sign in\n                                 </button>\n                              </div>\n                           </div>\n                        </form>\n                     </div>\n                  </div>\n               </div>\n            </div>\n            <div className=\"col-xl-6 col-lg-6\">\n               <div className=\"card\">\n                  <div className=\"card-header\">\n                     <h4 className=\"card-title\">Checkboxes</h4>\n                  </div>\n                  <div className=\"card-body\">\n                     <div className=\"basic-form\">\n                        <form onSubmit={(e) => e.preventDefault()}>\n                           <div className=\"form-group\">\n                              <div className=\"form-check mb-2\">\n                                 <input\n                                    type=\"checkbox\"\n                                    className=\"form-check-input\"\n                                    id=\"check1\"\n                                    value=\"\"\n                                    defaultChecked\n                                 />\n                                 <label\n                                    className=\"form-check-label\"\n                                    htmlFor=\"check1\"\n                                 >\n                                    Option 1\n                                 </label>\n                              </div>\n                              <div className=\"form-check mb-2\">\n                                 <input\n                                    type=\"checkbox\"\n                                    className=\"form-check-input\"\n                                    id=\"check2\"\n                                    value=\"\"\n                                 />\n                                 <label\n                                    className=\"form-check-label\"\n                                    htmlFor=\"check2\"\n                                 >\n                                    Option 2\n                                 </label>\n                              </div>\n                              <div className=\"form-check disabled\">\n                                 <input\n                                    type=\"checkbox\"\n                                    className=\"form-check-input\"\n                                    id=\"check3\"\n                                    value=\"\"\n                                    disabled\n                                 />\n                                 <label\n                                    className=\"form-check-label\"\n                                    htmlFor=\"check3\"\n                                 >\n                                    Disabled\n                                 </label>\n                              </div>\n                           </div>\n                        </form>\n                     </div>\n                  </div>\n               </div>\n            </div>\n            <div className=\"col-xl-6 col-lg-6\">\n               <div className=\"card\">\n                  <div className=\"card-header\">\n                     <h4 className=\"card-title\">Inline Checkboxes</h4>\n                  </div>\n                  <div className=\"card-body\">\n                     <div className=\"basic-form\">\n                        <form onSubmit={(e) => e.preventDefault()}>\n                           <div className=\"form-group\">\n                              <div className=\"form-check form-check-inline\">\n                                 <label className=\"form-check-label\">\n                                    <input\n                                       type=\"checkbox\"\n                                       className=\"form-check-input\"\n                                       value=\"\"\n                                       defaultChecked\n                                    />\n                                    Option 1\n                                 </label>\n                              </div>\n                              <div className=\"form-check form-check-inline\">\n                                 <label className=\"form-check-label\">\n                                    <input\n                                       type=\"checkbox\"\n                                       className=\"form-check-input\"\n                                       value=\"\"\n                                    />\n                                    Option 2\n                                 </label>\n                              </div>\n                              <div className=\"form-check form-check-inline disabled\">\n                                 <label className=\"form-check-label\">\n                                    <input\n                                       type=\"checkbox\"\n                                       className=\"form-check-input\"\n                                       value=\"\"\n                                       disabled\n                                    />\n                                    Disabled\n                                 </label>\n                              </div>\n                           </div>\n                        </form>\n                     </div>\n                  </div>\n               </div>\n            </div>\n            <div className=\"col-xl-6 col-lg-6\">\n               <div className=\"card\">\n                  <div className=\"card-header\">\n                     <h4 className=\"card-title\">Radio Buttons</h4>\n                  </div>\n                  <div className=\"card-body\">\n                     <div className=\"basic-form\">\n                        <form onSubmit={(e) => e.preventDefault()}>\n                           <div className=\"form-group mb-0\">\n                              <div className=\"radio\">\n                                 <label>\n                                    <input type=\"radio\" name=\"optradio\" />{\" \"}\n                                    Option 1\n                                 </label>\n                              </div>\n                              <div className=\"radio\">\n                                 <label>\n                                    <input type=\"radio\" name=\"optradio\" />{\" \"}\n                                    Option 2\n                                 </label>\n                              </div>\n                              <div className=\"radio disabled\">\n                                 <label>\n                                    <input\n                                       type=\"radio\"\n                                       name=\"optradio\"\n                                       disabled\n                                    />{\" \"}\n                                    Option 3\n                                 </label>\n                              </div>\n                           </div>\n                        </form>\n                     </div>\n                  </div>\n               </div>\n            </div>\n            <div className=\"col-xl-6 col-lg-6\">\n               <div className=\"card\">\n                  <div className=\"card-header\">\n                     <h4 className=\"card-title\">Inline Radio </h4>\n                  </div>\n                  <div className=\"card-body\">\n                     <div className=\"basic-form\">\n                        <form onSubmit={(e) => e.preventDefault()}>\n                           <div className=\"form-group mb-0\">\n                              <label className=\"radio-inline mr-3\">\n                                 <input type=\"radio\" name=\"optradio\" /> Option 1\n                              </label>\n                              <label className=\"radio-inline mr-3\">\n                                 <input type=\"radio\" name=\"optradio\" /> Option 2\n                              </label>\n                              <label className=\"radio-inline mr-3\">\n                                 <input type=\"radio\" name=\"optradio\" /> Option 3\n                              </label>\n                           </div>\n                        </form>\n                     </div>\n                  </div>\n               </div>\n            </div>\n            <div className=\"col-xl-6 col-lg-12\">\n               <div className=\"card\">\n                  <div className=\"card-header\">\n                     <h4 className=\"card-title\">readOnly</h4>\n                  </div>\n                  <div className=\"card-body\">\n                     <div className=\"basic-form\">\n                        <form onSubmit={(e) => e.preventDefault()}>\n                           <div className=\"form-group\">\n                              <input\n                                 className=\"form-control\"\n                                 type=\"text\"\n                                 placeholder=\"readOnly input here…\"\n                                 readOnly\n                              />\n                           </div>\n                           <div className=\"form-group row\">\n                              <label className=\"col-sm-3 col-form-label\">\n                                 Email\n                              </label>\n                              <div className=\"col-sm-9\">\n                                 <input\n                                    type=\"text\"\n                                    readOnly\n                                    className=\"form-control-plaintext\"\n                                    value=\"email@example.com\"\n                                 />\n                              </div>\n                           </div>\n                           <div className=\"form-group row\">\n                              <label className=\"col-sm-3 col-form-label\">\n                                 Password\n                              </label>\n                              <div className=\"col-sm-9\">\n                                 <input\n                                    type=\"password\"\n                                    className=\"form-control\"\n                                    placeholder=\"Password\"\n                                 />\n                              </div>\n                           </div>\n                        </form>\n                     </div>\n                  </div>\n               </div>\n            </div>\n            <div className=\"col-xl-6 col-lg-12\">\n               <div className=\"card\">\n                  <div className=\"card-header\">\n                     <h4 className=\"card-title\">Inline Form</h4>\n                  </div>\n                  <div className=\"card-body\">\n                     <div className=\"basic-form\">\n                        <form\n                           className=\"form-inline\"\n                           onSubmit={(e) => e.preventDefault()}\n                        >\n                           <div className=\"form-group mb-2\">\n                              <label className=\"sr-only\">Email</label>\n                              <input\n                                 type=\"text\"\n                                 readOnly\n                                 className=\"form-control-plaintext\"\n                                 value=\"email@example.com\"\n                              />\n                           </div>\n                           <div className=\"form-group mx-sm-3 mb-2\">\n                              <label className=\"sr-only\">Password</label>\n                              <input\n                                 type=\"password\"\n                                 className=\"form-control\"\n                                 placeholder=\"Password\"\n                              />\n                           </div>\n                           <button\n                              type=\"submit\"\n                              className=\"btn btn-primary mb-2\"\n                           >\n                              Confirm identity\n                           </button>\n                        </form>\n                     </div>\n                  </div>\n               </div>\n            </div>\n            <div className=\"col-xl-6 col-lg-12\">\n               <div className=\"card\">\n                  <div className=\"card-header\">\n                     <h4 className=\"card-title\">Form grid</h4>\n                  </div>\n                  <div className=\"card-body\">\n                     <div className=\"basic-form\">\n                        <form onSubmit={(e) => e.preventDefault()}>\n                           <div className=\"row\">\n                              <div className=\"col-sm-6\">\n                                 <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"First name\"\n                                 />\n                              </div>\n                              <div className=\"col-sm-6 mt-2 mt-sm-0\">\n                                 <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"Last name\"\n                                 />\n                              </div>\n                           </div>\n                        </form>\n                     </div>\n                  </div>\n               </div>\n            </div>\n            <div className=\"col-xl-6 col-lg-12\">\n               <div className=\"card\">\n                  <div className=\"card-header\">\n                     <h4 className=\"card-title\">Form Row</h4>\n                  </div>\n                  <div className=\"card-body\">\n                     <div className=\"basic-form\">\n                        <form onSubmit={(e) => e.preventDefault()}>\n                           <div className=\"form-row\">\n                              <div className=\"col-sm-6\">\n                                 <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"First name\"\n                                 />\n                              </div>\n                              <div className=\"col-sm-6 mt-2 mt-sm-0\">\n                                 <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"Last name\"\n                                 />\n                              </div>\n                           </div>\n                        </form>\n                     </div>\n                  </div>\n               </div>\n            </div>\n            <div className=\"col-xl-6 col-lg-12\">\n               <div className=\"card\">\n                  <div className=\"card-header\">\n                     <h4 className=\"card-title\">Form Label Size</h4>\n                  </div>\n                  <div className=\"card-body\">\n                     <div className=\"basic-form\">\n                        <form onSubmit={(e) => e.preventDefault()}>\n                           <div className=\"form-group row\">\n                              <label className=\"col-sm-2 col-form-label col-form-label-sm\">\n                                 Email\n                              </label>\n                              <div className=\"col-sm-10\">\n                                 <input\n                                    type=\"email\"\n                                    className=\"form-control form-control-sm\"\n                                    placeholder=\"col-form-label-sm\"\n                                 />\n                              </div>\n                           </div>\n                           <div className=\"form-group row\">\n                              <label className=\"col-sm-2 col-form-label\">\n                                 Email\n                              </label>\n                              <div className=\"col-sm-10\">\n                                 <input\n                                    type=\"email\"\n                                    className=\"form-control\"\n                                    placeholder=\"col-form-label\"\n                                 />\n                              </div>\n                           </div>\n                           <div className=\"form-group row\">\n                              <label className=\"col-sm-2 col-form-label col-form-label-lg\">\n                                 Email\n                              </label>\n                              <div className=\"col-sm-10\">\n                                 <input\n                                    type=\"email\"\n                                    className=\"form-control form-control-lg\"\n                                    placeholder=\"col-form-label-lg\"\n                                 />\n                              </div>\n                           </div>\n                        </form>\n                     </div>\n                  </div>\n               </div>\n            </div>\n            <div className=\"col-xl-6 col-lg-12\">\n               <div className=\"card\">\n                  <div className=\"card-header\">\n                     <h4 className=\"card-title\">Column size</h4>\n                  </div>\n                  <div className=\"card-body\">\n                     <div className=\"basic-form\">\n                        <form onSubmit={(e) => e.preventDefault()}>\n                           <div className=\"form-row\">\n                              <div className=\"col-sm-7\">\n                                 <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"City\"\n                                 />\n                              </div>\n                              <div className=\"col mt-2 mt-sm-0\">\n                                 <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"State\"\n                                 />\n                              </div>\n                              <div className=\"col mt-2 mt-sm-0\">\n                                 <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"Zip\"\n                                 />\n                              </div>\n                           </div>\n                        </form>\n                     </div>\n                  </div>\n               </div>\n            </div>\n            <div className=\"col-xl-6 col-lg-12\">\n               <div className=\"card\">\n                  <div className=\"card-header\">\n                     <h4 className=\"card-title\">Auto-sizing</h4>\n                  </div>\n                  <div className=\"card-body\">\n                     <div className=\"basic-form\">\n                        <form onSubmit={(e) => e.preventDefault()}>\n                           <div className=\"form-row align-items-center\">\n                              <div className=\"col-auto\">\n                                 <label className=\"sr-only\">Name</label>\n                                 <input\n                                    type=\"text\"\n                                    className=\"form-control mb-2\"\n                                    placeholder=\"Jane Doe\"\n                                 />\n                              </div>\n                              <div className=\"col-auto\">\n                                 <label className=\"sr-only\">Username</label>\n                                 <div className=\"input-group mb-2\">\n                                    <div className=\"input-group-prepend\">\n                                       <div className=\"input-group-text\">@</div>\n                                    </div>\n                                    <input\n                                       type=\"text\"\n                                       className=\"form-control\"\n                                       placeholder=\"Username\"\n                                    />\n                                 </div>\n                              </div>\n                              <div className=\"col-auto\">\n                                 <div className=\"form-check mb-2\">\n                                    <input\n                                       className=\"form-check-input\"\n                                       type=\"checkbox\"\n                                    />\n                                    <label className=\"form-check-label\">\n                                       Remember me\n                                    </label>\n                                 </div>\n                              </div>\n                              <div className=\"col-12\">\n                                 <button\n                                    type=\"submit\"\n                                    className=\"btn btn-primary mb-2\"\n                                 >\n                                    Submit\n                                 </button>\n                              </div>\n                           </div>\n                        </form>\n                     </div>\n                  </div>\n               </div>\n            </div>\n            <div className=\"col-xl-6 col-lg-6\">\n               <div className=\"card\">\n                  <div className=\"card-header\">\n                     <h4 className=\"card-title\">Custom Select</h4>\n                  </div>\n                  <div className=\"card-body\">\n                     <div className=\"basic-form\">\n                        <form onSubmit={(e) => e.preventDefault()}>\n                           <div className=\"form-row align-items-center\">\n                              <div className=\"col-auto my-1\">\n                                 <div className=\"form-group d-flex align-items-center\">\n                                    <label className=\"mr-sm-2\">\n                                       Preference\n                                    </label>\n                                    <select\n                                       defaultValue={\"option\"}\n                                       className=\"form-control form-control-lg\"\n                                       id=\"inlineFormCustomSelect\"\n                                    >\n                                       <option value=\"option\" disabled>\n                                          Choose...\n                                       </option>\n                                       <option value=\"1\">One</option>\n                                       <option value=\"2\">Two</option>\n                                       <option value=\"3\">Three</option>\n                                    </select>\n                                 </div>\n                              </div>\n                           </div>\n                        </form>\n                     </div>\n                  </div>\n               </div>\n            </div>\n            <div className=\"col-xl-6 col-lg-6\">\n               <div className=\"card\">\n                  <div className=\"card-header\">\n                     <h4 className=\"card-title\">Disabled forms</h4>\n                  </div>\n                  <div className=\"card-body\">\n                     <div className=\"basic-form\">\n                        <form onSubmit={(e) => e.preventDefault()}>\n                           <fieldset disabled>\n                              <div className=\"form-group\">\n                                 <label>Disabled input</label>\n                                 <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"Disabled input\"\n                                 />\n                              </div>\n                              <div className=\"form-group\">\n                                 <label>Disabled select menu</label>\n                                 <select\n                                    defaultValue={\"option\"}\n                                    className=\"form-control\"\n                                 >\n                                    <option>Disabled select</option>\n                                 </select>\n                              </div>\n                              <div className=\"form-check\">\n                                 <input\n                                    className=\"form-check-input\"\n                                    type=\"checkbox\"\n                                    disabled\n                                 />\n                                 <label className=\"form-check-label\">\n                                    Can't check this\n                                 </label>\n                              </div>\n                              <button\n                                 type=\"submit\"\n                                 className=\"btn btn-primary mt-3\"\n                              >\n                                 Submit\n                              </button>\n                           </fieldset>\n                        </form>\n                     </div>\n                  </div>\n               </div>\n            </div>\n            <div className=\"col-xl-6 col-lg-6\">\n               <div className=\"card\">\n                  <div className=\"card-header\">\n                     <h4 className=\"card-title\">Input Group</h4>\n                  </div>\n                  <div className=\"card-body\">\n                     <div className=\"basic-form\">\n                        <form action=\"#\">\n                           <div className=\"input-group mb-3 input-warning-o\">\n                              <div className=\"input-group-prepend\">\n                                 <span className=\"input-group-text\">@</span>\n                              </div>\n                              <input\n                                 type=\"text\"\n                                 className=\"form-control\"\n                                 placeholder=\"Username\"\n                              />\n                           </div>\n                           <div className=\"input-group mb-3 input-success-o\">\n                              <div className=\"input-group-prepend\">\n                                 <span className=\"input-group-text\">@</span>\n                              </div>\n                              <input\n                                 type=\"text\"\n                                 className=\"form-control\"\n                                 placeholder=\"Username\"\n                              />\n                           </div>\n                           <div className=\"input-group mb-3 input-primary\">\n                              <input\n                                 type=\"text\"\n                                 className=\"form-control\"\n                                 placeholder=\"Recipient's username\"\n                              />\n                              <div className=\"input-group-append\">\n                                 <span className=\"input-group-text\">\n                                    @example.com\n                                 </span>\n                              </div>\n                           </div>\n\n                           <label>Your vanity URL</label>\n                           <div className=\"input-group mb-3  input-success\">\n                              <div className=\"input-group-prepend\">\n                                 <span className=\"input-group-text\">\n                                    https://example.com\n                                 </span>\n                              </div>\n                              <input type=\"text\" className=\"form-control\" />\n                           </div>\n\n                           <div className=\"input-group mb-3  input-info\">\n                              <div className=\"input-group-prepend\">\n                                 <span className=\"input-group-text\">$</span>\n                              </div>\n                              <input type=\"text\" className=\"form-control\" />\n                              <div className=\"input-group-append\">\n                                 <span className=\"input-group-text\">.00</span>\n                              </div>\n                           </div>\n\n                           <div className=\"input-group   input-danger\">\n                              <div className=\"input-group-prepend\">\n                                 <span className=\"input-group-text\">\n                                    With textarea\n                                 </span>\n                              </div>\n                              <textarea className=\"form-control\"></textarea>\n                           </div>\n                        </form>\n                     </div>\n                  </div>\n               </div>\n            </div>\n            <div className=\"col-xl-6 col-lg-6\">\n               <div className=\"card\">\n                  <div className=\"card-header\">\n                     <h4 className=\"card-title\">Input Group Size</h4>\n                  </div>\n                  <div className=\"card-body\">\n                     <div className=\"basic-form\">\n                        <form action=\"#\">\n                           <div className=\"input-group input-group-sm mb-3\">\n                              <div className=\"input-group-prepend\">\n                                 <span className=\"input-group-text\">Small</span>\n                              </div>\n                              <input type=\"text\" className=\"form-control\" />\n                           </div>\n\n                           <div className=\"input-group mb-3\">\n                              <div className=\"input-group-prepend\">\n                                 <span className=\"input-group-text\">\n                                    Default\n                                 </span>\n                              </div>\n                              <input type=\"text\" className=\"form-control\" />\n                           </div>\n\n                           <div className=\"input-group input-group-lg\">\n                              <div className=\"input-group-prepend\">\n                                 <span className=\"input-group-text\">Large</span>\n                              </div>\n                              <input type=\"text\" className=\"form-control\" />\n                           </div>\n                        </form>\n                     </div>\n                  </div>\n               </div>\n            </div>\n            <div className=\"col-xl-6 col-lg-6\">\n               <div className=\"card\">\n                  <div className=\"card-header\">\n                     <h4 className=\"card-title\">Checkboxes and radios</h4>\n                  </div>\n                  <div className=\"card-body\">\n                     <div className=\"basic-form\">\n                        <form action=\"#\">\n                           <div className=\"input-group mb-3\">\n                              <div className=\"input-group-prepend\">\n                                 <div className=\"input-group-text\">\n                                    <input type=\"checkbox\" />\n                                 </div>\n                              </div>\n                              <input type=\"text\" className=\"form-control\" />\n                           </div>\n\n                           <div className=\"input-group\">\n                              <div className=\"input-group-prepend\">\n                                 <div className=\"input-group-text\">\n                                    <input type=\"radio\" />\n                                 </div>\n                              </div>\n                              <input type=\"text\" className=\"form-control\" />\n                           </div>\n                        </form>\n                     </div>\n                  </div>\n               </div>\n            </div>\n            <div className=\"col-xl-6 col-lg-6\">\n               <div className=\"card\">\n                  <div className=\"card-header\">\n                     <h4 className=\"card-title\">Multiple inputs</h4>\n                  </div>\n                  <div className=\"card-body\">\n                     <div className=\"basic-form\">\n                        <form action=\"#\">\n                           <div className=\"input-group\">\n                              <div className=\"input-group-prepend\">\n                                 <span className=\"input-group-text\">\n                                    First and last name\n                                 </span>\n                              </div>\n                              <input type=\"text\" className=\"form-control\" />\n                              <input type=\"text\" className=\"form-control\" />\n                           </div>\n                        </form>\n                     </div>\n                  </div>\n               </div>\n            </div>\n            <div className=\"col-xl-6 col-lg-6\">\n               <div className=\"card\">\n                  <div className=\"card-header\">\n                     <h4 className=\"card-title\">Multiple addons</h4>\n                  </div>\n                  <div className=\"card-body\">\n                     <div className=\"basic-form\">\n                        <form action=\"#\">\n                           <div className=\"input-group mb-3\">\n                              <div className=\"input-group-prepend\">\n                                 <span className=\"input-group-text\">$</span>\n                                 <span className=\"input-group-text\">0.00</span>\n                              </div>\n                              <input type=\"text\" className=\"form-control\" />\n                           </div>\n\n                           <div className=\"input-group\">\n                              <input type=\"text\" className=\"form-control\" />\n                              <div className=\"input-group-append\">\n                                 <span className=\"input-group-text\">$</span>\n                                 <span className=\"input-group-text\">0.00</span>\n                              </div>\n                           </div>\n                        </form>\n                     </div>\n                  </div>\n               </div>\n            </div>\n            <div className=\"col-xl-6 col-lg-6\">\n               <div className=\"card\">\n                  <div className=\"card-header\">\n                     <h4 className=\"card-title\">Button addons</h4>\n                  </div>\n                  <div className=\"card-body\">\n                     <div className=\"basic-form\">\n                        <form action=\"#\">\n                           <div className=\"input-group mb-3\">\n                              <div className=\"input-group-prepend\">\n                                 <button\n                                    className=\"btn btn-primary\"\n                                    type=\"button\"\n                                 >\n                                    Button\n                                 </button>\n                              </div>\n                              <input type=\"text\" className=\"form-control\" />\n                           </div>\n\n                           <div className=\"input-group mb-3\">\n                              <input type=\"text\" className=\"form-control\" />\n                              <div className=\"input-group-append\">\n                                 <button\n                                    className=\"btn btn-primary\"\n                                    type=\"button\"\n                                 >\n                                    Button\n                                 </button>\n                              </div>\n                           </div>\n\n                           <div className=\"input-group mb-3\">\n                              <div className=\"input-group-prepend\">\n                                 <button\n                                    className=\"btn btn-primary\"\n                                    type=\"button\"\n                                 >\n                                    Button\n                                 </button>\n                                 <button\n                                    className=\"btn btn-primary\"\n                                    type=\"button\"\n                                 >\n                                    Button\n                                 </button>\n                              </div>\n                              <input type=\"text\" className=\"form-control\" />\n                           </div>\n\n                           <div className=\"input-group\">\n                              <input type=\"text\" className=\"form-control\" />\n                              <div className=\"input-group-append\">\n                                 <button\n                                    className=\"btn btn-primary\"\n                                    type=\"button\"\n                                 >\n                                    Button\n                                 </button>\n                                 <button\n                                    className=\"btn btn-primary\"\n                                    type=\"button\"\n                                 >\n                                    Button\n                                 </button>\n                              </div>\n                           </div>\n                        </form>\n                     </div>\n                  </div>\n               </div>\n            </div>\n            <div className=\"col-xl-6 col-lg-6\">\n               <div className=\"card\">\n                  <div className=\"card-header\">\n                     <h4 className=\"card-title\">Buttons with dropdowns</h4>\n                  </div>\n                  <div className=\"card-body\">\n                     <div className=\"basic-form\">\n                        <form action=\"#\">\n                           <div className=\"input-group mb-3\">\n                              <div className=\"input-group-prepend\">\n                                 <button\n                                    className=\"btn btn-primary dropdown-toggle\"\n                                    type=\"button\"\n                                    data-toggle=\"dropdown\"\n                                 >\n                                    Dropdown\n                                 </button>\n                                 <div className=\"dropdown-menu\">\n                                    <Link className=\"dropdown-item\" to=\"#\">\n                                       Action\n                                    </Link>\n                                    <Link className=\"dropdown-item\" to=\"#\">\n                                       Another action\n                                    </Link>\n                                    <Link className=\"dropdown-item\" to=\"#\">\n                                       Something else here\n                                    </Link>\n                                    <div\n                                       role=\"separator\"\n                                       className=\"dropdown-divider\"\n                                    ></div>\n                                    <Link className=\"dropdown-item\" to=\"#\">\n                                       Separated link\n                                    </Link>\n                                 </div>\n                              </div>\n                              <input type=\"text\" className=\"form-control\" />\n                           </div>\n\n                           <div className=\"input-group\">\n                              <input type=\"text\" className=\"form-control\" />\n                              <div className=\"input-group-append\">\n                                 <button\n                                    className=\"btn btn-primary dropdown-toggle\"\n                                    type=\"button\"\n                                    data-toggle=\"dropdown\"\n                                 >\n                                    Dropdown\n                                 </button>\n                                 <div className=\"dropdown-menu\">\n                                    <Link className=\"dropdown-item\" to=\"#\">\n                                       Action\n                                    </Link>\n                                    <Link className=\"dropdown-item\" to=\"#\">\n                                       Another action\n                                    </Link>\n                                    <Link className=\"dropdown-item\" to=\"#\">\n                                       Something else here\n                                    </Link>\n                                    <div\n                                       role=\"separator\"\n                                       className=\"dropdown-divider\"\n                                    ></div>\n                                    <Link className=\"dropdown-item\" to=\"#\">\n                                       Separated link\n                                    </Link>\n                                 </div>\n                              </div>\n                           </div>\n                        </form>\n                     </div>\n                  </div>\n               </div>\n            </div>\n            <div className=\"col-xl-6 col-lg-6\">\n               <div className=\"card\">\n                  <div className=\"card-header\">\n                     <h4 className=\"card-title\">Segmented buttons</h4>\n                  </div>\n                  <div className=\"card-body\">\n                     <div className=\"basic-form\">\n                        <form action=\"#\">\n                           <div className=\"input-group mb-3\">\n                              <SplitButton\n                                 className=\"input-group-prepend\"\n                                 as={ButtonGroup}\n                                 variant=\"primary\"\n                                 id=\"dropdown-button-drop-dwon\"\n                                 className=\"ml-1\"\n                                 drop=\"dwon\"\n                                 title=\"Action\"\n                              >\n                                 <Dropdown.Item\n                                    className=\"dropdown-item\"\n                                    to=\"#\"\n                                 >\n                                    Action\n                                 </Dropdown.Item>\n                                 <Dropdown.Item\n                                    className=\"dropdown-item\"\n                                    to=\"#\"\n                                 >\n                                    Another action\n                                 </Dropdown.Item>\n                                 <Dropdown.Item\n                                    className=\"dropdown-item\"\n                                    to=\"#\"\n                                 >\n                                    Something else here\n                                 </Dropdown.Item>\n                                 <div\n                                    role=\"separator\"\n                                    className=\"dropdown-divider\"\n                                 ></div>\n                                 <Dropdown.Item\n                                    className=\"dropdown-item\"\n                                    to=\"#\"\n                                 >\n                                    Separated link\n                                 </Dropdown.Item>\n                              </SplitButton>\n                              <input type=\"text\" className=\"form-control\" />\n                           </div>\n\n                           <div className=\"input-group\">\n                              <input type=\"text\" className=\"form-control\" />\n                              <SplitButton\n                                 className=\"input-group-prepend\"\n                                 as={ButtonGroup}\n                                 variant=\"primary\"\n                                 id=\"dropdown-button-drop-dwon\"\n                                 className=\"ml-1\"\n                                 drop=\"dwon\"\n                                 title=\"Action\"\n                              >\n                                 <Dropdown.Item\n                                    className=\"dropdown-item\"\n                                    to=\"#\"\n                                 >\n                                    Action\n                                 </Dropdown.Item>\n                                 <Dropdown.Item\n                                    className=\"dropdown-item\"\n                                    to=\"#\"\n                                 >\n                                    Another action\n                                 </Dropdown.Item>\n                                 <Dropdown.Item\n                                    className=\"dropdown-item\"\n                                    to=\"#\"\n                                 >\n                                    Something else here\n                                 </Dropdown.Item>\n                                 <div\n                                    role=\"separator\"\n                                    className=\"dropdown-divider\"\n                                 ></div>\n                                 <Dropdown.Item\n                                    className=\"dropdown-item\"\n                                    to=\"#\"\n                                 >\n                                    Separated link\n                                 </Dropdown.Item>\n                              </SplitButton>{\" \"}\n                           </div>\n                        </form>\n                     </div>\n                  </div>\n               </div>\n            </div>\n            <div className=\"col-xl-6 col-lg-12\">\n               <div className=\"card\">\n                  <div className=\"card-header\">\n                     <h4 className=\"card-title\">Custom select</h4>\n                  </div>\n                  <div className=\"card-body\">\n                     <div className=\"basic-form\">\n                        <form action=\"#\">\n                           <div className=\"input-group mb-3\">\n                              <div className=\"input-group-prepend\">\n                                 <label className=\"input-group-text\">\n                                    Options\n                                 </label>\n                              </div>\n                              <select\n                                 defaultValue={\"option\"}\n                                 className=\"form-control form-control-lg\"\n                              >\n                                 <option value=\"option\" disabled>\n                                    Choose...\n                                 </option>\n                                 <option value=\"1\">One</option>\n                                 <option value=\"2\">Two</option>\n                                 <option value=\"3\">Three</option>\n                              </select>\n                           </div>\n\n                           <div className=\"input-group mb-3\">\n                              <select\n                                 defaultValue={\"option\"}\n                                 className=\"form-control form-control-lg\"\n                              >\n                                 <option value=\"option\" disabled>\n                                    Choose...\n                                 </option>\n                                 <option value=\"1\">One</option>\n                                 <option value=\"2\">Two</option>\n                                 <option value=\"3\">Three</option>\n                              </select>\n                              <div className=\"input-group-append\">\n                                 <label className=\"input-group-text\">\n                                    Options\n                                 </label>\n                              </div>\n                           </div>\n\n                           <div className=\"input-group mb-3\">\n                              <div className=\"input-group-prepend\">\n                                 <button\n                                    className=\"btn btn-primary\"\n                                    type=\"button\"\n                                 >\n                                    Button\n                                 </button>\n                              </div>\n                              <select\n                                 defaultValue={\"option\"}\n                                 className=\"form-control form-control-lg\"\n                              >\n                                 <option value=\"option\" disabled>\n                                    Choose...\n                                 </option>\n                                 <option value=\"1\">One</option>\n                                 <option value=\"2\">Two</option>\n                                 <option value=\"3\">Three</option>\n                              </select>\n                           </div>\n\n                           <div className=\"input-group\">\n                              <select\n                                 defaultValue={\"option\"}\n                                 className=\"form-control form-control-lg\"\n                              >\n                                 <option value=\"option\" disabled>\n                                    Choose...\n                                 </option>\n                                 <option value=\"1\">One</option>\n                                 <option value=\"2\">Two</option>\n                                 <option value=\"3\">Three</option>\n                              </select>\n                              <div className=\"input-group-append\">\n                                 <button\n                                    className=\"btn btn-primary\"\n                                    type=\"button\"\n                                 >\n                                    Button\n                                 </button>\n                              </div>\n                           </div>\n                        </form>\n                     </div>\n                  </div>\n               </div>\n            </div>\n            <div className=\"col-xl-6 col-lg-12\">\n               <div className=\"card\">\n                  <div className=\"card-header\">\n                     <h4 className=\"card-title\">Custom file input</h4>\n                  </div>\n                  <div className=\"card-body\">\n                     <div className=\"basic-form custom_file_input\">\n                        <form action=\"#\">\n                           <div className=\"input-group mb-3\">\n                              <div className=\"input-group-prepend\">\n                                 <span className=\"input-group-text\">\n                                    Upload\n                                 </span>\n                              </div>\n                              <div className=\"custom-file\">\n                                 <input\n                                    type=\"file\"\n                                    className=\"custom-file-input\"\n                                 />\n                                 <label className=\"custom-file-label\">\n                                    Choose file\n                                 </label>\n                              </div>\n                           </div>\n\n                           <div className=\"input-group mb-3\">\n                              <div className=\"custom-file\">\n                                 <input\n                                    type=\"file\"\n                                    className=\"custom-file-input\"\n                                 />\n                                 <label className=\"custom-file-label\">\n                                    Choose file\n                                 </label>\n                              </div>\n                              <div className=\"input-group-append\">\n                                 <span className=\"input-group-text\">\n                                    Upload\n                                 </span>\n                              </div>\n                           </div>\n\n                           <div className=\"input-group mb-3\">\n                              <div className=\"input-group-prepend\">\n                                 <button\n                                    className=\"btn btn-primary btn-sm\"\n                                    type=\"button\"\n                                 >\n                                    Button\n                                 </button>\n                              </div>\n                              <div className=\"custom-file\">\n                                 <input\n                                    type=\"file\"\n                                    className=\"custom-file-input\"\n                                 />\n                                 <label className=\"custom-file-label\">\n                                    Choose file\n                                 </label>\n                              </div>\n                           </div>\n\n                           <div className=\"input-group\">\n                              <div className=\"custom-file\">\n                                 <input\n                                    type=\"file\"\n                                    className=\"custom-file-input\"\n                                 />\n                                 <label className=\"custom-file-label\">\n                                    Choose file\n                                 </label>\n                              </div>\n                           </div>\n                        </form>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n      </Fragment>\n   );\n};\n\nexport default Element;\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/PluginsMenu/Noui Slider/MainNouiSlider.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/PluginsMenu/Nestable/Nestable.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Forms/jQueryValidation/jQueryValidation.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/PluginsMenu/Sweet Alert/SweetAlert.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/PluginsMenu/Toastr/Toastr.js",["938"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport PageTitle from \"../../../layouts/PageTitle\";\n\nconst Toastr = () => {\n   const notifyTopRight = () => {\n      toast.success(\"✅ Top Right !\", {\n         position: \"top-right\",\n         autoClose: 5000,\n         hideProgressBar: false,\n         closeOnClick: true,\n         pauseOnHover: true,\n         draggable: true,\n      });\n   };\n\n   const notifyBottomRight = () => {\n      toast.warn(\"✅ Bottom Right !\", {\n         position: \"bottom-right\",\n         autoClose: 5000,\n         hideProgressBar: false,\n         closeOnClick: true,\n         pauseOnHover: true,\n         draggable: true,\n      });\n   };\n\n   const notifyBottomLeft = () => {\n      toast.success(\"✅ Bottom Left !\", {\n         position: \"bottom-left\",\n         autoClose: 5000,\n         hideProgressBar: false,\n         closeOnClick: true,\n         pauseOnHover: true,\n         draggable: true,\n         progress: undefined,\n      });\n   };\n\n   const notifyTopLeft = () => {\n      toast.warn(\"✅ Top Left !\", {\n         position: \"bottom-left\",\n         autoClose: 5000,\n         hideProgressBar: false,\n         closeOnClick: true,\n         pauseOnHover: true,\n         draggable: true,\n         progress: undefined,\n      });\n   };\n\n   const notifyTopFullWidth = () => {\n      toast.warn(\"✅ Top Full Width !\", {\n         position: \"top-center\",\n         autoClose: 5000,\n         hideProgressBar: false,\n         closeOnClick: true,\n         pauseOnHover: true,\n         draggable: true,\n         progress: undefined,\n      });\n   };\n\n   const notifyBottomFullWidth = () => {\n      toast.warn(\"✅ Bottom Full Width !\", {\n         position: \"bottom-center\",\n         autoClose: 5000,\n         hideProgressBar: false,\n         closeOnClick: true,\n         pauseOnHover: true,\n         draggable: true,\n         progress: undefined,\n      });\n   };\n\n   const notifyTopCenter = () => {\n      toast.warn(\"✅ Top Center !\", {\n         position: \"top-center\",\n         autoClose: 5000,\n         hideProgressBar: false,\n         closeOnClick: true,\n         pauseOnHover: true,\n         draggable: true,\n         progress: undefined,\n      });\n   };\n\n   const notifyBottomCenter = () => {\n      toast.warn(\"✅ Bottom Center !\", {\n         position: \"bottom-center\",\n         autoClose: 5000,\n         hideProgressBar: false,\n         closeOnClick: true,\n         pauseOnHover: true,\n         draggable: true,\n         progress: undefined,\n      });\n   };\n   const notifyInfo = () => {\n      toast.info(\"❓ Info Notify !\", {\n         position: \"top-right\",\n         autoClose: 5000,\n         hideProgressBar: false,\n         closeOnClick: true,\n         pauseOnHover: true,\n         draggable: true,\n         progress: undefined,\n      });\n   };\n   const notifyWarning = () => {\n      toast.warn(\"❗ Warning Notify !\", {\n         position: \"top-right\",\n         autoClose: 5000,\n         hideProgressBar: false,\n         closeOnClick: true,\n         pauseOnHover: true,\n         draggable: true,\n         progress: undefined,\n      });\n   };\n\n   const notifyError = () => {\n      toast.error(\"❌ Error Notify !\", {\n         position: \"top-right\",\n         autoClose: 5000,\n         hideProgressBar: false,\n         closeOnClick: true,\n         pauseOnHover: true,\n         draggable: true,\n         progress: undefined,\n      });\n   };\n   return (\n      <div className=\"h-80\">\n         <PageTitle activeMenu=\"Toastr\" motherMenu=\"Advanced\" />\n\n         <div className=\"row\">\n            <div className=\"col-12\">\n               <div className=\"card\">\n                  <div className=\"card-header\">\n                     <h4 className=\"card-title\">Toastr</h4>\n                  </div>\n                  <div className=\"card-body\">\n                     <button\n                        onClick={notifyTopRight}\n                        type=\"button\"\n                        className=\"btn btn-dark mb-2 mr-2\"\n                        id=\"toastr-success-top-right\"\n                     >\n                        <ToastContainer\n                           position=\"top-right\"\n                           autoClose={5000}\n                           hideProgressBar={false}\n                           newestOnTop\n                           closeOnClick\n                           rtl={false}\n                           pauseOnFocusLoss\n                           draggable\n                           pauseOnHover\n                        />\n                        Top Right\n                     </button>\n                     <button\n                        onClick={notifyBottomRight}\n                        type=\"button\"\n                        className=\"btn btn-dark mb-2  mr-2\"\n                        id=\"toastr-success-bottom-right\"\n                     >\n                        <ToastContainer\n                           position=\"bottom-right\"\n                           autoClose={5000}\n                           hideProgressBar={false}\n                           newestOnTop\n                           closeOnClick\n                           rtl={false}\n                           pauseOnFocusLoss\n                           draggable\n                           pauseOnHover\n                        />\n                        Bottom Right\n                     </button>\n                     <button\n                        onClick={notifyBottomLeft}\n                        type=\"button\"\n                        className=\"btn btn-dark mb-2  mr-2\"\n                        id=\"toastr-success-bottom-left\"\n                     >\n                        <ToastContainer\n                           position=\"bottom-left\"\n                           autoClose={5000}\n                           hideProgressBar={false}\n                           newestOnTop\n                           closeOnClick\n                           rtl={false}\n                           pauseOnFocusLoss\n                           draggable\n                           pauseOnHover\n                        />\n                        Bottom Left\n                     </button>\n                     <button\n                        onClick={notifyTopLeft}\n                        type=\"button\"\n                        className=\"btn btn-dark mb-2  mr-2\"\n                        id=\"toastr-success-top-left\"\n                     >\n                        <ToastContainer\n                           position=\"top-left\"\n                           autoClose={5000}\n                           hideProgressBar={false}\n                           newestOnTop\n                           closeOnClick\n                           rtl={false}\n                           pauseOnFocusLoss\n                           draggable\n                           pauseOnHover\n                        />\n                        Top Left\n                     </button>\n                     <button\n                        onClick={notifyTopFullWidth}\n                        type=\"button\"\n                        className=\"btn btn-dark mb-2  mr-2\"\n                        id=\"toastr-success-top-full-width\"\n                     >\n                        <ToastContainer\n                           position=\"top-center\"\n                           autoClose={5000}\n                           hideProgressBar={false}\n                           newestOnTop\n                           closeOnClick\n                           rtl={false}\n                           pauseOnFocusLoss\n                           draggable\n                           pauseOnHover\n                        />\n                        Top Full Width\n                     </button>\n                     <button\n                        onClick={notifyBottomFullWidth}\n                        type=\"button\"\n                        className=\"btn btn-dark mb-2  mr-2\"\n                        id=\"toastr-success-bottom-full-width\"\n                     >\n                        <ToastContainer\n                           position=\"bottom-center\"\n                           autoClose={5000}\n                           hideProgressBar={false}\n                           newestOnTop\n                           closeOnClick\n                           rtl={false}\n                           pauseOnFocusLoss\n                           draggable\n                           pauseOnHover\n                        />\n                        Bottom Full Width\n                     </button>\n                     <button\n                        onClick={notifyTopCenter}\n                        type=\"button\"\n                        className=\"btn btn-dark mb-2  mr-2\"\n                        id=\"toastr-success-top-center\"\n                     >\n                        <ToastContainer\n                           position=\"top-center\"\n                           autoClose={5000}\n                           hideProgressBar={false}\n                           newestOnTop\n                           closeOnClick\n                           rtl={false}\n                           pauseOnFocusLoss\n                           draggable\n                           pauseOnHover\n                        />\n                        Top Center\n                     </button>\n                     <button\n                        onClick={notifyBottomCenter}\n                        type=\"button\"\n                        className=\"btn btn-dark mb-2  mr-2\"\n                        id=\"toastr-success-bottom-center\"\n                     >\n                        <ToastContainer\n                           position=\"bottom-center\"\n                           autoClose={5000}\n                           hideProgressBar={false}\n                           newestOnTop\n                           closeOnClick\n                           rtl={false}\n                           pauseOnFocusLoss\n                           draggable\n                           pauseOnHover\n                        />\n                        Bottom Center\n                     </button>\n                     <button\n                        onClick={notifyInfo}\n                        type=\"button\"\n                        className=\"btn btn-info mb-2  mr-2\"\n                        id=\"toastr-info-top-right\"\n                     >\n                        <ToastContainer\n                           position=\"top-right\"\n                           autoClose={5000}\n                           hideProgressBar={false}\n                           newestOnTop\n                           closeOnClick\n                           rtl={false}\n                           pauseOnFocusLoss\n                           draggable\n                           pauseOnHover\n                        />\n                        Info\n                     </button>\n                     <button\n                        onClick={notifyWarning}\n                        type=\"button\"\n                        className=\"btn btn-warning mb-2  mr-2\"\n                        id=\"toastr-warning-top-right\"\n                     >\n                        <ToastContainer\n                           position=\"top-right\"\n                           autoClose={5000}\n                           hideProgressBar={false}\n                           newestOnTop\n                           closeOnClick\n                           rtl={false}\n                           pauseOnFocusLoss\n                           draggable\n                           pauseOnHover\n                        />\n                        Warning\n                     </button>\n                     <button\n                        onClick={notifyError}\n                        type=\"button\"\n                        className=\"btn btn-danger mb-2  mr-2\"\n                        id=\"toastr-danger-top-right\"\n                     >\n                        <ToastContainer\n                           position=\"top-right\"\n                           autoClose={5000}\n                           hideProgressBar={false}\n                           newestOnTop\n                           closeOnClick\n                           rtl={false}\n                           pauseOnFocusLoss\n                           draggable\n                           pauseOnHover\n                        />\n                        Error\n                     </button>\n                  </div>\n               </div>\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default Toastr;\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/PluginsMenu/Jqv Map/JqvMap.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/layouts/nav/index.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/apexcharts/index.js",["939","940"],"import React, { Suspense } from \"react\";\nimport loadable from \"@loadable/component\";\n// import { Link } from 'react-router-dom';\nimport { Row, Col, Card } from \"react-bootstrap\";\n\nimport pMinDelay from \"p-min-delay\";\n\nimport PageTitle from \"../../../layouts/PageTitle\";\n\nconst ApexBar2 = loadable(() => pMinDelay(import(\"./Bar2\"), 500));\nconst ApexBar3 = loadable(() => pMinDelay(import(\"./Bar3\"), 500));\nconst ApexRedialBar = loadable(() => pMinDelay(import(\"./RadialBar\"), 500));\nconst ApexLine = loadable(() => pMinDelay(import(\"./Line5\"), 500));\nconst ApexLine3 = loadable(() => pMinDelay(import(\"./Line3\"), 500));\nconst ApexLine4 = loadable(() => pMinDelay(import(\"./Line4\"), 500));\nconst ApexPie = loadable(() => pMinDelay(import(\"./Pie\"), 500));\n\nfunction ApexChart() {\n   return (\n      <div className=\"h-80\">\n         <PageTitle motherMenu=\"Charts\" activeMenu=\"ApexChart\" />\n         <Row>\n            <Col xl={6}>\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Bar Chart</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <ApexBar2 />\n                  </Card.Body>\n               </Card>\n            </Col>\n            <Col xl={6}>\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Bar Chart</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <ApexBar3 />\n                  </Card.Body>\n               </Card>\n            </Col>\n\n            <Col xl={6}>\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Line</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <ApexLine />\n                  </Card.Body>\n               </Card>\n            </Col>\n            <Col xl={6}>\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Line</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <ApexLine3 />\n                  </Card.Body>\n               </Card>\n            </Col>\n            <Col xl={6}>\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Line</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <ApexLine4 />\n                  </Card.Body>\n               </Card>\n            </Col>\n            <Col xl={6}>\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Redial Bar</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <ApexRedialBar />\n                  </Card.Body>\n               </Card>\n            </Col>\n         </Row>\n      </div>\n   );\n}\n\nexport default ApexChart;\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/rechart/index.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/Chartjs/index.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/Sparkline/index.js",["941"],"import React from \"react\";\n\nimport { Row, Col, Card } from \"react-bootstrap\";\nimport {\n   Sparklines,\n   SparklinesLine,\n   SparklinesCurve,\n   SparklinesBars,\n   SparklinesSpots,\n   SparklinesReferenceLine,\n} from \"react-sparklines\";\n\nimport PageTitle from \"../../../layouts/PageTitle\";\n\nconst sampleData = [\n   64,\n   24,\n   40,\n   76,\n   19,\n   0,\n   2,\n   46,\n   65,\n   12,\n   10,\n   6,\n   15,\n   57,\n   35,\n   81,\n   86,\n   12,\n   12,\n   21,\n   53,\n   44,\n   2,\n   1,\n   58,\n   9,\n   61,\n   64,\n   42,\n   92,\n   58,\n   9,\n   34,\n   47,\n   89,\n   52,\n   3,\n   69,\n   33,\n   2,\n   60,\n   71,\n   71,\n   22,\n   65,\n   70,\n   31,\n   81,\n   36,\n   89,\n];\n\nfunction ChartSparkline() {\n   return (\n      <>\n         <PageTitle motherMenu=\"Charts\" activeMenu=\"Sparkline\" />\n         <Row>\n            <Col xl={6}>\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Simple</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <Sparklines data={sampleData}>\n                        <SparklinesLine />\n                     </Sparklines>\n                  </Card.Body>\n               </Card>\n            </Col>\n\n            <Col xl={6}>\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Simple Curve</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <Sparklines data={sampleData}>\n                        <SparklinesLine />\n                        <SparklinesReferenceLine type=\"mean\" />\n                     </Sparklines>\n                  </Card.Body>\n               </Card>\n            </Col>\n\n            <Col xl={6}>\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Spots</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <Sparklines data={sampleData}>\n                        <SparklinesLine style={{ fill: \"none\" }} />\n                        <SparklinesSpots />\n                     </Sparklines>\n                  </Card.Body>\n               </Card>\n            </Col>\n\n            <Col xl={6}>\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Spots</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <Sparklines data={sampleData}>\n                        <SparklinesLine color=\"#56b45d\" />\n                        <SparklinesSpots style={{ fill: \"#56b45d\" }} />\n                     </Sparklines>\n                  </Card.Body>\n               </Card>\n            </Col>\n\n            <Col xl={6}>\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Spots</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <Sparklines data={sampleData} margin={6}>\n                        <SparklinesLine\n                           style={{\n                              strokeWidth: 3,\n                              stroke: \"#52B141\",\n                              fill: \"none\",\n                           }}\n                        />\n                        <SparklinesSpots\n                           size={4}\n                           style={{\n                              stroke: \"#52B141\",\n                              strokeWidth: 3,\n                              fill: \"white\",\n                           }}\n                        />\n                     </Sparklines>\n                  </Card.Body>\n               </Card>\n            </Col>\n\n            <Col xl={6}>\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Bars</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <Sparklines\n                        data={[\n                           20,\n                           30,\n                           30,\n                           42,\n                           43,\n                           20,\n                           21,\n                           32,\n                           30,\n                           43,\n                           23,\n                           30,\n                           65,\n                           43,\n                           30,\n                           24,\n                           54,\n                        ]}\n                     >\n                        <SparklinesBars style={{ fill: \"#52B141\" }} />\n                     </Sparklines>\n                  </Card.Body>\n               </Card>\n            </Col>\n         </Row>\n      </>\n   );\n}\n\nexport default ChartSparkline;\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/firebase.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/layouts/PageTitle.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/PluginsMenu/Noui Slider/SlideDragable.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/PluginsMenu/Nestable/NTable.js",["942"],"import React, { Component } from \"react\";\nimport Nestable from \"react-nestable\";\n\nconst items = [\n   { id: 0, text: \"Item 1\" },\n   {\n      id: 1,\n      text: \"Item 2\",\n      children: [\n         { id: 2, text: \"Item 3\" },\n         { id: 3, text: \"Item 4\" },\n         {\n            id: 4,\n            text: \"Item 5\",\n            children: [\n               { id: 5, text: \"Item 6\" },\n               { id: 6, text: \"Item 7\" },\n               { id: 7, text: \"Item 8\" },\n            ],\n         },\n         { id: 8, text: \"Item 9\" },\n         { id: 9, text: \"Item 10\" },\n      ],\n   },\n];\n\nclass NTable extends Component {\n   state = {\n      example: 1,\n      defaultCollapsed: false,\n   };\n\n   collapse = (collapseCase) => {\n      if (this.refNestable) {\n         switch (collapseCase) {\n            case 0:\n               this.refNestable.collapse(\"NONE\");\n               break;\n            case 1:\n               this.refNestable.collapse(\"ALL\");\n               break;\n            case 2:\n               this.refNestable.collapse([1]);\n               break;\n         }\n      }\n   };\n\n   renderItem = ({ item, collapseIcon, handler }) => {\n      return (\n         <div>\n            {handler}\n            {collapseIcon}\n            {item.text}\n         </div>\n      );\n   };\n\n   render() {\n      const { defaultCollapsed } = this.state;\n\n      return (\n         <div>\n            <Nestable\n               items={items}\n               collapsed={defaultCollapsed}\n               renderItem={this.renderItem}\n               ref={(el) => (this.refNestable = el)}\n\t\t\t   maxDepth= {3}\n            />\n         </div>\n      );\n   }\n}\n\nexport default NTable;\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/PluginsMenu/Noui Slider/Disabling.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/PluginsMenu/Nestable/NTable2.js",["943"],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/PluginsMenu/Noui Slider/ClickablePips.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/PluginsMenu/Noui Slider/SnappingToValues.js",["944","945"],"import React from \"react\";\nimport Nouislider from \"nouislider-react\";\nimport \"nouislider/distribute/nouislider.css\";\n\nconst COLORS = [\"red\", \"green\", \"blue\"];\nconst colors = [0, 0, 0];\n\nclass SnappingTOValues extends React.Component {\n   state = {\n      color: \"rgb(127, 127, 127)\",\n      textValue: null,\n      percent: null,\n      value: 0,\n      disabled: false,\n      range: {\n         min: 0,\n         max: 100,\n      },\n      ref: null,\n   };\n   onSkipSlide = (render, handle, value, un, percent) => {\n      this.setState({\n         skippingValue: value[0],\n      });\n   };\n\n   render() {\n      return (\n         <div className=\"slider\" id=\"SnappingTOValues\">\n            <Nouislider\n               start={2000}\n               snap\n               range={{\n                  min: [2000],\n                  \"10%\": 3000,\n                  \"20%\": 4000,\n                  \"30%\": 5000,\n                  \"50%\": 6000,\n                  \"60%\": 7000,\n                  \"70%\": 8000,\n                  \"90%\": 9000,\n                  max: [10000],\n               }}\n               onSlide={this.onSkipSlide}\n            />\n            {this.state.skippingValue ? (\n               <div> {Math.floor(this.state.skippingValue)}.00</div>\n            ) : (\n               <div> 2000.00</div>\n            )}\n         </div>\n      );\n   }\n}\n\nexport default SnappingTOValues;\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/PluginsMenu/Noui Slider/NouiColor.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/PluginsMenu/Noui Slider/Toggle.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/PluginsMenu/Noui Slider/Nonlinearslider.js",["946","947"],"import React from \"react\";\nimport Nouislider from \"nouislider-react\";\nimport \"nouislider/distribute/nouislider.css\";\n\nconst COLORS = [\"red\", \"green\", \"blue\"];\nconst colors = [0, 0, 0];\n\nclass NonlinerSlider extends React.Component {\n   state = {\n      color: \"rgb(127, 127, 127)\",\n      textValue: null,\n      percent: null,\n      value: 0,\n      disabled: false,\n      range: {\n         min: 0,\n         max: 100,\n      },\n      ref: null,\n   };\n\n   onSlide = (render, handle, value, un, percent) => {\n      this.setState({\n         textValue: value[0].toFixed(2),\n         percent: percent[0].toFixed(2),\n      });\n   };\n   render() {\n      const { textValue, percent } = this.state;\n      return (\n         <div className=\"slider\" id=\"NonlinerSlider\">\n            <Nouislider\n               connect\n               start={[20, 80]}\n               behaviour=\"tap\"\n               range={{\n                  min: [0],\n                  max: [100],\n               }}\n               onSlide={this.onSlide}\n            />\n            {textValue && percent ? (\n               <div>\n                  {textValue} {percent}\n               </div>\n            ) : (\n               <div>\n                  {20.0} {80.0}\n               </div>\n            )}\n         </div>\n      );\n   }\n}\n\nexport default NonlinerSlider;\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/PluginsMenu/Select2/MultiSelect.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/PluginsMenu/Select2/CustomeSelete.js",["948","949","950"],"import React from \"react\";\n\nimport Select, { components } from \"react-select\";\nimport { colourOptions, groupedOptions } from \"./data\";\n\nconst groupStyles = {\n   border: `0px dotted ${colourOptions[2].color}`,\n   borderRadius: \"5px\",\n   background: \"white\",\n   height: \"200px\",\n};\n\nconst options = [\n   { value: \"chocolate\", label: \"Chocolate\" },\n   { value: \"strawberry\", label: \"Strawberry\" },\n   { value: \"vanilla\", label: \"Vanilla\" },\n];\n\nexport default function customGroup() {\n   return (\n      <div style={{ minHeight: \"100px\" }}>\n         <Select defaultValue={options[1]} options={options} />\n      </div>\n   );\n}\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/PluginsMenu/Select2/Disabling.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Forms/Summernote/Rte.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/PluginsMenu/Select2/CustomGroup.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Forms/Pickers/LinearGradientPicker.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Forms/Pickers/MetarialTime.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Forms/Pickers/MetarialDateAndTime.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Forms/Pickers/MetarialDate.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Forms/Pickers/Color.js",["951"],"import React, { useState } from \"react\";\n\nimport ColorPicker_ from \"material-ui-color-picker\";\n\nconst ColorPicker = () => {\n   const [color, setColor] = useState(\"\");\n\n   return (\n      <ColorPicker_\n         name=\"color\"\n         defaultValue=\"Color\"\n         value={color}\n         onChange={(color) => setColor(color)}\n      />\n   );\n};\n\nexport default ColorPicker;\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/AppsMenu/Email/Inbox/InboxMessage.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Forms/Wizard/StepFour.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Forms/Wizard/StepThree.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Forms/Wizard/StepOne.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Forms/Wizard/StepTwo.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/chartist/index.jsx",["952"],"import React from \"react\";\n// import { Link } from 'react-router-dom';\nimport { Row, Col, Card } from \"react-bootstrap\";\nimport BarChart from \"./bar\";\nimport LineChart from \"./line\";\nimport AreaChart from \"./area\";\nimport PolarChart from \"./polar\";\nimport DonutChart from \"./donut\";\n\nfunction ChartChartist() {\n   return (\n      <>\n         <Row>\n            <Col xl={6}>\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Line</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <LineChart />\n                  </Card.Body>\n               </Card>\n            </Col>\n\n            <Col xl={6}>\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Area</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <AreaChart />\n                  </Card.Body>\n               </Card>\n            </Col>\n\n            <Col xl={6}>\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Bi Polar</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <PolarChart />\n                  </Card.Body>\n               </Card>\n            </Col>\n\n            <Col xl={6}>\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Donut</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <DonutChart />\n                  </Card.Body>\n               </Card>\n            </Col>\n         </Row>\n      </>\n   );\n}\n\nexport default ChartChartist;\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/AppsMenu/Email/Compose/DropFile.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/apexcharts/Pie.js",["953"],"import React, { Component } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\n\nclass ApexPie extends React.Component {\n   constructor(props) {\n      super(props);\n\n      this.state = {\n         series: [44, 55, 40],\n         options: {\n            chart: {\n               // height: 350,\n               type: \"donut\",\n               offsetY: -10,\n               // toolbar: {\n               //    show: false,\n               // },\n            },\n            labels: [\"Blue Stat\", \"Green Stat\", \"Green Stat\"],\n            colors: [\n               \"rgba(30,167,197,1)\",\n               \"rgba(110,197,30,1)\",\n               \"rgba(235,235,235,1)\",\n            ],\n            stroke: {\n               width: [0],\n            },\n            legend: {\n               position: \"top\",\n               offsetX: -10,\n            },\n            dataLabels: {\n               enabled: false,\n            },\n            responsive: [\n               {\n                  breakpoint: 480,\n                  options: {\n                     chart: {\n                        // width: 100,\n                     },\n                  },\n               },\n            ],\n         },\n      };\n   }\n\n   render() {\n      return (\n         <div\n            id=\"chart\"\n            className=\"text-center m-auto\"\n            style={{ width: this.props.width ? `${this.props.width}%` : \"55%\" }}\n         >\n            <ReactApexChart\n               className=\"mt-3\"\n               options={this.state.options}\n               series={this.state.series}\n               type=\"donut\"\n               height={this.props.height ? this.props.height : 350}\n            />\n         </div>\n      );\n   }\n}\n\nexport default ApexPie;\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/apexcharts/Line4.js",["954"],"import React, { Component } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\n\nclass ApexLine4 extends React.Component {\n   constructor(props) {\n      super(props);\n\n      this.state = {\n         series: [\n            {\n               name: \"Yoga\",\n               data: [65, 65, 65, 120, 120, 80, 120, 100, 100, 120, 120, 120],\n            },\n            {\n               name: \"Cycling\",\n               data: [50, 100, 35, 35, 0, 0, 80, 20, 40, 40, 40, 40],\n            },\n            {\n               name: \"Running\",\n               data: [20, 40, 20, 80, 40, 40, 20, 60, 60, 20, 110, 60],\n            },\n         ],\n         options: {\n            chart: {\n               height: 350,\n               type: \"line\",\n               toolbar: {\n                  show: false,\n               },\n            },\n            dataLabels: {\n               enabled: false,\n            },\n\n            stroke: {\n               width: [4, 4, 4],\n               colors: [\"#C046D3\", \"#1EA7C5\", \"#FF9432\"],\n               curve: \"straight\",\n            },\n            legend: {\n               show: false,\n            },\n            xaxis: {\n               type: \"text\",\n               categories: [\n                  \"Jan\",\n                  \"Feb\",\n                  \"Mar\",\n                  \"Apr\",\n                  \"May\",\n                  \"Jun\",\n                  \"Jul\",\n                  \"Aug\",\n                  \"Sep\",\n                  \"Oct\",\n                  \"Nov\",\n                  \"Dec\",\n               ],\n            },\n            colors: [\"#C046D3\", \"#1EA7C5\", \"#FF9432\"],\n\n            markers: {\n               size: [8, 8, 6],\n               strokeWidth: [0, 0, 4],\n               strokeColors: [\"#C046D3\", \"#1EA7C5\", \"#FF9432\"],\n               border: 0,\n               colors: [\"#C046D3\", \"#1EA7C5\", \"#fff\"],\n               hover: {\n                  size: 10,\n               },\n            },\n            yaxis: {\n               title: {\n                  text: \"\",\n               },\n            },\n         },\n      };\n   }\n\n   render() {\n      return (\n         <div id=\"chart\">\n            <ReactApexChart\n               options={this.state.options}\n               series={this.state.series}\n               type=\"line\"\n               height={350}\n            />\n         </div>\n      );\n   }\n}\n\nexport default ApexLine4;\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/Chartjs/dualLine2.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/Chartjs/polar.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/PluginsMenu/Select2/data.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/Chartjs/radar.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/Chartjs/gradinetArea.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/Chartjs/basicArea.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/Chartjs/dualArea.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/Chartjs/dualLine.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/Chartjs/line1.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/Chartjs/bar6.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/Chartjs/bar5.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/Chartjs/bar1.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/Chartjs/pie.js",["955"],"import React, { Component } from \"react\";\nimport { Pie } from \"react-chartjs-2\";\n\nconst ChartPie = ({ color1, color2, color3, height, width }) => {\n   const data = {\n      datasets: [\n         {\n            data: [45, 25, 30],\n            borderWidth: 0,\n            backgroundColor: [\n               `${color1 ? color1 : \"rgba(89, 59, 219, 0.9)\"}`,\n               `${color2 ? color2 : \"rgba(89, 59, 219, 0.7)\"}`,\n               `${color3 ? color3 : \"rgba(89, 59, 219, 0.5)\"}`,\n            ],\n            hoverBackgroundColor: [\n               `${color1 ? color1 : \"rgba(89, 59, 219, 0.9)\"}`,\n               `${color2 ? color2 : \"rgba(89, 59, 219, 0.7)\"}`,\n               `${color3 ? color3 : \"rgba(89, 59, 219, 0.5)\"}`,\n            ],\n         },\n      ],\n      labels: [\"one\", \"two\", \"three\"],\n   };\n\n   const options = {\n      responsive: true,\n      legend: false,\n      maintainAspectRatio: false,\n   };\n\n   return (\n      <>\n         <Pie data={data} height={height ? height : 250} options={options} />\n      </>\n   );\n};\n\nexport default ChartPie;\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/rechart/TinyLineChart.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/rechart/PositiveNagative2.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/rechart/LegendEffectOpacity.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/apexcharts/Line3.js",["956"],"import React, { Component } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\n\nclass ApexLine3 extends React.Component {\n   constructor(props) {\n      super(props);\n\n      this.state = {\n         series: [\n            {\n               name: \"Running\",\n               data: [20, 40, 20, 80, 40, 40, 20, 60, 60, 20, 110, 60],\n            },\n         ],\n         options: {\n            chart: {\n               height: 350,\n               type: \"area\",\n               toolbar: {\n                  show: false,\n               },\n            },\n            dataLabels: {\n               enabled: false,\n            },\n\n            stroke: {\n               width: [4],\n               colors: [\"#FF9432\"],\n               curve: \"straight\",\n            },\n\n            xaxis: {\n               type: \"text\",\n               categories: [\n                  \"Jan\",\n                  \"Feb\",\n                  \"Mar\",\n                  \"Apr\",\n                  \"May\",\n                  \"Jun\",\n                  \"Jul\",\n                  \"Aug\",\n                  \"Sep\",\n                  \"Oct\",\n                  \"Nov\",\n                  \"Dec\",\n               ],\n            },\n            colors: [\"#FF9432\"],\n            markers: {\n               size: [6],\n               strokeWidth: [4],\n               strokeColors: [\"#FF9432\"],\n               border: 0,\n               colors: [\"#fff\"],\n               hover: {\n                  size: 10,\n               },\n            },\n            yaxis: {\n               title: {\n                  text: \"\",\n               },\n            },\n         },\n      };\n   }\n\n   render() {\n      return (\n         <div id=\"chart\">\n            <ReactApexChart\n               options={this.state.options}\n               series={this.state.series}\n               type=\"area\"\n               height={350}\n            />\n         </div>\n      );\n   }\n}\n\nexport default ApexLine3;\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/rechart/BarChartNoPadding.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/apexcharts/Line5.js",["957"],"import React, { Component } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\n\nclass ApexLine extends React.Component {\n   constructor(props) {\n      super(props);\n\n      this.state = {\n         series: [\n            {\n               name: \"Recovered Patient\",\n               data: [\n                  500,\n                  230,\n                  600,\n                  360,\n                  700,\n                  890,\n                  750,\n                  420,\n                  600,\n                  300,\n                  420,\n                  220,\n               ],\n            },\n            {\n               name: \"New Patient\",\n               data: [\n                  250,\n                  380,\n                  200,\n                  300,\n                  200,\n                  520,\n                  380,\n                  770,\n                  250,\n                  520,\n                  300,\n                  900,\n               ],\n            },\n         ],\n         options: {\n            chart: {\n               height: 350,\n               type: \"area\",\n               group: \"social\",\n               toolbar: {\n                  show: false,\n               },\n               zoom: {\n                  enabled: false,\n               },\n            },\n            dataLabels: {\n               enabled: false,\n            },\n            stroke: {\n               width: [2, 2],\n               colors: [\"#F46B68\", \"#2BC155\"],\n               curve: \"straight\",\n            },\n            legend: {\n               tooltipHoverFormatter: function (val, opts) {\n                  return (\n                     val +\n                     \" - \" +\n                     opts.w.globals.series[opts.seriesIndex][\n                        opts.dataPointIndex\n                     ] +\n                     \"\"\n                  );\n               },\n               markers: {\n                  fillColors: [\"#F46B68\", \"#2BC155\"],\n                  width: 19,\n                  height: 19,\n                  strokeWidth: 0,\n                  radius: 19,\n               },\n            },\n            markers: {\n               size: 6,\n               border: 0,\n               colors: [\"#F46B68\", \"#2BC155\"],\n               hover: {\n                  size: 6,\n               },\n            },\n            xaxis: {\n               categories: [\n                  \"January\",\n                  \"February\",\n                  \"March\",\n                  \"April\",\n                  \"May\",\n                  \"June\",\n                  \"July\",\n                  \"August\",\n                  \"September\",\n                  \"October\",\n                  \"November\",\n                  \"December\",\n                  \"10 Jan\",\n                  \"11 Jan\",\n                  \"12 Jan\",\n               ],\n            },\n            yaxis: {\n               labels: {\n                  style: {\n                     colors: \"#3e4954\",\n                     fontSize: \"14px\",\n                     fontFamily: \"Poppins\",\n                     fontWeight: 100,\n                  },\n               },\n            },\n            fill: {\n               colors: [\"#F46B68\", \"#2BC155\"],\n               type: \"solid\",\n               opacity: 0.07,\n            },\n            grid: {\n               borderColor: \"#f1f1f1\",\n            },\n         },\n      };\n   }\n\n   render() {\n      return (\n         <div id=\"chart\">\n            <ReactApexChart\n               options={this.state.options}\n               series={this.state.series}\n               type=\"area\"\n               height={350}\n            />\n         </div>\n      );\n   }\n}\n\nexport default ApexLine;\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/apexcharts/RadialBar.js",["958"],"import React, { Component } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\n\nclass ApexRedialBar extends React.Component {\n   constructor(props) {\n      super(props);\n\n      this.state = {\n         series: [81],\n         options: {\n            chart: {\n               height: 300,\n               type: \"radialBar\",\n               offsetY: -10,\n            },\n            plotOptions: {\n               radialBar: {\n                  startAngle: -135,\n                  endAngle: 135,\n                  dataLabels: {\n                     name: {\n                        fontSize: \"16px\",\n                        color: undefined,\n                        offsetY: 120,\n                     },\n                     value: {\n                        offsetY: 0,\n                        fontSize: \"34px\",\n                        color: \"black\",\n                        formatter: function (val) {\n                           return val + \"%\";\n                        },\n                     },\n                  },\n               },\n            },\n            fill: {\n               type: \"gradient\",\n               colors: \"#6EC51E\",\n               gradient: {\n                  shade: \"dark\",\n                  shadeIntensity: 0.15,\n                  inverseColors: false,\n                  opacityFrom: 1,\n                  opacityTo: 1,\n                  stops: [0, 50, 65, 91],\n               },\n            },\n            stroke: {\n               dashArray: 4,\n               colors: \"#6EC51E\",\n            },\n            labels: [\"\"],\n         },\n      };\n   }\n\n   render() {\n      return (\n         <div id=\"chart\">\n            <ReactApexChart\n               options={this.state.options}\n               series={this.state.series}\n               type=\"radialBar\"\n               height={350}\n            />\n         </div>\n      );\n   }\n}\nexport default ApexRedialBar;\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/apexcharts/Bar2.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/apexcharts/Bar3.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/layouts/nav/Header.js",["959"],"import React, { useEffect, useState } from \"react\";\n\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useAuth } from \"../../../contexts/AuthContext\";\n\n/// Image\nimport profile from \"../../../images/profile/kmb.jpeg\";\nimport { toast } from \"react-toastify\";\n\nconst Header = ({\n  onNote,\n  toggle,\n  onProfile,\n  onNotification,\n  onBox,\n  showProfileSideBar,\n  showProfile,\n}) => {\n  let pathName = window.location.pathname.split(\"/\");\n  pathName = pathName[pathName.length - 1];\n  let path = pathName === \"\";\n\n  const [dateState, setDateState] = useState(new Date());\n\n  useEffect(() => {\n    setInterval(() => setDateState(new Date()), 30000);\n  }, []);\n\n  const [error, setError] = useState(\"\");\n  const { logout } = useAuth();\n  const history = useHistory();\n\n  const handleLogout = async () => {\n    try {\n      toast.success(\"You will be logged out\", {\n        position: \"bottom-left\",\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      setTimeout(async () => {\n        await logout();\n        history.push(\"/login\");\n      }, 3000);\n    } catch {\n      setError(\"Failed to log out\");\n    }\n  };\n\n  return (\n    <div className=\"header\">\n      <div className=\"header-content\">\n        <nav className=\"navbar navbar-expand\">\n          <div className=\" navbar-collapse justify-content-between\">\n            <div className=\"navbar-nav header-left\">\n              <div className=\" d-lg-flex \">\n                <span>\n                  <div className=\"text-left\">\n                    <h2 className=\"fs-16 text-black mb-0\">\n                      {\" \"}\n                      {dateState.toLocaleString(\"en-US\", {\n                        hour: \"numeric\",\n                        minute: \"numeric\",\n                      })}\n                    </h2>\n                    <h1 className=\"fs-22 text-green\">\n                      {\" \"}\n                      {dateState.toLocaleDateString(\"en-GB\", {\n                        weekday: \"long\",\n                      })}\n                      ,{\" \"}\n                      {dateState.toLocaleDateString(\"en-GB\", {\n                        day: \"numeric\",\n                        month: \"long\",\n                        year: \"numeric\",\n                      })}\n                    </h1>\n                  </div>\n                </span>\n              </div>\n            </div>\n            <ul className=\"navbar-nav header-right\">\n              <li className=\"nav-item dropdown notification_dropdown\">\n                <Link\n                  className=\"nav-link  ai-icon\"\n                  to=\"#\"\n                  role=\"button\"\n                  data-toggle=\"dropdown\"\n                  onClick={() => onNotification()}\n                >\n                  <svg\n                    width={28}\n                    height={28}\n                    viewBox=\"0 0 28 28\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <path\n                      d=\"M22.75 15.8385V13.0463C22.7471 10.8855 21.9385 8.80353 20.4821 7.20735C19.0258 5.61116 17.0264 4.61555 14.875 4.41516V2.625C14.875 2.39294 14.7828 2.17038 14.6187 2.00628C14.4546 1.84219 14.2321 1.75 14 1.75C13.7679 1.75 13.5454 1.84219 13.3813 2.00628C13.2172 2.17038 13.125 2.39294 13.125 2.625V4.41534C10.9736 4.61572 8.97429 5.61131 7.51794 7.20746C6.06159 8.80361 5.25291 10.8855 5.25 13.0463V15.8383C4.26257 16.0412 3.37529 16.5784 2.73774 17.3593C2.10019 18.1401 1.75134 19.1169 1.75 20.125C1.75076 20.821 2.02757 21.4882 2.51969 21.9803C3.01181 22.4724 3.67904 22.7492 4.375 22.75H9.71346C9.91521 23.738 10.452 24.6259 11.2331 25.2636C12.0142 25.9013 12.9916 26.2497 14 26.2497C15.0084 26.2497 15.9858 25.9013 16.7669 25.2636C17.548 24.6259 18.0848 23.738 18.2865 22.75H23.625C24.321 22.7492 24.9882 22.4724 25.4803 21.9803C25.9724 21.4882 26.2492 20.821 26.25 20.125C26.2486 19.117 25.8998 18.1402 25.2622 17.3594C24.6247 16.5786 23.7374 16.0414 22.75 15.8385ZM7 13.0463C7.00232 11.2113 7.73226 9.45223 9.02974 8.15474C10.3272 6.85726 12.0863 6.12732 13.9212 6.125H14.0788C15.9137 6.12732 17.6728 6.85726 18.9703 8.15474C20.2677 9.45223 20.9977 11.2113 21 13.0463V15.75H7V13.0463ZM14 24.5C13.4589 24.4983 12.9316 24.3292 12.4905 24.0159C12.0493 23.7026 11.716 23.2604 11.5363 22.75H16.4637C16.284 23.2604 15.9507 23.7026 15.5095 24.0159C15.0684 24.3292 14.5411 24.4983 14 24.5ZM23.625 21H4.375C4.14298 20.9999 3.9205 20.9076 3.75644 20.7436C3.59237 20.5795 3.50014 20.357 3.5 20.125C3.50076 19.429 3.77757 18.7618 4.26969 18.2697C4.76181 17.7776 5.42904 17.5008 6.125 17.5H21.875C22.571 17.5008 23.2382 17.7776 23.7303 18.2697C24.2224 18.7618 24.4992 19.429 24.5 20.125C24.4999 20.357 24.4076 20.5795 24.2436 20.7436C24.0795 20.9076 23.857 20.9999 23.625 21Z\"\n                      fill=\"#555555\"\n                    />\n                  </svg>\n                  <span className=\"badge light text-white bg-primary\">1</span>\n                </Link>\n                <div\n                  className={`dropdown-menu dropdown-menu-right ${\n                    toggle === \"notification\" ? \"show\" : \"\"\n                  }`}\n                >\n                  {/* <PerfectScrollbar\n                              id=\"DZ_W_Notification1\"\n                              className={` widget-media dz-scroll p-3 height380 ${\n                                 toggle === \"notification\"\n                                    ? \"ps ps--active-y\"\n                                    : \"\"\n                              }`}\n                           >\n                              <ul className=\"timeline\">\n                                 <li>\n                                    <div className=\"timeline-panel\">\n                                       <div className=\"media mr-2\">\n                                          <img alt=\"\" width={50} src={avatar} />\n                                       </div>\n                                       <div className=\"media-body\">\n                                          <h6 className=\"mb-1\">\n                                             Dr sultads Send you Photo\n                                          </h6>\n                                          <small className=\"d-block\">\n                                             29 July 2020 - 02:26 PM\n                                          </small>\n                                       </div>\n                                    </div>\n                                 </li>\n                                 <li>\n                                    <div className=\"timeline-panel\">\n                                       <div className=\"media mr-2 media-info\">\n                                          KG\n                                       </div>\n                                       <div className=\"media-body\">\n                                          <h6 className=\"mb-1\">\n                                             Resport created successfully\n                                          </h6>\n                                          <small className=\"d-block\">\n                                             29 July 2020 - 02:26 PM\n                                          </small>\n                                       </div>\n                                    </div>\n                                 </li>\n                                 <li>\n                                    <div className=\"timeline-panel\">\n                                       <div className=\"media mr-2 media-success\">\n                                          <i className=\"fa fa-home\" />\n                                       </div>\n                                       <div className=\"media-body\">\n                                          <h6 className=\"mb-1\">\n                                             Reminder : Treatment Time!\n                                          </h6>\n                                          <small className=\"d-block\">\n                                             29 July 2020 - 02:26 PM\n                                          </small>\n                                       </div>\n                                    </div>\n                                 </li>\n                                 <li>\n                                    <div className=\"timeline-panel\">\n                                       <div className=\"media mr-2\">\n                                          <img alt=\"\" width={50} src={avatar} />\n                                       </div>\n                                       <div className=\"media-body\">\n                                          <h6 className=\"mb-1\">\n                                             Dr sultads Send you Photo\n                                          </h6>\n                                          <small className=\"d-block\">\n                                             29 July 2020 - 02:26 PM\n                                          </small>\n                                       </div>\n                                    </div>\n                                 </li>\n                                 <li>\n                                    <div className=\"timeline-panel\">\n                                       <div className=\"media mr-2 media-danger\">\n                                          KG\n                                       </div>\n                                       <div className=\"media-body\">\n                                          <h6 className=\"mb-1\">\n                                             Resport created successfully\n                                          </h6>\n                                          <small className=\"d-block\">\n                                             29 July 2020 - 02:26 PM\n                                          </small>\n                                       </div>\n                                    </div>\n                                 </li>\n                                 <li>\n                                    <div className=\"timeline-panel\">\n                                       <div className=\"media mr-2 media-primary\">\n                                          <i className=\"fa fa-home\" />\n                                       </div>\n                                       <div className=\"media-body\">\n                                          <h6 className=\"mb-1\">\n                                             Reminder : Treatment Time!\n                                          </h6>\n                                          <small className=\"d-block\">\n                                             29 July 2020 - 02:26 PM\n                                          </small>\n                                       </div>\n                                    </div>\n                                 </li>\n                              </ul>\n                           </PerfectScrollbar> */}\n                  {/* <Link className=\"all-notification\" to=\"#\">\n                              See all notifications{\" \"}\n                              <i className=\"ti-arrow-right\" />\n                           </Link> */}\n                </div>\n              </li>\n\n              <li className=\"nav-item dropdown header-profile\">\n                <Link\n                  className=\"nav-link\"\n                  to=\"#\"\n                  role=\"button\"\n                  onClick={() => onProfile()}\n                >\n                  <div className=\"header-info\">\n                    <span>Kent Michael Baguion</span>\n                  </div>\n                  <img src={profile} width={20} alt=\"\" />\n                </Link>\n                <div\n                  className={`dropdown-menu dropdown-menu-right ${\n                    toggle === \"profile\" ? \"show\" : \"\"\n                  }`}\n                >\n                  <Link to=\"/profile\" className=\"dropdown-item ai-icon\">\n                    <svg\n                      id=\"icon-user1\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      className=\"text-primary\"\n                      width={18}\n                      height={18}\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      strokeWidth={2}\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                    >\n                      <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\" />\n                      <circle cx={12} cy={7} r={4} />\n                    </svg>\n                    <span className=\"ml-2\">Profile </span>\n                  </Link>\n\n                  <Link to=\"/settings\" className=\"dropdown-item ai-icon\">\n                    <i className=\"las la-cog\" />\n                    <span className=\"ml-2\">Settings </span>\n                  </Link>\n\n                  <Link\n                    to=\"#\"\n                    onClick={handleLogout}\n                    className=\"dropdown-item ai-icon\"\n                  >\n                    <svg\n                      id=\"icon-logout\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      className=\"text-danger\"\n                      width={18}\n                      height={18}\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      strokeWidth={2}\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                    >\n                      <path d=\"M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4\" />\n                      <polyline points=\"16 17 21 12 16 7\" />\n                      <line x1={21} y1={12} x2={9} y2={12} />\n                    </svg>\n\n                    <span className=\"ml-2\">Logout </span>\n                  </Link>\n                </div>\n              </li>\n\n              {path && !showProfileSideBar && (\n                <li className=\"nav-item dropdown header-profile\">\n                  <Link\n                    className=\"nav-link\"\n                    to=\"#\"\n                    role=\"button\"\n                    onClick={() => showProfile()}\n                  >\n                    <div className=\"header-info\">\n                      <span>\n                        Hello, <strong>Kent</strong>\n                      </span>\n                    </div>\n\n                    <img src={profile} width={20} alt=\"\" />\n                  </Link>\n                </li>\n              )}\n            </ul>\n          </div>\n        </nav>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/layouts/nav/SideBar.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/layouts/nav/NavHeader.js",["960"],"import React, { useState } from \"react\";\n\n/// React router dom\nimport { Link } from \"react-router-dom\";\n\n/// images\nimport logo from \"../../../images/logo.png\";\nimport logoText from \"../../../images/logo-text.png\";\n\nconst NavHeader = () => {\n   const [toggle, setToggle] = useState(false);\n   return (\n      <div className=\"nav-header\">\n         <Link to=\"/dashboard\" className=\"brand-logo\">\n            <img className=\"logo-abbr\" src={logo} alt=\"\" />\n            <img className=\"logo-compact\" src={logoText} alt=\"\" />\n            <img className=\"brand-title\" src={logoText} alt=\"\" />\n            \n         </Link>\n\n         <div className=\"nav-control\">\n         <img className=\"logo-abbr\" src={logo} alt=\"\" />\n            <div className={`hamburger ${toggle ? \"is-active\" : \"\"}`}>\n               <span className=\"line\"></span>\n               <span className=\"line\"></span>\n               <span className=\"line\"></span>\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default NavHeader;\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/AppsMenu/Shop/ProductList/SingleProductList.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/chartist/donut.jsx",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/chartist/polar.jsx",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/chartist/area.jsx",["961"],"import React, { Component } from 'react';\nimport ChartistGraph from 'react-chartist';\n\n\n\nfunction AreaChart() {\n    var data = {\n        labels: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'],\n        series: [\n            [12, 9, 7, 8, 5],\n        ]\n    };\n\n    var options = {\n        fullWidth: true,\n        showArea: true,\n        chartPadding: {\n            right: 40\n        }\n    };\n\n    var type = 'Line'\n\n    return (\n        <>\n            <ChartistGraph data={data} options={options} type={type} />\n        </>\n    )\n}\n\nexport default AreaChart;","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/chartist/line.jsx",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/chartist/bar.jsx",["962","963"],"import React, { Component } from \"react\";\nimport ChartistGraph from \"react-chartist\";\n\nfunction BarChart() {\n   var data = {\n      labels: [\n         \"Jan\",\n         \"Feb\",\n         \"Mar\",\n         \"Apr\",\n         \"May\",\n         \"Jun\",\n         \"Jul\",\n         \"Aug\",\n         \"Sep\",\n         \"Oct\",\n         \"Nov\",\n         \"Dec\",\n      ],\n      series: [\n         [5, 4, 3, 7, 5, 10, 3, 4, 8, 10, 6, 8],\n         [3, 2, 9, 5, 4, 6, 4, 6, 7, 8, 7, 4],\n         [4, 6, 3, 9, 6, 5, 2, 8, 3, , 5, 4],\n      ],\n   };\n\n   var options = {\n      fullWidth: true,\n      seriesBarDistance: 10,\n      chartPadding: {\n         right: 40,\n      },\n   };\n\n   var type = \"Bar\";\n\n   return (\n      <>\n         <ChartistGraph data={data} options={options} type={type} id=\"abc\" />\n      </>\n   );\n}\n\nexport default BarChart;\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/AppsMenu/Calendar/EventCalendar.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/AppsMenu/Shop/ProductGrid/Products.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Riders/RidersForm.js",["964"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport { storage } from \"../../../firebase\";\nimport { v4 as uuid } from \"uuid\";\n\nimport { Button } from \"react-bootstrap\";\n\nconst RidersForm = (props) => {\n  const initialFieldValues = {\n    riderName: \"\",\n    vehicleType: \"\",\n    vehiclePlateNum: \"\",\n    riderImage: \"\",\n    riderContactNum: \"\",\n    riderAddress: \"\",\n    dateAdded: new Date().toLocaleString(),\n    isActive: \"true\",\n  };\n\n  var [values, setValues] = useState(initialFieldValues);\n\n  useEffect(() => {\n    if (props.currentId === \"\") {\n      setViewMode(false);\n      setValues({\n        ...initialFieldValues,\n      });\n    } else {\n      setViewMode(true);\n      setValues({\n        ...props.riderList[props.currentId],\n      });\n    }\n  }, [props.currentId, props.riderList]);\n\n  const handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const name = target.name;\n\n    setValues({\n      ...values,\n      [name]: value,\n    });\n  };\n\n  const [viewMode, setViewMode] = useState(false);\n\n  const [imageUrl, setImageUrl] = useState();\n  const readImages = async (e) => {\n    const file = e.target.files[0];\n    const id = uuid();\n    const imagesRef = storage.ref(\"rider/\").child(id);\n\n    await imagesRef.put(file);\n    imagesRef.getDownloadURL().then((url) => {\n      setImageUrl(url);\n    });\n  };\n\n  if (typeof imageUrl !== \"undefined\" && imageUrl != null) {\n    values.riderImage = imageUrl;\n  }\n\n  const handleFormSubmit = (event) => {\n    event.preventDefault();\n    props.addOrEdit(values);\n  };\n\n  return (\n    <Fragment>\n      <div className=\"row\">\n        <div className=\"col-xl-12 col-lg-12\">\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <h4 className=\"card-title\">\n                {props.currentId === \"\" ? \"Add \" : viewMode ? \"View \" : \"Edit \"}\n                Rider\n              </h4>\n              {props.currentId !== \"\" ? (\n                <Button\n                  className=\"btn-sm btn-warning light\"\n                  onClick={() => {\n                    setViewMode(!viewMode);\n                  }}\n                >\n                  {viewMode ? \"Edit Rider\" : \"View Rider\"}\n                </Button>\n              ) : null}\n            </div>\n            <div className=\"card-body\">\n              <div className=\"basic-form\">\n                <form onSubmit={handleFormSubmit}>\n                  <div className=\"form-row\">\n                    {values.riderImage && (\n                      <>\n                        <div className=\"form-group col-md-4\">\n                          <img\n                            src={values.riderImage}\n                            className=\"rounded-lg mr-2 mb-2\"\n                            width=\"100%\"\n                            alt=\"\"\n                          />\n                        </div>\n                        <div className=\"form-group col-md-8\"></div>\n                      </>\n                    )}\n                  </div>\n\n                  <div className=\"form-group row\">\n                    <label className=\"col-sm-3 col-form-label\">Name</label>\n                    <div className=\"col-sm-9 \">\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Name\"\n                        name=\"riderName\"\n                        value={values.riderName}\n                        onChange={handleInputChange}\n                        required\n                        disabled={viewMode}\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"form-group row\">\n                    <label className=\"col-sm-3 col-form-label\">Contact</label>\n                    <div className=\"col-sm-9\">\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"09-xxx-xxx-xxx\"\n                        name=\"riderContactNum\"\n                        value={values.riderContactNum}\n                        onChange={handleInputChange}\n                        required\n                        disabled={viewMode}\n                        maxLength={11}\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"form-group row\">\n                    <label className=\"col-sm-3 col-form-label\">\n                      Vehicle Type\n                    </label>\n                    <div className=\"col-sm-9\">\n                      <select\n                        defaultValue=\"Select Vehicle\"\n                        id=\"inputState\"\n                        className=\"form-control\"\n                        name=\"vehicleType\"\n                        value={values.vehicleType}\n                        onChange={handleInputChange}\n                        required\n                        disabled={viewMode}\n                      >\n                        <option value=\"Vehicle\">Choose Vehicle..</option>\n                        <option value=\"Motorcycle\">Motorcycle</option>\n                        <option value=\"Car\">Car</option>\n                        <option value=\"Van\">Van</option>\n                        <option value=\"Truck\">Truck</option>\n                      </select>\n                    </div>\n                  </div>\n\n                  <div className=\"form-group row\">\n                    <label className=\"col-sm-3 col-form-label\">\n                      Vehicle Plate #\n                    </label>\n                    <div className=\"col-sm-9\">\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Vehicle Plate Number\"\n                        name=\"vehiclePlateNum\"\n                        value={values.vehiclePlateNum}\n                        onChange={handleInputChange}\n                        required\n                        disabled={viewMode}\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"form-group row\">\n                    <label className=\"col-sm-3 col-form-label\">Address</label>\n                    <div className=\"col-sm-9\">\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        name=\"riderAddress\"\n                        value={values.riderAddress}\n                        onChange={handleInputChange}\n                        required\n                        disabled={viewMode}\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"form-group row\">\n                    <label className=\"col-sm-3 col-form-label\">\n                      Rider Photo\n                    </label>\n                    <div className=\"col-sm-9\">\n                      <input\n                        type=\"file\"\n                        accept=\"image/*\"\n                        onChange={readImages}\n                        disabled={viewMode}\n                      />\n                      <input\n                        className=\"form-control\"\n                        name=\"riderImage\"\n                        value={values.riderImage}\n                        onChange={handleInputChange}\n                        disabled={true}\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"form-row\">\n                    <div className=\"custom-control custom-checkbox mb-3\">\n                      <input\n                        name=\"isActive\"\n                        type=\"checkbox\"\n                        defaultChecked={values.isActive}\n                        checked={values.isActive}\n                        onChange={handleInputChange}\n                        className=\"custom-control-input\"\n                        id=\"isActiveChkBox\"\n                        disabled={viewMode}\n                      />\n                      <label\n                        className=\"custom-control-label\"\n                        htmlFor=\"isActiveChkBox\"\n                      >\n                        Is Active?\n                      </label>\n                    </div>\n                  </div>\n\n                  <div className=\"form-row\">\n                    <div className=\"form-group col-md-12 mt-5\">\n                      <input\n                        type=\"submit\"\n                        value={props.currentId === \"\" ? \"Save\" : \"Update\"}\n                        className=\"btn btn-primary btn-block\"\n                        disabled={viewMode}\n                      />\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default RidersForm;\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/AppsMenu/Shop/productData/index.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/layouts/ProfileSidebar.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/AppsMenu/Shop/productData/allProducts.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/AppsMenu/Shop/productData/ProductStar.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/table/PatientTable.js",["965","966","967"],"import React, { useState, useRef, useEffect } from \"react\";\nimport { Table, Pagination, Badge, Dropdown } from \"react-bootstrap\";\n\nimport { Link } from \"react-router-dom\";\n// import data from \"./tableData.js\";\n\nconst PatientTable = () => {\n   const [data, setData] = useState(\n      document.querySelectorAll(\"#patientTable_basic_table tbody tr\")\n   );\n   const sort = 5;\n   const activePag = useRef(0);\n   const [test, settest] = useState(0);\n\n   // Active data\n   const chageData = (frist, sec) => {\n      for (var i = 0; i < data.length; ++i) {\n         if (i >= frist && i < sec) {\n            data[i].classList.remove(\"d-none\");\n         } else {\n            data[i].classList.add(\"d-none\");\n         }\n      }\n   };\n   // use effect\n   useEffect(() => {\n      setData(document.querySelectorAll(\"#patientTable_basic_table tbody tr\"));\n      chackboxFun();\n   }, [test]);\n\n   // Active pagginarion\n   activePag.current === 0 && chageData(0, sort);\n   // paggination\n   let paggination = Array(Math.ceil(data.length / sort))\n      .fill()\n      .map((_, i) => i + 1);\n\n   // Active paggination & chage data\n   const onClick = (i) => {\n      activePag.current = i;\n      chageData(activePag.current * sort, (activePag.current + 1) * sort);\n      settest(i);\n   };\n   const chackbox = document.querySelectorAll(\".sorting_1 input\");\n   const motherChackBox = document.querySelector(\".sorting_asc input\");\n   // console.log(document.querySelectorAll(\".sorting_1 input\")[0].checked);\n   const chackboxFun = (type) => {\n      for (let i = 0; i < chackbox.length; i++) {\n         const element = chackbox[i];\n         if (type === \"all\") {\n            if (motherChackBox.checked) {\n               element.checked = true;\n            } else {\n               element.checked = false;\n            }\n         } else {\n            if (!element.checked) {\n               motherChackBox.checked = false;\n               break;\n            } else {\n               motherChackBox.checked = true;\n            }\n         }\n      }\n   };\n   return (\n      <div className=\"col-12\">\n         <div className=\"card\">\n            <div className=\"card-header\">\n               <h4 className=\"card-title\">Patient</h4>\n            </div>\n            <div className=\"card-body\">\n               <Table responsive className=\"w-100\">\n                  <div\n                     id=\"patientTable_basic_table\"\n                     className=\"dataTables_wrapper\"\n                  >\n                     <table\n                        id=\"example5\"\n                        className=\"display dataTable no-footer\"\n                        style={{ minWidth: 845 }}\n                        role=\"grid\"\n                        aria-describedby=\"example5_info\"\n                     >\n                        <thead>\n                           <tr role=\"row\">\n                              <th\n                                 className=\"sorting_asc\"\n                                 tabIndex={0}\n                                 aria-controls=\"example5\"\n                                 rowSpan={1}\n                                 colSpan={1}\n                                 aria-sort=\"ascending\"\n                                 aria-label=\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t: activate to sort column descending\"\n                                 style={{ width: 32 }}\n                              >\n                                 <div className=\"custom-control custom-checkbox\">\n                                    <input\n                                       type=\"checkbox\"\n                                       onClick={() => chackboxFun(\"all\")}\n                                       className=\"custom-control-input\"\n                                       id=\"checkAll\"\n                                       required\n                                    />\n                                    <label\n                                       className=\"custom-control-label\"\n                                       htmlFor=\"checkAll\"\n                                    />\n                                 </div>\n                              </th>\n                              <th\n                                 className=\"sorting\"\n                                 tabIndex={0}\n                                 aria-controls=\"example5\"\n                                 rowSpan={1}\n                                 colSpan={1}\n                                 aria-label=\"Patient ID: activate to sort column ascending\"\n                                 style={{ width: 73 }}\n                              >\n                                 Patient ID\n                              </th>\n                              <th\n                                 className=\"sorting\"\n                                 tabIndex={0}\n                                 aria-controls=\"example5\"\n                                 rowSpan={1}\n                                 colSpan={1}\n                                 aria-label=\"Date Check in: activate to sort column ascending\"\n                                 style={{ width: 100 }}\n                              >\n                                 Date Check in\n                              </th>\n                              <th\n                                 className=\"sorting\"\n                                 tabIndex={0}\n                                 aria-controls=\"example5\"\n                                 rowSpan={1}\n                                 colSpan={1}\n                                 aria-label=\"Patient Name: activate to sort column ascending\"\n                                 style={{ width: 100 }}\n                              >\n                                 Patient Name\n                              </th>\n                              <th\n                                 className=\"sorting\"\n                                 tabIndex={0}\n                                 aria-controls=\"example5\"\n                                 rowSpan={1}\n                                 colSpan={1}\n                                 aria-label=\"Doctor Assgined: activate to sort column ascending\"\n                                 style={{ width: 120 }}\n                              >\n                                 Doctor Assgined\n                              </th>\n                              <th\n                                 className=\"sorting\"\n                                 tabIndex={0}\n                                 aria-controls=\"example5\"\n                                 rowSpan={1}\n                                 colSpan={1}\n                                 aria-label=\"Disease: activate to sort column ascending\"\n                                 style={{ width: 62 }}\n                              >\n                                 Disease\n                              </th>\n                              <th\n                                 className=\"sorting\"\n                                 tabIndex={0}\n                                 aria-controls=\"example5\"\n                                 rowSpan={1}\n                                 colSpan={1}\n                                 aria-label=\"Status: activate to sort column ascending\"\n                                 style={{ width: 106 }}\n                              >\n                                 Status\n                              </th>\n                              <th\n                                 className=\"sorting\"\n                                 tabIndex={0}\n                                 aria-controls=\"example5\"\n                                 rowSpan={1}\n                                 colSpan={1}\n                                 aria-label=\"Room no: activate to sort column ascending\"\n                                 style={{ width: 66 }}\n                              >\n                                 Room no\n                              </th>\n                              <th\n                                 className=\"sorting\"\n                                 tabIndex={0}\n                                 aria-controls=\"example5\"\n                                 rowSpan={1}\n                                 colSpan={1}\n                                 aria-label=\"Action: activate to sort column ascending\"\n                                 style={{ width: 47 }}\n                              >\n                                 Action\n                              </th>\n                           </tr>\n                        </thead>\n                        <tbody>\n                           <tr role=\"row\" className=\"odd\">\n                              <td className=\"sorting_1\">\n                                 <div className=\"custom-control custom-checkbox \">\n                                    <input\n                                       type=\"checkbox\"\n                                       onClick={() => chackboxFun()}\n                                       className=\"custom-control-input\"\n                                       id=\"customCheckBox2\"\n                                       required\n                                    />\n                                    <label\n                                       className=\"custom-control-label\"\n                                       htmlFor=\"customCheckBox2\"\n                                    />\n                                 </div>\n                              </td>\n                              <td>#P-00001</td>\n                              <td>26/02/2020, 12:42 AM</td>\n                              <td>Tiger Nixon</td>\n                              <td>Dr. Cedric</td>\n                              <td>Cold &amp; Flu</td>\n                              <td>\n                                 <span className=\"badge light badge-danger\">\n                                    <i className=\"fa fa-circle text-danger mr-1\" />\n                                    New Patient\n                                 </span>\n                              </td>\n                              <td>AB-001</td>\n                              <td>\n                                 <Dropdown className=\"dropdown ml-auto text-right\">\n                                    <Dropdown.Toggle\n                                       variant=\"\"\n                                       className=\"btn-link icon-false\"\n                                       data-toggle=\"dropdown\"\n                                    >\n                                       <svg\n                                          width=\"24px\"\n                                          height=\"24px\"\n                                          viewBox=\"0 0 24 24\"\n                                          version=\"1.1\"\n                                       >\n                                          <g\n                                             stroke=\"none\"\n                                             strokeWidth={1}\n                                             fill=\"none\"\n                                             fillRule=\"evenodd\"\n                                          >\n                                             <rect\n                                                x={0}\n                                                y={0}\n                                                width={24}\n                                                height={24}\n                                             />\n                                             <circle\n                                                fill=\"#000000\"\n                                                cx={5}\n                                                cy={12}\n                                                r={2}\n                                             />\n                                             <circle\n                                                fill=\"#000000\"\n                                                cx={12}\n                                                cy={12}\n                                                r={2}\n                                             />\n                                             <circle\n                                                fill=\"#000000\"\n                                                cx={19}\n                                                cy={12}\n                                                r={2}\n                                             />\n                                          </g>\n                                       </svg>\n                                    </Dropdown.Toggle>\n                                    <Dropdown.Menu className=\"dropdown-menu dropdown-menu-right\">\n                                       <Dropdown.Item>\n                                          Accept Patient\n                                       </Dropdown.Item>\n                                       <Dropdown.Item>\n                                          Reject Order\n                                       </Dropdown.Item>\n                                       <Dropdown.Item>\n                                          View Details\n                                       </Dropdown.Item>\n                                    </Dropdown.Menu>\n                                 </Dropdown>\n                              </td>\n                           </tr>\n                           <tr role=\"row\" className=\"even\">\n                              <td className=\"sorting_1\">\n                                 <div className=\"custom-control custom-checkbox \">\n                                    <input\n                                       type=\"checkbox\"\n                                       onClick={() => chackboxFun()}\n                                       className=\"custom-control-input\"\n                                       id=\"customCheckBox3\"\n                                       required\n                                    />\n                                    <label\n                                       className=\"custom-control-label\"\n                                       htmlFor=\"customCheckBox3\"\n                                    />\n                                 </div>\n                              </td>\n                              <td>#P-00002</td>\n                              <td>28/02/2020, 12:42 AM</td>\n                              <td>Garrett Winters</td>\n                              <td>Dr. Cedric</td>\n                              <td>Sleep Problem</td>\n                              <td>\n                                 <span className=\"badge light badge-warning\">\n                                    <i className=\"fa fa-circle text-warning mr-1\" />\n                                    In Treatment\n                                 </span>\n                              </td>\n                              <td>AB-002</td>\n                              <td>\n                                 <Dropdown className=\"dropdown ml-auto text-right\">\n                                    <Dropdown.Toggle\n                                       variant=\"\"\n                                       className=\"btn-link icon-false\"\n                                       data-toggle=\"dropdown\"\n                                    >\n                                       <svg\n                                          width=\"24px\"\n                                          height=\"24px\"\n                                          viewBox=\"0 0 24 24\"\n                                          version=\"1.1\"\n                                       >\n                                          <g\n                                             stroke=\"none\"\n                                             strokeWidth={1}\n                                             fill=\"none\"\n                                             fillRule=\"evenodd\"\n                                          >\n                                             <rect\n                                                x={0}\n                                                y={0}\n                                                width={24}\n                                                height={24}\n                                             />\n                                             <circle\n                                                fill=\"#000000\"\n                                                cx={5}\n                                                cy={12}\n                                                r={2}\n                                             />\n                                             <circle\n                                                fill=\"#000000\"\n                                                cx={12}\n                                                cy={12}\n                                                r={2}\n                                             />\n                                             <circle\n                                                fill=\"#000000\"\n                                                cx={19}\n                                                cy={12}\n                                                r={2}\n                                             />\n                                          </g>\n                                       </svg>\n                                    </Dropdown.Toggle>\n                                    <Dropdown.Menu className=\"dropdown-menu dropdown-menu-right\">\n                                       <Dropdown.Item>\n                                          Accept Patient\n                                       </Dropdown.Item>\n                                       <Dropdown.Item>\n                                          Reject Order\n                                       </Dropdown.Item>\n                                       <Dropdown.Item>\n                                          View Details\n                                       </Dropdown.Item>\n                                    </Dropdown.Menu>\n                                 </Dropdown>\n                              </td>\n                           </tr>\n                           <tr role=\"row\" className=\"odd\">\n                              <td className=\"sorting_1\">\n                                 <div className=\"custom-control custom-checkbox \">\n                                    <input\n                                       type=\"checkbox\"\n                                       onClick={() => chackboxFun()}\n                                       className=\"custom-control-input\"\n                                       id=\"customCheckBox4\"\n                                       required\n                                    />\n                                    <label\n                                       className=\"custom-control-label\"\n                                       htmlFor=\"customCheckBox4\"\n                                    />\n                                 </div>\n                              </td>\n                              <td>#P-00003</td>\n                              <td>26/02/2020, 12:42 AM</td>\n                              <td>Ashton Cox</td>\n                              <td>Dr. Rhona</td>\n                              <td>Cold &amp; Flu</td>\n                              <td>\n                                 <span className=\"badge light badge-success\">\n                                    <i className=\"fa fa-circle text-success mr-1\" />\n                                    Recovered\n                                 </span>\n                              </td>\n                              <td>AB-003</td>\n                              <td>\n                                 <Dropdown className=\"dropdown ml-auto text-right\">\n                                    <Dropdown.Toggle\n                                       variant=\"\"\n                                       className=\"btn-link icon-false\"\n                                       data-toggle=\"dropdown\"\n                                    >\n                                       <svg\n                                          width=\"24px\"\n                                          height=\"24px\"\n                                          viewBox=\"0 0 24 24\"\n                                          version=\"1.1\"\n                                       >\n                                          <g\n                                             stroke=\"none\"\n                                             strokeWidth={1}\n                                             fill=\"none\"\n                                             fillRule=\"evenodd\"\n                                          >\n                                             <rect\n                                                x={0}\n                                                y={0}\n                                                width={24}\n                                                height={24}\n                                             />\n                                             <circle\n                                                fill=\"#000000\"\n                                                cx={5}\n                                                cy={12}\n                                                r={2}\n                                             />\n                                             <circle\n                                                fill=\"#000000\"\n                                                cx={12}\n                                                cy={12}\n                                                r={2}\n                                             />\n                                             <circle\n                                                fill=\"#000000\"\n                                                cx={19}\n                                                cy={12}\n                                                r={2}\n                                             />\n                                          </g>\n                                       </svg>\n                                    </Dropdown.Toggle>\n                                    <Dropdown.Menu className=\"dropdown-menu dropdown-menu-right\">\n                                       <Dropdown.Item>\n                                          Accept Patient\n                                       </Dropdown.Item>\n                                       <Dropdown.Item>\n                                          Reject Order\n                                       </Dropdown.Item>\n                                       <Dropdown.Item>\n                                          View Details\n                                       </Dropdown.Item>\n                                    </Dropdown.Menu>\n                                 </Dropdown>\n                              </td>\n                           </tr>\n                           <tr role=\"row\" className=\"even\">\n                              <td className=\"sorting_1\">\n                                 <div className=\"custom-control custom-checkbox \">\n                                    <input\n                                       type=\"checkbox\"\n                                       onClick={() => chackboxFun()}\n                                       className=\"custom-control-input\"\n                                       id=\"customCheckBox5\"\n                                       required\n                                    />\n                                    <label\n                                       className=\"custom-control-label\"\n                                       htmlFor=\"customCheckBox5\"\n                                    />\n                                 </div>\n                              </td>\n                              <td>#P-00004</td>\n                              <td>29/02/2020, 12:42 AM</td>\n                              <td>Ashton Cox</td>\n                              <td>Dr. Cedric</td>\n                              <td>Cold &amp; Flu</td>\n                              <td>\n                                 <span className=\"badge light badge-warning\">\n                                    <i className=\"fa fa-circle text-warning mr-1\" />\n                                    In Treatment\n                                 </span>\n                              </td>\n                              <td>AB-004</td>\n                              <td>\n                                 <Dropdown className=\"dropdown ml-auto text-right\">\n                                    <Dropdown.Toggle\n                                       variant=\"\"\n                                       className=\"btn-link icon-false\"\n                                       data-toggle=\"dropdown\"\n                                    >\n                                       <svg\n                                          width=\"24px\"\n                                          height=\"24px\"\n                                          viewBox=\"0 0 24 24\"\n                                          version=\"1.1\"\n                                       >\n                                          <g\n                                             stroke=\"none\"\n                                             strokeWidth={1}\n                                             fill=\"none\"\n                                             fillRule=\"evenodd\"\n                                          >\n                                             <rect\n                                                x={0}\n                                                y={0}\n                                                width={24}\n                                                height={24}\n                                             />\n                                             <circle\n                                                fill=\"#000000\"\n                                                cx={5}\n                                                cy={12}\n                                                r={2}\n                                             />\n                                             <circle\n                                                fill=\"#000000\"\n                                                cx={12}\n                                                cy={12}\n                                                r={2}\n                                             />\n                                             <circle\n                                                fill=\"#000000\"\n                                                cx={19}\n                                                cy={12}\n                                                r={2}\n                                             />\n                                          </g>\n                                       </svg>\n                                    </Dropdown.Toggle>\n                                    <Dropdown.Menu className=\"dropdown-menu dropdown-menu-right\">\n                                       <Dropdown.Item>\n                                          Accept Patient\n                                       </Dropdown.Item>\n                                       <Dropdown.Item>\n                                          Reject Order\n                                       </Dropdown.Item>\n                                       <Dropdown.Item>\n                                          View Details\n                                       </Dropdown.Item>\n                                    </Dropdown.Menu>\n                                 </Dropdown>\n                              </td>\n                           </tr>\n                           <tr role=\"row\" className=\"odd\">\n                              <td className=\"sorting_1\">\n                                 <div className=\"custom-control custom-checkbox \">\n                                    <input\n                                       type=\"checkbox\"\n                                       onClick={() => chackboxFun()}\n                                       className=\"custom-control-input\"\n                                       id=\"customCheckBox6\"\n                                       required\n                                    />\n                                    <label\n                                       className=\"custom-control-label\"\n                                       htmlFor=\"customCheckBox6\"\n                                    />\n                                 </div>\n                              </td>\n                              <td>#P-00005</td>\n                              <td>28/02/2020, 12:42 AM</td>\n                              <td>Ashton Cox</td>\n                              <td>Dr. Cedric</td>\n                              <td>Cold &amp; Flu</td>\n                              <td>\n                                 <span className=\"badge light badge-warning\">\n                                    <i className=\"fa fa-circle text-warning mr-1\" />\n                                    In Treatment\n                                 </span>\n                              </td>\n                              <td>AB-005</td>\n                              <td>\n                                 <Dropdown className=\"dropdown ml-auto text-right\">\n                                    <Dropdown.Toggle\n                                       variant=\"\"\n                                       className=\"btn-link icon-false\"\n                                       data-toggle=\"dropdown\"\n                                    >\n                                       <svg\n                                          width=\"24px\"\n                                          height=\"24px\"\n                                          viewBox=\"0 0 24 24\"\n                                          version=\"1.1\"\n                                       >\n                                          <g\n                                             stroke=\"none\"\n                                             strokeWidth={1}\n                                             fill=\"none\"\n                                             fillRule=\"evenodd\"\n                                          >\n                                             <rect\n                                                x={0}\n                                                y={0}\n                                                width={24}\n                                                height={24}\n                                             />\n                                             <circle\n                                                fill=\"#000000\"\n                                                cx={5}\n                                                cy={12}\n                                                r={2}\n                                             />\n                                             <circle\n                                                fill=\"#000000\"\n                                                cx={12}\n                                                cy={12}\n                                                r={2}\n                                             />\n                                             <circle\n                                                fill=\"#000000\"\n                                                cx={19}\n                                                cy={12}\n                                                r={2}\n                                             />\n                                          </g>\n                                       </svg>\n                                    </Dropdown.Toggle>\n                                    <Dropdown.Menu className=\"dropdown-menu dropdown-menu-right\">\n                                       <Dropdown.Item>\n                                          Accept Patient\n                                       </Dropdown.Item>\n                                       <Dropdown.Item>\n                                          Reject Order\n                                       </Dropdown.Item>\n                                       <Dropdown.Item>\n                                          View Details\n                                       </Dropdown.Item>\n                                    </Dropdown.Menu>\n                                 </Dropdown>\n                              </td>\n                           </tr>\n                           <tr role=\"row\" className=\"even\">\n                              <td className=\"sorting_1\">\n                                 <div className=\"custom-control custom-checkbox \">\n                                    <input\n                                       type=\"checkbox\"\n                                       onClick={() => chackboxFun()}\n                                       className=\"custom-control-input\"\n                                       id=\"customCheckBox7\"\n                                       required\n                                    />\n                                    <label\n                                       className=\"custom-control-label\"\n                                       htmlFor=\"customCheckBox7\"\n                                    />\n                                 </div>\n                              </td>\n                              <td>#P-00006</td>\n                              <td>28/02/2020, 12:42 AM</td>\n                              <td>Ashton Cox</td>\n                              <td>Dr. Rhona</td>\n                              <td>Sleep Problem</td>\n                              <td>\n                                 <span className=\"badge light badge-warning\">\n                                    <i className=\"fa fa-circle text-warning mr-1\" />\n                                    In Treatment\n                                 </span>\n                              </td>\n                              <td>AB-006</td>\n                              <td>\n                                 <Dropdown className=\"dropdown ml-auto text-right\">\n                                    <Dropdown.Toggle\n                                       variant=\"\"\n                                       className=\"btn-link icon-false\"\n                                       data-toggle=\"dropdown\"\n                                    >\n                                       <svg\n                                          width=\"24px\"\n                                          height=\"24px\"\n                                          viewBox=\"0 0 24 24\"\n                                          version=\"1.1\"\n                                       >\n                                          <g\n                                             stroke=\"none\"\n                                             strokeWidth={1}\n                                             fill=\"none\"\n                                             fillRule=\"evenodd\"\n                                          >\n                                             <rect\n                                                x={0}\n                                                y={0}\n                                                width={24}\n                                                height={24}\n                                             />\n                                             <circle\n                                                fill=\"#000000\"\n                                                cx={5}\n                                                cy={12}\n                                                r={2}\n                                             />\n                                             <circle\n                                                fill=\"#000000\"\n                                                cx={12}\n                                                cy={12}\n                                                r={2}\n                                             />\n                                             <circle\n                                                fill=\"#000000\"\n                                                cx={19}\n                                                cy={12}\n                                                r={2}\n                                             />\n                                          </g>\n                                       </svg>\n                                    </Dropdown.Toggle>\n                                    <Dropdown.Menu className=\"dropdown-menu dropdown-menu-right\">\n                                       <Dropdown.Item>\n                                          Accept Patient\n                                       </Dropdown.Item>\n                                       <Dropdown.Item>\n                                          Reject Order\n                                       </Dropdown.Item>\n                                       <Dropdown.Item>\n                                          View Details\n                                       </Dropdown.Item>\n                                    </Dropdown.Menu>\n                                 </Dropdown>\n                              </td>\n                           </tr>\n                           <tr role=\"row\" className=\"odd\">\n                              <td className=\"sorting_1\">\n                                 <div className=\"custom-control custom-checkbox \">\n                                    <input\n                                       type=\"checkbox\"\n                                       onClick={() => chackboxFun()}\n                                       className=\"custom-control-input\"\n                                       id=\"customCheckBox8\"\n                                       required\n                                    />\n                                    <label\n                                       className=\"custom-control-label\"\n                                       htmlFor=\"customCheckBox8\"\n                                    />\n                                 </div>\n                              </td>\n                              <td>#P-00007</td>\n                              <td>26/02/2020, 12:42 AM</td>\n                              <td>Airi Satou</td>\n                              <td>Dr. Rhona</td>\n                              <td>Cold &amp; Flu</td>\n                              <td>\n                                 <span className=\"badge light badge-danger\">\n                                    <i className=\"fa fa-circle text-danger mr-1\" />\n                                    New Patient\n                                 </span>\n                              </td>\n                              <td>AB-007</td>\n                              <td>\n                                 <Dropdown className=\"dropdown ml-auto text-right\">\n                                    <Dropdown.Toggle\n                                       variant=\"\"\n                                       className=\"btn-link icon-false\"\n                                       data-toggle=\"dropdown\"\n                                    >\n                                       <svg\n                                          width=\"24px\"\n                                          height=\"24px\"\n                                          viewBox=\"0 0 24 24\"\n                                          version=\"1.1\"\n                                       >\n                                          <g\n                                             stroke=\"none\"\n                                             strokeWidth={1}\n                                             fill=\"none\"\n                                             fillRule=\"evenodd\"\n                                          >\n                                             <rect\n                                                x={0}\n                                                y={0}\n                                                width={24}\n                                                height={24}\n                                             />\n                                             <circle\n                                                fill=\"#000000\"\n                                                cx={5}\n                                                cy={12}\n                                                r={2}\n                                             />\n                                             <circle\n                                                fill=\"#000000\"\n                                                cx={12}\n                                                cy={12}\n                                                r={2}\n                                             />\n                                             <circle\n                                                fill=\"#000000\"\n                                                cx={19}\n                                                cy={12}\n                                                r={2}\n                                             />\n                                          </g>\n                                       </svg>\n                                    </Dropdown.Toggle>\n                                    <Dropdown.Menu className=\"dropdown-menu dropdown-menu-right\">\n                                       <Dropdown.Item>\n                                          Accept Patient\n                                       </Dropdown.Item>\n                                       <Dropdown.Item>\n                                          Reject Order\n                                       </Dropdown.Item>\n                                       <Dropdown.Item>\n                                          View Details\n                                       </Dropdown.Item>\n                                    </Dropdown.Menu>\n                                 </Dropdown>\n                              </td>\n                           </tr>\n                           <tr role=\"row\" className=\"even\">\n                              <td className=\"sorting_1\">\n                                 <div className=\"custom-control custom-checkbox \">\n                                    <input\n                                       type=\"checkbox\"\n                                       onClick={() => chackboxFun()}\n                                       className=\"custom-control-input\"\n                                       id=\"customCheckBox9\"\n                                       required\n                                    />\n                                    <label\n                                       className=\"custom-control-label\"\n                                       htmlFor=\"customCheckBox9\"\n                                    />\n                                 </div>\n                              </td>\n                              <td>#P-00008</td>\n                              <td>29/02/2020, 12:42 AM</td>\n                              <td>Airi Satou</td>\n                              <td>Dr. Garrett </td>\n                              <td>Sleep Problem</td>\n                              <td>\n                                 <span className=\"badge light badge-warning\">\n                                    <i className=\"fa fa-circle text-warning mr-1\" />\n                                    In Treatment\n                                 </span>\n                              </td>\n                              <td>AB-008</td>\n                              <td>\n                                 <Dropdown className=\"dropdown ml-auto text-right\">\n                                    <Dropdown.Toggle\n                                       variant=\"\"\n                                       className=\"btn-link icon-false\"\n                                       data-toggle=\"dropdown\"\n                                    >\n                                       <svg\n                                          width=\"24px\"\n                                          height=\"24px\"\n                                          viewBox=\"0 0 24 24\"\n                                          version=\"1.1\"\n                                       >\n                                          <g\n                                             stroke=\"none\"\n                                             strokeWidth={1}\n                                             fill=\"none\"\n                                             fillRule=\"evenodd\"\n                                          >\n                                             <rect\n                                                x={0}\n                                                y={0}\n                                                width={24}\n                                                height={24}\n                                             />\n                                             <circle\n                                                fill=\"#000000\"\n                                                cx={5}\n                                                cy={12}\n                                                r={2}\n                                             />\n                                             <circle\n                                                fill=\"#000000\"\n                                                cx={12}\n                                                cy={12}\n                                                r={2}\n                                             />\n                                             <circle\n                                                fill=\"#000000\"\n                                                cx={19}\n                                                cy={12}\n                                                r={2}\n                                             />\n                                          </g>\n                                       </svg>\n                                    </Dropdown.Toggle>\n                                    <Dropdown.Menu className=\"dropdown-menu dropdown-menu-right\">\n                                       <Dropdown.Item>\n                                          Accept Patient\n                                       </Dropdown.Item>\n                                       <Dropdown.Item>\n                                          Reject Order\n                                       </Dropdown.Item>\n                                       <Dropdown.Item>\n                                          View Details\n                                       </Dropdown.Item>\n                                    </Dropdown.Menu>\n                                 </Dropdown>\n                              </td>\n                           </tr>\n                           <tr role=\"row\" className=\"odd\">\n                              <td className=\"sorting_1\">\n                                 <div className=\"custom-control custom-checkbox \">\n                                    <input\n                                       type=\"checkbox\"\n                                       onClick={() => chackboxFun()}\n                                       className=\"custom-control-input\"\n                                       id=\"customCheckBox10\"\n                                       required\n                                    />\n                                    <label\n                                       className=\"custom-control-label\"\n                                       htmlFor=\"customCheckBox10\"\n                                    />\n                                 </div>\n                              </td>\n                              <td>#P-00009</td>\n                              <td>25/02/2020, 12:42 AM</td>\n                              <td>Airi Satou</td>\n                              <td>Dr. Rhona</td>\n                              <td>Cold &amp; Flu</td>\n                              <td>\n                                 <span className=\"badge light badge-danger\">\n                                    <i className=\"fa fa-circle text-danger mr-1\" />\n                                    New Patient\n                                 </span>\n                              </td>\n                              <td>AB-009</td>\n                              <td>\n                                 <Dropdown className=\"dropdown ml-auto text-right\">\n                                    <Dropdown.Toggle\n                                       variant=\"\"\n                                       className=\"btn-link icon-false\"\n                                       data-toggle=\"dropdown\"\n                                    >\n                                       <svg\n                                          width=\"24px\"\n                                          height=\"24px\"\n                                          viewBox=\"0 0 24 24\"\n                                          version=\"1.1\"\n                                       >\n                                          <g\n                                             stroke=\"none\"\n                                             strokeWidth={1}\n                                             fill=\"none\"\n                                             fillRule=\"evenodd\"\n                                          >\n                                             <rect\n                                                x={0}\n                                                y={0}\n                                                width={24}\n                                                height={24}\n                                             />\n                                             <circle\n                                                fill=\"#000000\"\n                                                cx={5}\n                                                cy={12}\n                                                r={2}\n                                             />\n                                             <circle\n                                                fill=\"#000000\"\n                                                cx={12}\n                                                cy={12}\n                                                r={2}\n                                             />\n                                             <circle\n                                                fill=\"#000000\"\n                                                cx={19}\n                                                cy={12}\n                                                r={2}\n                                             />\n                                          </g>\n                                       </svg>\n                                    </Dropdown.Toggle>\n                                    <Dropdown.Menu className=\"dropdown-menu dropdown-menu-right\">\n                                       <Dropdown.Item>\n                                          Accept Patient\n                                       </Dropdown.Item>\n                                       <Dropdown.Item>\n                                          Reject Order\n                                       </Dropdown.Item>\n                                       <Dropdown.Item>\n                                          View Details\n                                       </Dropdown.Item>\n                                    </Dropdown.Menu>\n                                 </Dropdown>\n                              </td>\n                           </tr>\n                           <tr role=\"row\" className=\"even\">\n                              <td className=\"sorting_1\">\n                                 <div className=\"custom-control custom-checkbox \">\n                                    <input\n                                       type=\"checkbox\"\n                                       onClick={() => chackboxFun()}\n                                       className=\"custom-control-input\"\n                                       id=\"customCheckBox11\"\n                                       required\n                                    />\n                                    <label\n                                       className=\"custom-control-label\"\n                                       htmlFor=\"customCheckBox11\"\n                                    />\n                                 </div>\n                              </td>\n                              <td>#P-00010</td>\n                              <td>26/02/2020, 12:42 AM</td>\n                              <td>Airi Satou</td>\n                              <td>Dr. Rhona</td>\n                              <td>Sleep Problem</td>\n                              <td>\n                                 <span className=\"badge light badge-danger\">\n                                    <i className=\"fa fa-circle text-danger mr-1\" />\n                                    New Patient\n                                 </span>\n                              </td>\n                              <td>AB-010</td>\n                              <td>\n                                 <Dropdown className=\"dropdown ml-auto text-right\">\n                                    <Dropdown.Toggle\n                                       variant=\"\"\n                                       className=\"btn-link icon-false\"\n                                       data-toggle=\"dropdown\"\n                                    >\n                                       <svg\n                                          width=\"24px\"\n                                          height=\"24px\"\n                                          viewBox=\"0 0 24 24\"\n                                          version=\"1.1\"\n                                       >\n                                          <g\n                                             stroke=\"none\"\n                                             strokeWidth={1}\n                                             fill=\"none\"\n                                             fillRule=\"evenodd\"\n                                          >\n                                             <rect\n                                                x={0}\n                                                y={0}\n                                                width={24}\n                                                height={24}\n                                             />\n                                             <circle\n                                                fill=\"#000000\"\n                                                cx={5}\n                                                cy={12}\n                                                r={2}\n                                             />\n                                             <circle\n                                                fill=\"#000000\"\n                                                cx={12}\n                                                cy={12}\n                                                r={2}\n                                             />\n                                             <circle\n                                                fill=\"#000000\"\n                                                cx={19}\n                                                cy={12}\n                                                r={2}\n                                             />\n                                          </g>\n                                       </svg>\n                                    </Dropdown.Toggle>\n                                    <Dropdown.Menu className=\"dropdown-menu dropdown-menu-right\">\n                                       <Dropdown.Item>\n                                          Accept Patient\n                                       </Dropdown.Item>\n                                       <Dropdown.Item>\n                                          Reject Order\n                                       </Dropdown.Item>\n                                       <Dropdown.Item>\n                                          View Details\n                                       </Dropdown.Item>\n                                    </Dropdown.Menu>\n                                 </Dropdown>\n                              </td>\n                           </tr>\n                        </tbody>\n                     </table>\n\n                     <div className=\"d-flex justify-content-between align-items-center mt-3\">\n                        <div className=\"dataTables_info\">\n                           Showing {activePag.current * sort + 1} to{\" \"}\n                           {data.length > (activePag.current + 1) * sort\n                              ? (activePag.current + 1) * sort\n                              : data.length}{\" \"}\n                           of {data.length} entries\n                        </div>\n                        <div\n                           className=\"dataTables_paginate paging_simple_numbers\"\n                           id=\"example5_paginate\"\n                        >\n                           <Link\n                              className=\"paginate_button previous disabled\"\n                              to=\"/table-datatable-basic\"\n                              onClick={() =>\n                                 activePag.current > 0 &&\n                                 onClick(activePag.current - 1)\n                              }\n                           >\n                              Previous\n                           </Link>\n                           <span>\n                              {paggination.map((number, i) => (\n                                 <Link\n                                    key={i}\n                                    to=\"/table-datatable-basic\"\n                                    className={`paginate_button  ${\n                                       activePag.current === i ? \"current\" : \"\"\n                                    } ${i > 0 ? \"ml-1\" : \"\"}`}\n                                    onClick={() => onClick(i)}\n                                 >\n                                    {number}\n                                 </Link>\n                              ))}\n                           </span>\n                           <Link\n                              className=\"paginate_button next\"\n                              to=\"/table-datatable-basic\"\n                              onClick={() =>\n                                 activePag.current + 1 < paggination.length &&\n                                 onClick(activePag.current + 1)\n                              }\n                           >\n                              Next\n                           </Link>\n                        </div>\n                     </div>\n                  </div>\n               </Table>\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default PatientTable;\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/table/FeesCollection.js",["968"],"import React, { useState, useRef } from \"react\";\nimport { Table, Pagination, Badge } from \"react-bootstrap\";\n\nimport { Link } from \"react-router-dom\";\nimport data from \"./tableData.js\";\n\nconst FeesCollection = () => {\n   const sort = 3;\n   let jobPagination = Array(Math.ceil(data.feeTable.data.length / sort))\n      .fill()\n      .map((_, i) => i + 1);\n\n   const activePag = useRef(0);\n   const jobData = useRef(\n      data.feeTable.data.slice(\n         activePag.current * sort,\n         (activePag.current + 1) * sort\n      )\n   );\n   const [demo, setdemo] = useState();\n   const onClick = (i) => {\n      activePag.current = i;\n\n      jobData.current = data.feeTable.data.slice(\n         activePag.current * sort,\n         (activePag.current + 1) * sort\n      );\n      setdemo(\n         data.feeTable.data.slice(\n            activePag.current * sort,\n            (activePag.current + 1) * sort\n         )\n      );\n   };\n   return (\n      <div className=\"col-12\">\n         <div className=\"card\">\n            <div className=\"card-header\">\n               <h4 className=\"card-title\">Fees Collection</h4>\n            </div>\n            <div className=\"card-body\">\n               <Table responsive className=\"w-100\">\n                  <div id=\"example_wrapper\" className=\"dataTables_wrapper\">\n                     <table id=\"example\" className=\"display w-100 dataTable\">\n                        <thead>\n                           <tr role=\"row\">\n                              {data.feeTable.columns.map((d, i) => (\n                                 <th key={i}>{d}</th>\n                              ))}\n                           </tr>\n                        </thead>\n                        <tbody>\n                           {jobData.current.map((d, i) => (\n                              <tr key={i}>\n                                 {d.map((da, ii) => (\n                                    <td key={ii}>\n                                       {da === \"Paid\" ? (\n                                          <Badge variant=\"success light\">\n                                             Paid\n                                          </Badge>\n                                       ) : da === \"Unpaid\" ? (\n                                          <Badge variant=\"danger light\">\n                                             Unpaid\n                                          </Badge>\n                                       ) : da === \"Panding\" ? (\n                                          <Badge variant=\"warning light\">\n                                             Panding\n                                          </Badge>\n                                       ) : (\n                                          da\n                                       )}\n                                    </td>\n                                 ))}\n                              </tr>\n                           ))}\n                        </tbody>\n                        <tfoot>\n                           <tr role=\"row\">\n                              {data.feeTable.columns.map((d, i) => (\n                                 <th key={i}>{d}</th>\n                              ))}\n                           </tr>\n                        </tfoot>\n                     </table>\n                     <div className=\"d-sm-flex text-center justify-content-between align-items-center mt-3\">\n                        <div className=\"dataTables_info\">\n                           Showing {activePag.current * sort + 1} to{\" \"}\n                           {data.jobsTable.data.length <\n                           (activePag.current + 1) * sort\n                              ? data.jobsTable.data.length\n                              : (activePag.current + 1) * sort}{\" \"}\n                           of {data.jobsTable.data.length} entries\n                        </div>\n                        <div className=\"dataTables_paginate paging_simple_numbers\">\n                           <Pagination\n                              className=\"pagination-primary pagination-box\"\n                              size=\"lg\"\n                           >\n                              <li\n                                 className=\"\"\n                                 style={{ borderRadius: \"4px\" }}\n                                 onClick={() =>\n                                    activePag.current > 0 &&\n                                    onClick(activePag.current - 1)\n                                 }\n                              >\n                                 <Link\n                                    className=\"paginate_button previous disabled\"\n                                    style={{ padding: \"10px 20px\" }}\n                                    to=\"#\"\n                                 >\n                                    Previous\n                                 </Link>\n                              </li>\n                              <span>\n                                 {jobPagination.map((number, i) => (\n                                    <Link\n                                       key={i}\n                                       to=\"/table-datatable-basic\"\n                                       className={`paginate_button  ${\n                                          activePag.current === i\n                                             ? \"current\"\n                                             : \"\"\n                                       }`}\n                                       onClick={() => onClick(i)}\n                                    >\n                                       {number}\n                                    </Link>\n                                 ))}\n                              </span>\n\n                              <li\n                                 className=\"\"\n                                 onClick={() =>\n                                    activePag.current + 1 <\n                                       jobPagination.length &&\n                                    onClick(activePag.current + 1)\n                                 }\n                              >\n                                 <Link\n                                    className=\"paginate_button next\"\n                                    to=\"#\"\n                                    style={{ padding: \"10px 20px\" }}\n                                 >\n                                    Next\n                                 </Link>\n                              </li>\n                           </Pagination>\n                        </div>\n                     </div>\n                  </div>\n               </Table>\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default FeesCollection;\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/table/ProfileDatatable.js",["969"],"import React, { Fragment, useState, useRef } from \"react\";\nimport { Table, Pagination } from \"react-bootstrap\";\n\nimport { Link } from \"react-router-dom\";\nimport data from \"./tableData.js\";\n\nconst ProfileDatatable = () => {\n   const sort = 3;\n   let jobPagination = Array(Math.ceil(data.profileTable.data.length / sort))\n      .fill()\n      .map((_, i) => i + 1);\n\n   const activePag = useRef(0);\n   const jobData = useRef(\n      data.profileTable.data.slice(\n         activePag.current * sort,\n         (activePag.current + 1) * sort\n      )\n   );\n   const [demo, setdemo] = useState();\n   const onClick = (i) => {\n      activePag.current = i;\n\n      jobData.current = data.profileTable.data.slice(\n         activePag.current * sort,\n         (activePag.current + 1) * sort\n      );\n      setdemo(\n         data.profileTable.data.slice(\n            activePag.current * sort,\n            (activePag.current + 1) * sort\n         )\n      );\n   };\n   return (\n      <div className=\"col-12\">\n         <div className=\"card\">\n            <div className=\"card-header\">\n               <h4 className=\"card-title\">Profile Datatable</h4>\n            </div>\n            <div className=\"card-body\">\n               <Table responsive className=\"w-100\">\n                  <div id=\"example_wrapper\" className=\"dataTables_wrapper\">\n                     <table id=\"example\" className=\"display w-100 dataTable\">\n                        <thead>\n                           <tr role=\"row\">\n                              {data.profileTable.columns.map((d, i) => (\n                                 <th key={i}>{d}</th>\n                              ))}\n                           </tr>\n                        </thead>\n                        <tbody>\n                           {jobData.current.map((d, i) => (\n                              <tr key={i}>\n                                 {d.map((da, i) => (\n                                    <Fragment key={i}>\n                                       <td>\n                                          {i === 0 ? (\n                                             <img\n                                                className=\"rounded-circle\"\n                                                width=\"35\"\n                                                src={da}\n                                                alt=\"\"\n                                             />\n                                          ) : (\n                                             <Fragment>\n                                                {da}\n                                                {i === 8 && (\n                                                   <div className=\"d-flex\">\n                                                      <Link\n                                                         to=\"#\"\n                                                         className=\"btn btn-primary shadow btn-xs sharp mr-1\"\n                                                      >\n                                                         <i className=\"fa fa-pencil\"></i>\n                                                      </Link>\n                                                      <Link\n                                                         to=\"#\"\n                                                         className=\"btn btn-danger shadow btn-xs sharp\"\n                                                      >\n                                                         <i className=\"fa fa-trash\"></i>\n                                                      </Link>\n                                                   </div>\n                                                )}\n                                             </Fragment>\n                                          )}\n                                       </td>\n                                    </Fragment>\n                                 ))}\n                              </tr>\n                           ))}\n                        </tbody>\n                        <tfoot>\n                           <tr role=\"row\">\n                              {data.profileTable.columns.map((d, i) => (\n                                 <th key={i}>{d}</th>\n                              ))}\n                           </tr>\n                        </tfoot>\n                     </table>\n\n                     <div className=\"d-sm-flex text-center justify-content-between align-items-center mt-3\">\n                        <div className=\"dataTables_info\">\n                           Showing {activePag.current * sort + 1} to{\" \"}\n                           {data.jobsTable.data.length <\n                           (activePag.current + 1) * sort\n                              ? data.jobsTable.data.length\n                              : (activePag.current + 1) * sort}{\" \"}\n                           of {data.jobsTable.data.length} entries\n                        </div>\n                        <div className=\"dataTables_paginate paging_simple_numbers\">\n                           <Pagination\n                              className=\"pagination-primary pagination-box\"\n                              size=\"lg\"\n                           >\n                              <li\n                                 className=\"\"\n                                 style={{ borderRadius: \"4px\" }}\n                                 onClick={() =>\n                                    activePag.current > 0 &&\n                                    onClick(activePag.current - 1)\n                                 }\n                              >\n                                 <Link\n                                    className=\"paginate_button previous disabled\"\n                                    style={{ padding: \"10px 20px\" }}\n                                    to=\"#\"\n                                 >\n                                    Previous\n                                 </Link>\n                              </li>\n                              <span>\n                                 {jobPagination.map((number, i) => (\n                                    <Link\n                                       key={i}\n                                       to=\"/table-datatable-basic\"\n                                       className={`paginate_button  ${\n                                          activePag.current === i\n                                             ? \"current\"\n                                             : \"\"\n                                       }`}\n                                       onClick={() => onClick(i)}\n                                    >\n                                       {number}\n                                    </Link>\n                                 ))}\n                              </span>\n\n                              <li\n                                 className=\"\"\n                                 onClick={() =>\n                                    activePag.current + 1 <\n                                       jobPagination.length &&\n                                    onClick(activePag.current + 1)\n                                 }\n                              >\n                                 <Link\n                                    className=\"paginate_button next\"\n                                    to=\"#\"\n                                    style={{ padding: \"10px 20px\" }}\n                                 >\n                                    Next\n                                 </Link>\n                              </li>\n                           </Pagination>\n                        </div>\n                     </div>\n                  </div>\n               </Table>\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default ProfileDatatable;\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/table/SimpleDataTable.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/table/BasicDatatable.js",["970"],"import React, { useState, useRef } from \"react\";\nimport { Table, Pagination } from \"react-bootstrap\";\n\nimport data from \"./tableData.js\";\nimport { Link } from \"react-router-dom\";\n\nconst BasicDatatable = () => {\n   const sort = 4;\n   let jobPaggination = Array(Math.ceil(data.jobsTable.data.length / sort))\n      .fill()\n      .map((_, i) => i + 1);\n\n   const activePag = useRef(0);\n   const jobData = useRef(\n      data.jobsTable.data.slice(\n         activePag.current * sort,\n         (activePag.current + 1) * sort\n      )\n   );\n   const [demo, setdemo] = useState();\n   const onClick = (i) => {\n      activePag.current = i;\n\n      jobData.current = data.jobsTable.data.slice(\n         activePag.current * sort,\n         (activePag.current + 1) * sort\n      );\n      setdemo(\n         data.jobsTable.data.slice(\n            activePag.current * sort,\n            (activePag.current + 1) * sort\n         )\n      );\n   };\n   return (\n      <div className=\"col-12\">\n         <div className=\"card\">\n            <div className=\"card-header\">\n               <h4 className=\"card-title\">Basic Datatable</h4>\n            </div>\n            <div className=\"card-body\">\n               <Table responsive className=\"w-100\">\n                  <div id=\"example_wrapper\" className=\"dataTables_wrapper\">\n                     <table id=\"example\" className=\"display w-100 dataTable\">\n                        <thead>\n                           <tr role=\"row\">\n                              {data.jobsTable.columns.map((d, i) => (\n                                 <th key={i}>{d}</th>\n                              ))}\n                           </tr>\n                        </thead>\n                        <tbody>\n                           {jobData.current.map((d, i) => (\n                              <tr key={i}>\n                                 {d.map((da, i) => (\n                                    <td key={i}>{da}</td>\n                                 ))}\n                              </tr>\n                           ))}\n                        </tbody>\n                        <tfoot>\n                           <tr role=\"row\">\n                              {data.jobsTable.columns.map((d, i) => (\n                                 <th key={i}>{d}</th>\n                              ))}\n                           </tr>\n                        </tfoot>\n                     </table>\n                     <div className=\"d-sm-flex text-center justify-content-between align-items-center mt-3\">\n                        <div className=\"dataTables_info\">\n                           Showing {activePag.current * sort + 1} to{\" \"}\n                           {data.jobsTable.data.length <\n                           (activePag.current + 1) * sort\n                              ? data.jobsTable.data.length\n                              : (activePag.current + 1) * sort}{\" \"}\n                           of {data.jobsTable.data.length} entries\n                        </div>\n                        <div className=\"dataTables_paginate paging_simple_numbers\">\n                           <Pagination\n                              className=\"pagination-primary pagination-box\"\n                              size=\"lg\"\n                           >\n                              <li\n                                 className=\"\"\n                                 style={{ borderRadius: \"4px\" }}\n                                 onClick={() =>\n                                    activePag.current > 0 &&\n                                    onClick(activePag.current - 1)\n                                 }\n                              >\n                                 <Link\n                                    className=\"paginate_button previous disabled\"\n                                    style={{ padding: \"10px 20px\" }}\n                                    to=\"#\"\n                                 >\n                                    Previous\n                                 </Link>\n                              </li>\n                              <span>\n                                 {jobPaggination.map((number, i) => (\n                                    <Link\n                                       key={i}\n                                       to=\"/table-datatable-basic\"\n                                       className={`paginate_button  ${\n                                          activePag.current === i\n                                             ? \"current\"\n                                             : \"\"\n                                       }`}\n                                       onClick={() => onClick(i)}\n                                    >\n                                       {number}\n                                    </Link>\n                                 ))}\n                              </span>\n\n                              <li\n                                 className=\"\"\n                                 onClick={() =>\n                                    activePag.current + 1 <\n                                       jobPaggination.length &&\n                                    onClick(activePag.current + 1)\n                                 }\n                              >\n                                 <Link\n                                    className=\"paginate_button next\"\n                                    to=\"#\"\n                                    style={{ padding: \"10px 20px\" }}\n                                 >\n                                    Next\n                                 </Link>\n                              </li>\n                           </Pagination>\n                        </div>\n                     </div>\n                  </div>\n               </Table>\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default BasicDatatable;\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/bootstrap/alertData.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Products/ProductsForm.js",["971","972"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport { useDataContext } from \"../../../contexts/DataContext\";\nimport firebaseDb from \"../../../firebase\";\nimport { storage } from \"../../../firebase\";\nimport { v4 as uuid } from \"uuid\";\n\nimport { Button } from \"react-bootstrap\";\n\nconst ProductsForm = (props) => {\n  const { categoryList, unitList } = useDataContext();\n\n  const initialFieldValues = {\n    productName: \"\",\n    category: \"\",\n    productImage: \"\",\n    price: \"\",\n    unit: \"\",\n    dateUpdated: new Date().toLocaleString(),\n    isActive: \"true\",\n  };\n\n  var [values, setValues] = useState(initialFieldValues);\n\n  useEffect(() => {\n    if (props.currentId === \"\") {\n      setViewMode(false);\n      setValues({\n        ...initialFieldValues,\n      });\n    } else {\n      setViewMode(true);\n      setValues({\n        ...props.productList[props.currentId],\n      });\n    }\n  }, [props.currentId, props.productList]);\n\n  const handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const name = target.name;\n\n    setValues({\n      ...values,\n      [name]: value,\n    });\n  };\n\n  const [viewMode, setViewMode] = useState(false);\n\n  const [imageUrl, setImageUrl] = useState();\n  const readImages = async (e) => {\n    const file = e.target.files[0];\n    const id = uuid();\n    const imagesRef = storage.ref(\"images\").child(id);\n\n    await imagesRef.put(file);\n    imagesRef.getDownloadURL().then((url) => {\n      setImageUrl(url);\n    });\n  };\n\n  if (typeof imageUrl !== \"undefined\" && imageUrl != null) {\n    values.productImage = imageUrl;\n  }\n\n  const handleFormSubmit = (event) => {\n    event.preventDefault();\n    props.addOrEdit(values);\n  };\n\n  return (\n    <Fragment>\n      {categoryList && unitList && (\n        <div className=\"row\">\n          <div className=\"col-xl-12 col-lg-12\">\n            <div className=\"card\">\n              <div className=\"card-header\">\n                <h4 className=\"card-title\">\n                  {props.currentId === \"\"\n                    ? \"Add \"\n                    : viewMode\n                    ? \"View \"\n                    : \"Edit \"}\n                  Product\n                </h4>\n                {props.currentId !== \"\" ? (\n                  <Button\n                    className=\"btn-sm btn-warning light\"\n                    onClick={() => {\n                      setViewMode(!viewMode);\n                    }}\n                  >\n                    {viewMode ? \"Edit Product\" : \"View Product\"}\n                  </Button>\n                ) : null}\n              </div>\n              <div className=\"card-body\">\n                <div className=\"basic-form\">\n                  <form onSubmit={handleFormSubmit}>\n                    <div className=\"form-row\">\n                      {values.productImage && (\n                        <>\n                          <div className=\"form-group col-md-4\">\n                            <img\n                              src={values.productImage}\n                              className=\"rounded-lg mr-2 mb-2\"\n                              width=\"100%\"\n                              alt=\"\"\n                            />\n                          </div>\n                          <div className=\"form-group col-md-8\"></div>\n                        </>\n                      )}\n                    </div>\n\n                    <div className=\"form-group row\">\n                      <label className=\"col-sm-3 col-form-label\">\n                        Product Name\n                      </label>\n                      <div className=\"col-sm-9 \">\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Name\"\n                          name=\"productName\"\n                          value={values.productName}\n                          onChange={handleInputChange}\n                          required\n                          disabled={viewMode}\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"form-group row\">\n                      <label className=\"col-sm-3 col-form-label\">\n                        Category\n                      </label>\n                      <div className=\"col-sm-9 \">\n                        <select\n                          defaultValue=\"Select Category\"\n                          id=\"inputState\"\n                          className=\"form-control\"\n                          name=\"category\"\n                          value={values.category}\n                          onChange={handleInputChange}\n                          required\n                          disabled={viewMode}\n                        >\n                          <option value=\"\">Choose Category..</option>\n                          {Object.keys(categoryList).map((id) => {\n                            return (\n                              <React.Fragment key={id}>\n                                {categoryList[id].isActive && (\n                                  <option value={categoryList[id].categoryName}>\n                                    {categoryList[id].categoryName}\n                                  </option>\n                                )}\n                              </React.Fragment>\n                            );\n                          })}\n                        </select>\n                      </div>\n                    </div>\n\n                    <div className=\"form-group row\">\n                      <label className=\"col-sm-3 col-form-label\">Unit</label>\n                      <div className=\"col-sm-9 \">\n                        <select\n                          defaultValue=\"Select Unit\"\n                          id=\"inputState\"\n                          className=\"form-control\"\n                          name=\"unit\"\n                          value={values.unit}\n                          onChange={handleInputChange}\n                          required\n                          disabled={viewMode}\n                        >\n                          <option value=\"Unit\">Choose Unit..</option>\n                          {Object.keys(unitList).map((id) => {\n                            return (\n                              <React.Fragment key={id}>\n                                {unitList[id].isActive && (\n                                  <option value={unitList[id].unitName}>\n                                    {unitList[id].unitName}\n                                  </option>\n                                )}\n                              </React.Fragment>\n                            );\n                          })}\n                        </select>\n                      </div>\n                    </div>\n\n                    <div className=\"form-group row\">\n                      <label className=\"col-sm-3 col-form-label\">Price</label>\n                      <div className=\"col-sm-9 \">\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          name=\"price\"\n                          value={values.price}\n                          onChange={handleInputChange}\n                          required\n                          disabled={viewMode}\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"form-group row\">\n                      <label className=\"col-sm-3 col-form-label\">\n                        Product Image\n                      </label>\n                      <div className=\"col-sm-9\">\n                        <input\n                          type=\"file\"\n                          accept=\"image/*\"\n                          onChange={readImages}\n                          disabled={viewMode}\n                        />\n                        <input\n                          className=\"form-control\"\n                          name=\"productImage\"\n                          value={values.productImage}\n                          onChange={handleInputChange}\n                          disabled={true}\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"form-row\">\n                      <div className=\"custom-control custom-checkbox mb-3\">\n                        <input\n                          name=\"isActive\"\n                          type=\"checkbox\"\n                          defaultChecked={values.isActive}\n                          checked={values.isActive}\n                          onChange={handleInputChange}\n                          className=\"custom-control-input\"\n                          id=\"isActiveChkBox\"\n                          disabled={viewMode}\n                        />\n                        <label\n                          className=\"custom-control-label\"\n                          htmlFor=\"isActiveChkBox\"\n                        >\n                          Is Active?\n                        </label>\n                      </div>\n                    </div>\n                    <div className=\"form-row\">\n                      <div className=\"form-group col-md-12\">\n                        <input\n                          type=\"submit\"\n                          value={props.currentId === \"\" ? \"Save\" : \"Update\"}\n                          className=\"btn btn-primary btn-block\"\n                          disabled={viewMode}\n                        />\n                      </div>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </Fragment>\n  );\n};\n\nexport default ProductsForm;\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Orders/OrdersForm.js",["973","974","975","976","977","978"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport { useDataContext } from \"../../../contexts/DataContext\";\nimport { useHistory } from \"react-router-dom\";\nimport firebaseDb from \"../../../firebase\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport { createMuiTheme } from \"@material-ui/core\";\nimport { toast } from \"react-toastify\";\n\nimport { Button, Table } from \"react-bootstrap\";\nimport Select from \"react-select\";\n\nconst OrdersForm = (props) => {\n  const history = useHistory();\n\n  var initialFieldValues = {\n    products: [],\n    notes: \"\",\n    total: 0,\n    grandTotal: 0,\n    rider: \"\",\n    deliveryLocation: \"\",\n    deliveryFee: 0,\n    dateOfDelivery: \"\",\n    customer: props.currentCustomer,\n    customerId: props.currentCustomerId,\n    dateAdded: new Date().toLocaleString(),\n    status: \"ACTIVE\",\n    paymentStatus: \"NOT PAID\",\n  };\n\n  const initialProductValues = {\n    productName: \"\",\n    productQty: 1,\n    productUnit: \"\",\n    productPrice: 0,\n    discount: 0,\n    subtotal: 0,\n    productImage: \"\",\n  };\n\n  const { productList, unitList, deliveryFeeList } = useDataContext();\n\n  var [values, setValues] = useState(initialFieldValues);\n  var [productValues, setProductValues] = useState(initialProductValues);\n  var [result, setResult] = useState([]);\n  var [currentProductId, setCurrentProductId] = useState(\"\");\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [isEditingProduct, setIsEditingProduct] = useState(false);\n\n  /*********************************\n  --- DATA MANIPULATION FUNCTIONS ---\n  ***********************************/\n\n  // Prepare data for edit\n  useEffect(() => {\n    if (props.order) {\n      setValues({\n        products: props.order.products,\n        notes: props.order.notes,\n        total: props.order.total,\n        grandTotal: props.order.grandTotal,\n        rider: props.order.rider,\n        deliveryLocation: props.order.deliveryLocation,\n        deliveryFee: props.order.deliveryFee,\n        dateOfDelivery: props.order.dateOfDelivery,\n        customer: props.order.customer,\n        customerId: props.userId,\n        dateAdded: props.order.dateAdded,\n        status: props.order.status,\n        paymentStatus: props.order.paymentStatus,\n      });\n    }\n  }, []);\n\n  //initialize values state\n  useEffect(() => {\n    if (props.currentId)\n      setValues({\n        ...props.unitList[props.currentId],\n      });\n  }, [props.currentId, props.unitList]);\n\n  // prepares products data for combobox\n  const [selectedOption, setSelectedOption] = useState();\n  const options = [];\n  if (productList) {\n    Object.keys(productList).map((id) => {\n      return options.push({\n        value: productList[id].productName,\n        label: (\n          <div>\n            <img\n              src={productList[id].productImage}\n              height=\"30px\"\n              width=\"30px\"\n              alt={productList[id].productName}\n            />{\" \"}\n            {productList[id].productName}\n          </div>\n        ),\n        product: productList[id],\n      });\n    });\n  }\n\n  // sets values of quantity, price and unit once a product is selected\n  useEffect(() => {\n    if (selectedOption) {\n      setProductValues((prev) => ({\n        ...prev,\n        productQty: selectedOption.product.quantity\n          ? selectedOption.product.quantity\n          : 1,\n        productPrice: selectedOption.product.price,\n        productUnit: selectedOption.product.unit,\n        productName: selectedOption.product.productName,\n        discount: selectedOption.product.discount\n          ? selectedOption.product.discount\n          : 0,\n        productImage: selectedOption.product.productImage,\n      }));\n    }\n  }, [selectedOption]);\n\n  // calculates subtotal and updates productValues state\n  useEffect(() => {\n    const calc =\n      Number(productValues.productQty) * Number(productValues.productPrice);\n    const discountVal = calc * (Number(productValues.discount) / 100);\n    setProductValues((prev) => ({\n      ...prev,\n      subtotal: calc - discountVal,\n    }));\n  }, [\n    productValues.productQty,\n    productValues.productPrice,\n    productValues.discount,\n  ]);\n\n  // calculates grand total and updates productValues state\n  useEffect(() => {\n    setValues((prev) => ({\n      ...prev,\n      grandTotal: Number(values.total) + Number(values.deliveryFee),\n    }));\n  }, [values.total]);\n\n  // prepares delivery data for combobox\n  const deliveryOptions = [];\n  if (deliveryFeeList) {\n    Object.keys(deliveryFeeList).map((id) => {\n      return deliveryOptions.push({\n        value: deliveryFeeList[id].location,\n        label: deliveryFeeList[id].location,\n        delivery: deliveryFeeList[id],\n      });\n    });\n  }\n\n  // updates delivery data on combobox selection\n  const [selectedDeliveryOption, setSelectedDeliveryOption] = useState({\n    value: \"Free Delivery\",\n    label: \"Free Delivery\",\n    delivery: { deliveryFee: Number(0), location: \"Free Delivery\" },\n  });\n  useEffect(() => {\n    if (selectedDeliveryOption !== null) {\n      values.deliveryFee = selectedDeliveryOption.delivery.deliveryFee;\n      setValues((prev) => ({\n        ...prev,\n        deliveryLocation: selectedDeliveryOption.delivery.location,\n        deliveryFee: selectedDeliveryOption.delivery.deliveryFee,\n        grandTotal: Number(values.total) + Number(values.deliveryFee),\n      }));\n    }\n  }, [selectedDeliveryOption]);\n\n  // add product to cart - this should update values state!\n  const addToCart = () => {\n    if (selectedOption) {\n      setValues((prev) => ({\n        ...prev,\n        deliveryFee:\n          selectedDeliveryOption.value === \"Custom\"\n            ? values.deliveryFee\n            : selectedDeliveryOption.delivery.deliveryFee,\n        deliveryLocation: selectedDeliveryOption.delivery.location,\n        total: Number(values.total) + Number(productValues.subtotal),\n        grandTotal: Number(values.total) + Number(values.deliveryFee),\n        products: [...values.products, productValues],\n      }));\n\n      toast.success(selectedOption.value + \" added to cart!\", {\n        position: \"bottom-right\",\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n\n      clearProductValues(false);\n    } else {\n      toast.error(\"Select a product first!\", {\n        position: \"bottom-right\",\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      setTimeout(async () => {}, 3000);\n    }\n  };\n\n  // reset product values form\n  const clearProductValues = (showToast) => {\n    setSelectedOption(\"\");\n    setIsEditingProduct(false);\n\n    setProductValues({\n      productName: \"\",\n      productQty: 1,\n      productUnit: \"\",\n      productPrice: 0,\n      discount: 0,\n      subtotal: 0,\n    });\n\n    if (showToast) {\n      toast.success(\"Product form cleared\", {\n        position: \"bottom-right\",\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    }\n  };\n\n  // update values on added product\n  const updateCart = () => {\n    //do update state logic\n    const index = selectedOption.index;\n    const updatedProductList = values.products.slice();\n\n    updatedProductList[index] = {\n      discount: productValues.discount,\n      productName: productValues.productName,\n      productQty: productValues.productQty,\n      productPrice: productValues.productPrice,\n      productUnit: productValues.productUnit,\n      subtotal: productValues.subtotal,\n      productImage: updatedProductList[index].productImage,\n    };\n\n    const newTotal = updatedProductList.reduce(\n      (a, b) => a + (b[\"subtotal\"] || 0),\n      0\n    );\n\n    setValues((prev) => ({\n      ...prev,\n      deliveryFee:\n        selectedDeliveryOption.value === \"Custom\"\n          ? values.deliveryFee\n          : selectedDeliveryOption.delivery.deliveryFee,\n      deliveryLocation: selectedDeliveryOption.delivery.location,\n      total: newTotal,\n      grandTotal: Number(values.total) + Number(values.deliveryFee),\n      products: updatedProductList,\n    }));\n\n    //toast\n    toast.success(\"Product updated!\", {\n      position: \"bottom-right\",\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n\n    setIsEditingProduct(false);\n    clearProductValues(false);\n  };\n\n  // remove product from cart\n  const removeFromCart = (product) => {\n    const filteredArr = values.products.filter((item) => item !== product);\n    const newTotal = filteredArr.reduce((a, b) => a + (b[\"subtotal\"] || 0), 0);\n    setValues((prev) => ({\n      ...prev,\n      products: filteredArr,\n      total: newTotal,\n      grandTotal: Number(values.total) + Number(values.deliveryFee),\n    }));\n  };\n\n  // check for delivery date change\n  useEffect(() => {\n    setValues((prev) => ({\n      ...prev,\n      dateOfDelivery: new Date(selectedDate).toLocaleDateString(\"en-US\", {\n        weekday: \"long\",\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n      }),\n    }));\n  }, [selectedDate]);\n\n  // edit product from cart\n  const editProductFromCart = (product, index) => {\n    setIsEditingProduct(true);\n\n    setSelectedOption({\n      value: product.productName,\n      label: product.productName,\n      product: {\n        price: product.productPrice,\n        unit: product.productUnit,\n        productName: product.productName,\n        quantity: product.productQty,\n        discount: product.discount,\n      },\n      index: index,\n    });\n  };\n\n  const handleInputChange = (e) => {\n    var { name, value } = e.target;\n    setProductValues({\n      ...productValues,\n      [name]: value,\n    });\n  };\n\n  const handleOrderInputChange = (e) => {\n    var { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: value,\n    });\n  };\n\n  const handleCustomDeliveryFee = (e) => {\n    var { value } = e.target;\n    setValues((prev) => ({\n      ...prev,\n      deliveryFee: value,\n      grandTotal: Number(values.total) + Number(value),\n    }));\n  };\n\n  const handlePreorder = () => {\n    const today = new Date();\n    const tomorrow = new Date(today);\n    setSelectedDate(tomorrow.setDate(tomorrow.getDate() + 1));\n    setValues((prev) => ({\n      ...prev,\n      status: \"PREORDER\",\n    }));\n    toast.success(\"Order status set as PREORDER\", {\n      position: \"bottom-left\",\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n  };\n\n  const handleActiveOrder = () => {\n    const today = new Date();\n\n    setSelectedDate(today);\n    setValues((prev) => ({\n      ...prev,\n      status: \"ACTIVE\",\n    }));\n    toast.success(\"Order status set as ACTIVE\", {\n      position: \"bottom-left\",\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n  };\n\n  const handleFormSubmit = (event) => {\n    event.preventDefault();\n    /// form validations...\n    var isValidForm = true;\n    if (!values.customer) {\n      toast.error(\"Please select a customer\", {\n        position: \"bottom-right\",\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      isValidForm = false;\n    }\n\n    if (!values.products || !productValues) {\n      toast.error(\"Please add a product\", {\n        position: \"bottom-right\",\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      isValidForm = false;\n    }\n\n    if (isValidForm) {\n      if (props.orderId) {\n        firebaseDb\n          .ref(`orders/${props.orderId}`)\n          .update({\n            products: values.products,\n            notes: values.notes,\n            total: values.total,\n            grandTotal: values.grandTotal,\n            rider: values.rider,\n            deliveryLocation: values.deliveryLocation,\n            deliveryFee: values.deliveryFee,\n            dateOfDelivery: values.dateOfDelivery,\n            customer: values.customer,\n            customerId: props.userId,\n            dateAdded: values.dateAdded,\n            status: values.status,\n            paymentStatus: values.paymentStatus,\n          })\n          .then(() => {\n            history.push({\n              pathname: \"/orders\",\n              state: {\n                isAdded: false,\n                isUpdated: true,\n              },\n            });\n          })\n          .catch((error) => {\n            toast.error(\"An error has occured: \" + error, {\n              position: \"bottom-right\",\n              autoClose: 3000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n            });\n          });\n      } else {\n        firebaseDb\n          .ref(\"orders/\")\n          .push({\n            products: values.products,\n            notes: values.notes,\n            total: values.total,\n            grandTotal: values.grandTotal,\n            rider: values.rider,\n            deliveryLocation: values.deliveryLocation,\n            deliveryFee: values.deliveryFee,\n            dateOfDelivery: values.dateOfDelivery,\n            customer: values.customer,\n            customerId: props.userId,\n            dateAdded: values.dateAdded,\n            status: values.status,\n            paymentStatus: values.paymentStatus,\n          })\n          .then(() => {\n            history.push({\n              pathname: \"/orders\",\n              state: {\n                isAdded: true,\n                isUpdated: false,\n              },\n            });\n          })\n          .catch((error) => {\n            toast.error(\"An error has occured: \" + error, {\n              position: \"bottom-right\",\n              autoClose: 3000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n            });\n          });\n      }\n    }\n  };\n\n  /// update customer data on select to values state\n  useEffect(() => {\n    setValues((prev) => ({\n      ...prev,\n      customer: props.currentCustomer,\n      customerId: props.currentCustomerId,\n    }));\n  }, [props.currentCustomer, props.currentCustomerId]);\n\n  /*********************************\n  --- STYLING ---\n  ***********************************/\n\n  // styles for combobox\n  const customStyles = {\n    option: (provided, state) => ({\n      color: state.isSelected ? \"green\" : \"\",\n      padding: 20,\n    }),\n    control: () => ({\n      // none of react-select's styles are passed to <Control />\n      width: 250,\n    }),\n    singleValue: (provided, state) => {\n      const opacity = state.isDisabled ? 0.5 : 1;\n      const transition = \"opacity 300ms\";\n\n      return { ...provided, opacity, transition };\n    },\n  };\n\n  const numberWithCommas = (x) => {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  };\n\n  if (!productList) {\n    return <p>Loading...</p>;\n  }\n\n  if (!unitList) {\n    return <p>Loading...</p>;\n  }\n\n  return (\n    <Fragment>\n      <div className=\"row\">\n        <div className=\"col-xl-12 col-lg-12\">\n          <div className=\"card\">\n            <form onSubmit={handleFormSubmit}>\n              <div className=\"card-header\">\n                <div className=\"basic-form\">\n                  <div className=\"form-row\">\n                    <div className=\"form-group col-md-6\">\n                      <label>Delivery Area</label>\n                      <Select\n                        className={\"form-control\"}\n                        defaultValue={selectedDeliveryOption}\n                        onChange={setSelectedDeliveryOption}\n                        options={deliveryOptions}\n                        styles={customStyles}\n                        components={{\n                          DropdownIndicator: () => null,\n                          IndicatorSeparator: () => null,\n                        }}\n                      />\n                    </div>\n                    <div className=\"form-group col-md-2\">\n                      <label>Delivery Fee</label>\n                      {selectedDeliveryOption.value !== \"Custom\" ? (\n                        <input\n                          type=\"number\"\n                          min={0}\n                          className=\"form-control\"\n                          placeholder=\"0\"\n                          value={values.deliveryFee}\n                          onChange={handleOrderInputChange}\n                          disabled\n                        />\n                      ) : (\n                        <input\n                          type=\"number\"\n                          min={0}\n                          className=\"form-control\"\n                          onFocus={(event) => event.target.select()}\n                          value={values.deliveryFee}\n                          onChange={handleCustomDeliveryFee}\n                        />\n                      )}\n                    </div>\n                    <div className=\"form-group col-md-4\">\n                      <label>Date of Delivery</label>\n                      {/* <DatePicker onChange={setSelectedDate} /> */}\n                      <DatePicker\n                        className=\"form-control\"\n                        selected={selectedDate}\n                        onChange={(date) => setSelectedDate(date)}\n                        minDate={new Date()}\n                      />\n                      <span className=\"pull-right\">\n                        <Button\n                          className=\"btn-xs mt-2 ml-1\"\n                          variant=\"primary light btn-square\"\n                          onClick={handleActiveOrder}\n                        >\n                          Deliver Today\n                        </Button>\n                        <Button\n                          className=\"btn-xs mt-2 ml-1\"\n                          variant=\"primary light btn-square\"\n                          onClick={handlePreorder}\n                        >\n                          Deliver Tomorrow\n                        </Button>\n                      </span>\n                    </div>\n                  </div>\n                  <div className=\"form-row \">\n                    <div className=\"form-group col-md-3\">\n                      <label>Product</label>\n                      <Select\n                        className={\"form-control\"}\n                        defaultValue={selectedOption}\n                        onChange={setSelectedOption}\n                        value={selectedOption}\n                        options={options}\n                        styles={customStyles}\n                        components={{\n                          DropdownIndicator: () => null,\n                          IndicatorSeparator: () => null,\n                        }}\n                        isDisabled={isEditingProduct}\n                      />\n                      <div className=\"searchBack\" value={result}>\n                        {result.map((result, index) => (\n                          // <a href=\"orders\" id={index}>\n                          <div className=\"searchEntry\">{result}</div>\n                          // </a>\n                        ))}\n                      </div>\n                    </div>\n                    <div className=\"form-group col mt-2 mt-sm-0\">\n                      <label>Quantity</label>\n                      <input\n                        type=\"number\"\n                        min={0}\n                        onFocus={(event) => event.target.select()}\n                        className=\"form-control\"\n                        placeholder=\"0\"\n                        name=\"productQty\"\n                        value={productValues.productQty}\n                        onChange={handleInputChange}\n                        required\n                      />\n                    </div>\n                    <div className=\"form-group col mt-2 mt-sm-0\">\n                      <label>Unit</label>\n                      <select\n                        defaultValue=\"Select Unit\"\n                        id=\"inputState\"\n                        className=\"form-control\"\n                        name=\"productUnit\"\n                        value={productValues.productUnit}\n                        onChange={handleInputChange}\n                        required\n                      >\n                        {selectedOption && (\n                          <option value=\"Unit\">\n                            {selectedOption.product.unit}\n                          </option>\n                        )}\n\n                        {Object.keys(unitList).map((id) => {\n                          return (\n                            <React.Fragment key={id}>\n                              {unitList[id].isActive === \"true\" ? (\n                                <option value={unitList[id].unitName}>\n                                  {unitList[id].unitName}\n                                </option>\n                              ) : (\n                                \"\"\n                              )}\n                            </React.Fragment>\n                          );\n                        })}\n                      </select>\n                    </div>\n                    <div className=\"form-group col mt-2 mt-sm-0\">\n                      <label>Price</label>\n                      <input\n                        type=\"number\"\n                        min={0}\n                        onFocus={(event) => event.target.select()}\n                        className=\"form-control\"\n                        placeholder=\"0\"\n                        name=\"productPrice\"\n                        value={productValues.productPrice}\n                        onChange={handleInputChange}\n                        required\n                      />\n                    </div>\n                    <div className=\"form-group col mt-2 mt-sm-0\">\n                      <label>Discount %</label>\n                      <input\n                        type=\"number\"\n                        min={0}\n                        onFocus={(event) => event.target.select()}\n                        className=\"form-control\"\n                        placeholder=\"0\"\n                        name=\"discount\"\n                        value={`${productValues.discount}`}\n                        onChange={handleInputChange}\n                        required\n                      />\n                    </div>\n                    <div className=\"form-group col mt-2 mt-sm-0\">\n                      <label>Subtotal</label>\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Subtotal\"\n                        name=\"subtotal\"\n                        value={`₱${numberWithCommas(productValues.subtotal)}`}\n                        onChange={handleInputChange}\n                        disabled\n                      />\n                    </div>\n                    <div className=\"form-group mt-sm-0\">\n                      {isEditingProduct && (\n                        <Button\n                          className=\"btn-sm mt-5 ml-1\"\n                          variant=\"primary btn-square\"\n                          onClick={updateCart}\n                        >\n                          {/* <i className=\"fa fa-check\" /> */}\n                          Update\n                        </Button>\n                      )}\n                      {!isEditingProduct && (\n                        <Button\n                          className=\"btn-sm mt-5 ml-1\"\n                          variant=\"primary light btn-square\"\n                          onClick={addToCart}\n                        >\n                          {/* <i className=\"fa fa-plus\" /> */}\n                          Add\n                        </Button>\n                      )}\n                      {selectedOption && (\n                        <Button\n                          className=\"btn-sm mt-5 ml-1\"\n                          variant=\"warning light btn-square\"\n                          onClick={clearProductValues}\n                        >\n                          {/* <i className=\"fa fa-times\" /> */}\n                          Clear\n                        </Button>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"card-body\">\n                <Table responsive hover>\n                  <thead>\n                    <tr>\n                      <th>\n                        <strong></strong>\n                      </th>\n                      <th>\n                        <strong>PRODUCT</strong>\n                      </th>\n                      <th>\n                        <strong>QUANTITY</strong>\n                      </th>\n                      <th>\n                        <strong>UNIT</strong>\n                      </th>\n                      <th>\n                        <strong>PRICE</strong>\n                      </th>\n                      <th>\n                        <strong>DISCOUNT</strong>\n                      </th>\n                      <th>\n                        <strong>SUBTOTAL</strong>\n                      </th>\n                      <th>\n                        <strong></strong>\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {values.products &&\n                      values.products.map((product, index) => {\n                        return (\n                          <tr\n                            key={index}\n                            onClick={() => {\n                              setCurrentProductId(index);\n                            }}\n                          >\n                            <td>\n                              <Button\n                                onClick={() => {\n                                  editProductFromCart(product, index);\n                                }}\n                                className=\"btn btn-primary btn-xs  mr-1\"\n                              >\n                                {/* <i className=\"fa fa-pencil\"></i> */}\n                                Edit\n                              </Button>\n                            </td>\n                            <td>\n                              <img\n                                src={product.productImage}\n                                className=\"rounded-lg mr-2\"\n                                width=\"24\"\n                                alt=\"\"\n                              />\n                              {product.productName}\n                            </td>\n                            <td>{`x${product.productQty}`}</td>\n                            <td>{product.productUnit}</td>\n                            <td>{`₱${product.productPrice}`}</td>\n                            <td>{`${product.discount}%`}</td>\n                            <td>{`₱${numberWithCommas(product.subtotal)}`}</td>\n                            <td>\n                              <Button\n                                onClick={() => removeFromCart(product)}\n                                className=\"btn btn-danger btn-xs\"\n                              >\n                                {/* <i className=\"fa fa-trash\"></i> */}\n                                Remove\n                              </Button>\n                            </td>\n                          </tr>\n                        );\n                      })}\n                  </tbody>\n                </Table>\n              </div>\n              <div className=\"card-footer\">\n                <div className=\"form-row\">\n                  <div className=\"form-group col-md-9 pr-5\">\n                    {\" \"}\n                    <label>Notes</label>\n                    <textarea\n                      className=\"form-control\"\n                      rows=\"4\"\n                      id=\"notes\"\n                      name=\"notes\"\n                      value={values.notes}\n                      onChange={handleOrderInputChange}\n                    ></textarea>\n                  </div>\n                  <div className=\"form-group col-md-3 pull-right\">\n                    <label>Total</label>\n                    <h3>₱{numberWithCommas(values.total)}</h3>\n                    <label>Delivery Fee</label>\n                    <h3>₱{numberWithCommas(values.deliveryFee)}</h3>\n                    <hr></hr>\n                    <label>Grand Total</label>\n                    <h1>₱{numberWithCommas(Number(values.grandTotal))}</h1>\n                  </div>\n                </div>\n\n                <div className=\"form-row\"></div>\n                <div className=\"form-group col-md-4\">\n                  <Button className=\"mt-4\" variant=\"primary\" type=\"submit\">\n                    {props.order ? \"Update \" : \"Save \"}Order\n                  </Button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default OrdersForm;\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Customers/AddressModal.js",["979"],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/apexcharts/RadialBar3.js",["980"],"import React, { Component } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\n\nclass ApexRedialBar3 extends React.Component {\n   constructor(props) {\n      super(props);\n\n      this.state = {\n         series: [56],\n         options: {\n            chart: {\n               height: 250,\n               type: \"radialBar\",\n               toolbar: {\n                  show: false,\n               },\n            },\n            plotOptions: {\n               radialBar: {\n                  startAngle: -100,\n                  endAngle: 260,\n                  hollow: {\n                     margin: 0,\n                     size: \"70%\",\n                     background: \"#fff\",\n                     image: undefined,\n\n                     imageOffsetX: 0,\n                     imageOffsetY: 0,\n                     position: \"front\",\n                  },\n                  track: {\n                     background: \"#e1e5ff\",\n                     strokeWidth: \"100%\",\n                     margin: 0, // margin is in pixels\n                  },\n\n                  dataLabels: {\n                     show: true,\n                     name: {\n                        offsetY: -10,\n                        show: true,\n                        color: \"#888\",\n                        fontSize: \"17px\",\n                     },\n                     value: {\n                        formatter: function (val) {\n                           return parseInt(val);\n                        },\n                        color: \"#111\",\n                        fontSize: \"36px\",\n                        show: true,\n                     },\n                  },\n               },\n            },\n            fill: {\n               type: \"gradient\",\n               gradient: {\n                  shade: \"dark\",\n                  type: \"horizontal\",\n                  shadeIntensity: 0.5,\n                  gradientToColors: [\"#5856CE\"],\n                  inverseColors: true,\n                  opacityFrom: 1,\n                  opacityTo: 1,\n                  stops: [0, 100],\n               },\n            },\n            stroke: {\n               dashArray: 4,\n            },\n            labels: [\"\"],\n         },\n      };\n   }\n\n   render() {\n      return (\n         <div id=\"chart\">\n            <ReactApexChart\n               options={this.state.options}\n               series={this.state.series}\n               type=\"radialBar\"\n               height={250}\n            />\n         </div>\n      );\n   }\n}\nexport default ApexRedialBar3;\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/apexcharts/RadialBar2.js",["981"],"import React, { Component } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\n\nclass ApexRedialBar2 extends React.Component {\n   constructor(props) {\n      super(props);\n\n      this.state = {\n         series: [73, 64, 48],\n         options: {\n            chart: {\n               type: \"radialBar\",\n               //width:320,\n               height: 370,\n               offsetY: 0,\n               offsetX: 0,\n            },\n            plotOptions: {\n               radialBar: {\n                  size: undefined,\n                  inverseOrder: false,\n                  hollow: {\n                     margin: 0,\n                     size: \"30%\",\n                     background: \"transparent\",\n                  },\n\n                  track: {\n                     show: true,\n                     background: \"#e1e5ff\",\n                     strokeWidth: \"10%\",\n                     opacity: 1,\n                     margin: 18, // margin is in pixels\n                  },\n               },\n            },\n            responsive: [\n               {\n                  breakpoint: 480,\n                  options: {\n                     chart: {\n                        offsetY: 0,\n                        offsetX: 0,\n                     },\n                     legend: {\n                        position: \"bottom\",\n                        offsetX: 0,\n                        offsetY: 0,\n                     },\n                  },\n               },\n            ],\n\n            fill: {\n               opacity: 1,\n            },\n\n            colors: [\"#FF285C\", \"#5856CE\", \"#56C7CE\"],\n            labels: [\"Instagram\", \"Facebook\", \"Twitter\"],\n            legend: {\n               fontSize: \"16px\",\n               show: false,\n            },\n         },\n      };\n   }\n\n   render() {\n      return (\n         <div id=\"chart\">\n            <ReactApexChart\n               options={this.state.options}\n               series={this.state.series}\n               type=\"radialBar\"\n               height={this.props.height ? this.props.height : 350}\n            />\n         </div>\n      );\n   }\n}\nexport default ApexRedialBar2;\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/apexcharts/NagetivePositive3.js",["982"],"import React, { Component } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\n\nclass ApexNagetivePosative3 extends React.Component {\n   constructor(props) {\n      super(props);\n\n      this.state = {\n         data: [\n            {\n               series: [\n                  {\n                     name: \"Instagram\",\n                     data: [44, 55, 41, 67, 22, 43, 44, 55],\n                  },\n                  {\n                     name: \"Facebook\",\n                     data: [13, 23, 20, 8, 13, 27, 13, 23],\n                  },\n                  {\n                     name: \"Twitter\",\n                     data: [11, 17, 15, 15, 21, 14, 11, 17],\n                  },\n               ],\n            },\n            {\n               series: [\n                  {\n                     name: \"Instagram\",\n                     data: [\n                        44,\n                        55,\n                        41,\n                        67,\n                        22,\n                        43,\n                        44,\n                        55,\n                        41,\n                        67,\n                        22,\n                        43,\n                        44,\n                        55,\n                        41,\n                     ],\n                  },\n                  {\n                     name: \"Facebook\",\n                     data: [\n                        13,\n                        23,\n                        20,\n                        8,\n                        13,\n                        27,\n                        13,\n                        23,\n                        20,\n                        8,\n                        13,\n                        27,\n                        13,\n                        23,\n                        20,\n                     ],\n                  },\n                  {\n                     name: \"Twitter\",\n                     data: [\n                        11,\n                        17,\n                        15,\n                        15,\n                        21,\n                        14,\n                        11,\n                        17,\n                        15,\n                        15,\n                        21,\n                        14,\n                        15,\n                        15,\n                        21,\n                     ],\n                  },\n               ],\n            },\n         ],\n\n         options: {\n            chart: {\n               type: \"bar\",\n               height: 250,\n               stacked: true,\n               toolbar: {\n                  show: false,\n               },\n            },\n            responsive: [\n               {\n                  breakpoint: 480,\n                  options: {\n                     legend: {\n                        position: \"bottom\",\n                        offsetX: -10,\n                        offsetY: 0,\n                     },\n                  },\n               },\n            ],\n            plotOptions: {\n               bar: {\n                  horizontal: false,\n                  columnWidth: \"20%\",\n                  endingShape: \"rounded\",\n                  backgroundRadius: 10,\n                  colors: {\n                     backgroundBarColors: [\n                        \"#f0f0f0\",\n                        \"#f0f0f0\",\n                        \"#f0f0f0\",\n                        \"#f0f0f0\",\n                        \"#f0f0f0\",\n                        \"#f0f0f0\",\n                        \"#f0f0f0\",\n                     ],\n                     backgroundBarOpacity: 1,\n                     backgroundBarRadius: 5,\n                  },\n               },\n            },\n            colors: [\"#ff285c\", \"#5856ce\", \"#56c7ce\"],\n            xaxis: {\n               show: true,\n\n               axisBorder: {\n                  show: true,\n               },\n\n               labels: {\n                  style: {\n                     colors: \"#333\",\n                     fontSize: \"13px\",\n                     fontFamily: \"Poppins\",\n                     fontWeight: 300,\n                     cssClass: \"apexcharts-xaxis-label\",\n                  },\n               },\n               crosshairs: {\n                  show: false,\n               },\n\n               categories: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n            },\n            yaxis: {\n               show: false,\n            },\n            grid: {\n               show: false,\n            },\n            toolbar: {\n               enabled: false,\n            },\n            dataLabels: {\n               enabled: false,\n            },\n            legend: {\n               position: \"bottom\",\n               offsetY: 0,\n            },\n            fill: {\n               opacity: 1,\n            },\n         },\n      };\n   }\n\n   render() {\n      return (\n         <div id=\"chart\">\n            <ReactApexChart\n               options={this.state.options}\n               series={\n                  this.state.data[this.props.data ? this.props.data : 0].series\n               }\n               type=\"bar\"\n               height={this.props.height ? this.props.height : 440}\n            />\n         </div>\n      );\n   }\n}\n\nexport default ApexNagetivePosative3;\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/Chartjs/line8.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/Chartjs/donught2.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Dashboard/SnappingToValues.js",["983","984"],"import React from \"react\";\nimport Nouislider from \"nouislider-react\";\nimport \"nouislider/distribute/nouislider.css\";\n\nconst COLORS = [\"red\", \"green\", \"blue\"];\nconst colors = [0, 0, 0];\n\nclass NonlinerSliderDashBoard extends React.Component {\n   state = {\n      color: \"rgb(127, 127, 127)\",\n      textValue: null,\n      percent: null,\n      value: 0,\n      disabled: false,\n      range: {\n         min: 0,\n         max: 100,\n      },\n      ref: null,\n   };\n\n   onSlide = (render, handle, value, un, percent) => {\n      // console.log(percent);\n      this.setState({\n         textValue: value[0].toFixed(0),\n         percent: percent[1].toFixed(0),\n      });\n   };\n   render() {\n      const { textValue, percent } = this.state;\n      return (\n         <div className=\"slider\" id=\"NonlinerSliderDashBoard\">\n            <div className=\"inputs mb-4\">\n               <input\n                  className=\"form-control fs-24 text-center text-black\"\n                  type=\"number\"\n                  min={-20}\n                  max={40}\n                  step={1}\n                  id=\"input-number\"\n                  value={`${percent ? percent : 100}.00`}\n                  defaultValue=\"100.00\"\n               />\n            </div>\n            <Nouislider\n               connect\n               start={[0, 100]}\n               behaviour=\"tap\"\n               range={{\n                  min: [0],\n                  max: [100],\n               }}\n               onSlide={this.onSlide}\n            />\n            <div className=\"d-flex align-items-center justify-content-between text-black\">\n               <span>${textValue ? textValue : 0}</span>\n               <span>${percent ? percent : 100}</span>\n            </div>\n         </div>\n      );\n   }\n}\n\nexport default NonlinerSliderDashBoard;\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Dashboard/SpendingDataTable.js",["985","986","987","988"],"import React, { useState, useRef, useEffect } from \"react\";\nimport { Table, Pagination, Badge, Dropdown } from \"react-bootstrap\";\n\nimport { Link } from \"react-router-dom\";\n\nconst SpendingDataTable = () => {\n   const [data, setData] = useState(\n      document.querySelectorAll(\"#spendingTable tbody tr\")\n   );\n   const sort = 5;\n   const activePag = useRef(0);\n   const [test, settest] = useState(0);\n\n   // Active data\n   const chageData = (frist, sec) => {\n      for (var i = 0; i < data.length; ++i) {\n         if (i >= frist && i < sec) {\n            data[i].classList.remove(\"d-none\");\n         } else {\n            data[i].classList.add(\"d-none\");\n         }\n      }\n   };\n   // use effect\n   useEffect(() => {\n      setData(document.querySelectorAll(\"#spendingTable tbody tr\"));\n      chackboxFun();\n   }, [test]);\n\n   // Active pagginarion\n   activePag.current === 0 && chageData(0, sort);\n   // paggination\n   let paggination = Array(Math.ceil(data.length / sort))\n      .fill()\n      .map((_, i) => i + 1);\n\n   // Active paggination & chage data\n   const onClick = (i) => {\n      activePag.current = i;\n      chageData(activePag.current * sort, (activePag.current + 1) * sort);\n      settest(i);\n   };\n   const chackbox = document.querySelectorAll(\".all_spending_checkbox input\");\n   const motherChackBox = document.querySelector(\".all_spending_strg input\");\n   // console.log(document.querySelectorAll(\".all_spending_strg input\")[0].checked);\n   const chackboxFun = (type) => {\n      for (let i = 0; i < chackbox.length; i++) {\n         const element = chackbox[i];\n         if (type === \"all\") {\n            if (motherChackBox.checked) {\n               element.checked = true;\n            } else {\n               element.checked = false;\n            }\n         } else {\n            if (!element.checked) {\n               motherChackBox.checked = false;\n               break;\n            } else {\n               motherChackBox.checked = true;\n            }\n         }\n      }\n   };\n\n   return (\n      <>\n         <div className=\"table-responsive\">\n            <div className=\"dataTables_wrapper no-footer\">\n               <table\n                  id=\"spendingTable\"\n                  className=\"display mb-4 dataTablesCard card-table dataTable no-footer\"\n                  style={{ width: \"100%\" }}\n               >\n                  <thead>\n                     <tr role=\"row\">\n                        <th\n                           className=\"pr-0 no-data-img all_spending_strg\"\n                           tabIndex={0}\n                           aria-controls=\"example5\"\n                           rowSpan={1}\n                           colSpan={1}\n                           aria-sort=\"ascending\"\n                           style={{ width: 32 }}\n                        >\n                           <div className=\"custom-control custom-checkbox ml-2\">\n                              <input\n                                 type=\"checkbox\"\n                                 onClick={() => chackboxFun(\"all\")}\n                                 className=\"custom-control-input\"\n                                 id=\"checkAll\"\n                                 required\n                              />\n                              <label\n                                 className=\"custom-control-label\"\n                                 htmlFor=\"checkAll\"\n                              />\n                           </div>\n                        </th>\n                        <th\n                           className=\"sorting\"\n                           tabIndex={0}\n                           aria-controls=\"example5\"\n                           rowSpan={1}\n                           colSpan={1}\n                           aria-label=\"Ads ID: activate to sort column ascending\"\n                           style={{ width: 87 }}\n                        >\n                           Ads ID\n                        </th>\n                        <th\n                           className=\"sorting\"\n                           tabIndex={0}\n                           aria-controls=\"example5\"\n                           rowSpan={1}\n                           colSpan={1}\n                           aria-label=\"Date Published: activate to sort column ascending\"\n                           style={{ width: 124 }}\n                        >\n                           Date Published\n                        </th>\n                        <th\n                           className=\"sorting\"\n                           tabIndex={0}\n                           aria-controls=\"example5\"\n                           rowSpan={1}\n                           colSpan={1}\n                           aria-label=\"Yesterday Spending: activate to sort column ascending\"\n                           style={{ width: 162 }}\n                        >\n                           Yesterday Spending\n                        </th>\n                        <th\n                           className=\"sorting\"\n                           tabIndex={0}\n                           aria-controls=\"example5\"\n                           rowSpan={1}\n                           colSpan={1}\n                           aria-label=\"Today Spending: activate to sort column ascending\"\n                           style={{ width: 130 }}\n                        >\n                           Today Spending\n                        </th>\n                        <th\n                           className=\"sorting\"\n                           tabIndex={0}\n                           aria-controls=\"example5\"\n                           rowSpan={1}\n                           colSpan={1}\n                           aria-label=\"Total Spending: activate to sort column ascending\"\n                           style={{ width: 122 }}\n                        >\n                           Total Spending\n                        </th>\n                        <th\n                           className=\"sorting\"\n                           tabIndex={0}\n                           aria-controls=\"example5\"\n                           rowSpan={1}\n                           colSpan={1}\n                           aria-label=\"Remaining: activate to sort column ascending\"\n                           style={{ width: 87 }}\n                        >\n                           Remaining\n                        </th>\n                        <th\n                           className=\"sorting\"\n                           tabIndex={0}\n                           aria-controls=\"example5\"\n                           rowSpan={1}\n                           colSpan={1}\n                           aria-label=\": activate to sort column ascending\"\n                           style={{ width: 46 }}\n                        />\n                        <th\n                           className=\"sorting\"\n                           tabIndex={0}\n                           aria-controls=\"example5\"\n                           rowSpan={1}\n                           colSpan={1}\n                           aria-label=\": activate to sort column ascending\"\n                           style={{ width: 24 }}\n                        />\n                     </tr>\n                  </thead>\n                  <tbody>\n                     <tr role=\"row\" className=\"odd\">\n                        <td className=\"pr-0 all_spending_checkbox\">\n                           <div className=\"custom-control custom-checkbox ml-2\">\n                              <input\n                                 type=\"checkbox\"\n                                 onClick={() => chackboxFun()}\n                                 className=\"custom-control-input\"\n                                 id=\"customCheckBox6\"\n                                 required\n                              />\n                              <label\n                                 className=\"custom-control-label\"\n                                 htmlFor=\"customCheckBox6\"\n                              />\n                           </div>\n                        </td>\n                        <td>#ADS01231</td>\n                        <td>26 March 2020, 12:42 AM</td>\n                        <td>\n                           <span className=\"font-w600\">$4,521.21</span>\n                        </td>\n                        <td>\n                           <span className=\"font-w600\">$5,415.51</span>\n                        </td>\n                        <td>\n                           <span className=\"font-w600\">$245,173.02</span>\n                        </td>\n                        <td>\n                           <span className=\"font-w600 text-primary\">\n                              $67,234.66\n                           </span>\n                        </td>\n                        <td>\n                           <span className=\"p-2 rounded border\">\n                              <svg\n                                 width={28}\n                                 height={28}\n                                 viewBox=\"0 0 28 28\"\n                                 fill=\"none\"\n                                 xmlns=\"http://www.w3.org/2000/svg\"\n                              >\n                                 <path\n                                    d=\"M7.875 15.75H2.625C2.14175 15.75 1.75 16.1418 1.75 16.625V25.375C1.75 25.8582 2.14175 26.25 2.625 26.25H7.875C8.35825 26.25 8.75 25.8582 8.75 25.375V16.625C8.75 16.1418 8.35825 15.75 7.875 15.75Z\"\n                                    fill=\"#52B141\"\n                                 />\n                                 <path\n                                    d=\"M25.375 8.75H20.125C19.6418 8.75 19.25 9.14175 19.25 9.625V25.375C19.25 25.8582 19.6418 26.25 20.125 26.25H25.375C25.8582 26.25 26.25 25.8582 26.25 25.375V9.625C26.25 9.14175 25.8582 8.75 25.375 8.75Z\"\n                                    fill=\"#52B141\"\n                                 />\n                                 <path\n                                    d=\"M16.625 1.75H11.375C10.8918 1.75 10.5 2.14175 10.5 2.625V25.375C10.5 25.8582 10.8918 26.25 11.375 26.25H16.625C17.1082 26.25 17.5 25.8582 17.5 25.375V2.625C17.5 2.14175 17.1082 1.75 16.625 1.75Z\"\n                                    fill=\"#52B141\"\n                                 />\n                              </svg>\n                           </span>\n                        </td>\n                        <td>\n                           <Dropdown className=\"dropdown ml-auto\">\n                              <Dropdown.Toggle\n                                 variant=\"\"\n                                 className=\"icon-false p-0 btn-link\"\n                                 data-toggle=\"dropdown\"\n                              >\n                                 <svg\n                                    width={24}\n                                    height={24}\n                                    viewBox=\"0 0 24 24\"\n                                    fill=\"none\"\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                 >\n                                    <path\n                                       d=\"M11.0005 12C11.0005 12.5523 11.4482 13 12.0005 13C12.5528 13 13.0005 12.5523 13.0005 12C13.0005 11.4477 12.5528 11 12.0005 11C11.4482 11 11.0005 11.4477 11.0005 12Z\"\n                                       stroke=\"#3E4954\"\n                                       strokeWidth={2}\n                                       strokeLinecap=\"round\"\n                                       strokeLinejoin=\"round\"\n                                    />\n                                    <path\n                                       d=\"M18.0005 12C18.0005 12.5523 18.4482 13 19.0005 13C19.5528 13 20.0005 12.5523 20.0005 12C20.0005 11.4477 19.5528 11 19.0005 11C18.4482 11 18.0005 11.4477 18.0005 12Z\"\n                                       stroke=\"#3E4954\"\n                                       strokeWidth={2}\n                                       strokeLinecap=\"round\"\n                                       strokeLinejoin=\"round\"\n                                    />\n                                    <path\n                                       d=\"M4.00049 12C4.00049 12.5523 4.4482 13 5.00049 13C5.55277 13 6.00049 12.5523 6.00049 12C6.00049 11.4477 5.55277 11 5.00049 11C4.4482 11 4.00049 11.4477 4.00049 12Z\"\n                                       stroke=\"#3E4954\"\n                                       strokeWidth={2}\n                                       strokeLinecap=\"round\"\n                                       strokeLinejoin=\"round\"\n                                    />\n                                 </svg>\n                              </Dropdown.Toggle>\n                              <Dropdown.Menu className=\"dropdown-menu dropdown-menu-right\">\n                                 <Dropdown.Item className=\"dropdown-item text-black\">\n                                    <svg\n                                       className=\"mr-3\"\n                                       width={24}\n                                       height={24}\n                                       viewBox=\"0 0 24 24\"\n                                       fill=\"none\"\n                                       xmlns=\"http://www.w3.org/2000/svg\"\n                                    >\n                                       <path\n                                          d=\"M22 11.08V12C21.9988 14.1564 21.3005 16.2547 20.0093 17.9818C18.7182 19.709 16.9033 20.9725 14.8354 21.5839C12.7674 22.1953 10.5573 22.1219 8.53447 21.3746C6.51168 20.6273 4.78465 19.2461 3.61096 17.4371C2.43727 15.628 1.87979 13.4881 2.02168 11.3363C2.16356 9.18455 2.99721 7.13631 4.39828 5.49706C5.79935 3.85781 7.69279 2.71537 9.79619 2.24013C11.8996 1.7649 14.1003 1.98232 16.07 2.85999\"\n                                          stroke=\"#209F84\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                       <path\n                                          d=\"M22 4L12 14.01L9 11.01\"\n                                          stroke=\"#209F84\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                    </svg>\n                                    Accept order\n                                 </Dropdown.Item>\n                                 <Dropdown.Item className=\"dropdown-item text-black\">\n                                    <svg\n                                       className=\"mr-3\"\n                                       width={24}\n                                       height={24}\n                                       viewBox=\"0 0 24 24\"\n                                       fill=\"none\"\n                                       xmlns=\"http://www.w3.org/2000/svg\"\n                                    >\n                                       <path\n                                          d=\"M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z\"\n                                          stroke=\"#F24242\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                       <path\n                                          d=\"M15 9L9 15\"\n                                          stroke=\"#F24242\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                       <path\n                                          d=\"M9 9L15 15\"\n                                          stroke=\"#F24242\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                    </svg>\n                                    Reject order\n                                 </Dropdown.Item>\n                                 <Dropdown.Item className=\"dropdown-item text-black\">\n                                    <svg\n                                       className=\"mr-3\"\n                                       width={24}\n                                       height={24}\n                                       viewBox=\"0 0 24 24\"\n                                       fill=\"none\"\n                                       xmlns=\"http://www.w3.org/2000/svg\"\n                                    >\n                                       <path\n                                          d=\"M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z\"\n                                          stroke=\"#6F6F6F\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                       <path\n                                          d=\"M12 16V12\"\n                                          stroke=\"#6F6F6F\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                       <path\n                                          d=\"M12 8H12.01\"\n                                          stroke=\"#6F6F6F\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                    </svg>\n                                    View Details\n                                 </Dropdown.Item>\n                              </Dropdown.Menu>\n                           </Dropdown>\n                        </td>\n                     </tr>\n                     <tr role=\"row\" className=\"even\">\n                        <td className=\"pr-0 all_spending_checkbox\">\n                           <div className=\"custom-control custom-checkbox ml-2\">\n                              <input\n                                 type=\"checkbox\"\n                                 onClick={() => chackboxFun()}\n                                 className=\"custom-control-input\"\n                                 id=\"customCheckBox7\"\n                                 required\n                              />\n                              <label\n                                 className=\"custom-control-label\"\n                                 htmlFor=\"customCheckBox7\"\n                              />\n                           </div>\n                        </td>\n                        <td>#ADS01232</td>\n                        <td>26 March 2020, 12:42 AM</td>\n                        <td>\n                           <span className=\"font-w600\">$4,521.21</span>\n                        </td>\n                        <td>\n                           <span className=\"font-w600\">$5,415.51</span>\n                        </td>\n                        <td>\n                           <span className=\"font-w600\">$245,173.02</span>\n                        </td>\n                        <td>\n                           <span className=\"font-w600 text-primary\">\n                              $67,234.66\n                           </span>\n                        </td>\n                        <td>\n                           <span className=\"p-2 rounded border\">\n                              <svg\n                                 width={28}\n                                 height={28}\n                                 viewBox=\"0 0 28 28\"\n                                 fill=\"none\"\n                                 xmlns=\"http://www.w3.org/2000/svg\"\n                              >\n                                 <path\n                                    d=\"M7.875 15.75H2.625C2.14175 15.75 1.75 16.1418 1.75 16.625V25.375C1.75 25.8582 2.14175 26.25 2.625 26.25H7.875C8.35825 26.25 8.75 25.8582 8.75 25.375V16.625C8.75 16.1418 8.35825 15.75 7.875 15.75Z\"\n                                    fill=\"#52B141\"\n                                 />\n                                 <path\n                                    d=\"M25.375 8.75H20.125C19.6418 8.75 19.25 9.14175 19.25 9.625V25.375C19.25 25.8582 19.6418 26.25 20.125 26.25H25.375C25.8582 26.25 26.25 25.8582 26.25 25.375V9.625C26.25 9.14175 25.8582 8.75 25.375 8.75Z\"\n                                    fill=\"#52B141\"\n                                 />\n                                 <path\n                                    d=\"M16.625 1.75H11.375C10.8918 1.75 10.5 2.14175 10.5 2.625V25.375C10.5 25.8582 10.8918 26.25 11.375 26.25H16.625C17.1082 26.25 17.5 25.8582 17.5 25.375V2.625C17.5 2.14175 17.1082 1.75 16.625 1.75Z\"\n                                    fill=\"#52B141\"\n                                 />\n                              </svg>\n                           </span>\n                        </td>\n                        <td>\n                           <Dropdown className=\"dropdown ml-auto\">\n                              <Dropdown.Toggle\n                                 variant=\"\"\n                                 className=\"icon-false p-0 btn-link\"\n                                 data-toggle=\"dropdown\"\n                              >\n                                 <svg\n                                    width={24}\n                                    height={24}\n                                    viewBox=\"0 0 24 24\"\n                                    fill=\"none\"\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                 >\n                                    <path\n                                       d=\"M11.0005 12C11.0005 12.5523 11.4482 13 12.0005 13C12.5528 13 13.0005 12.5523 13.0005 12C13.0005 11.4477 12.5528 11 12.0005 11C11.4482 11 11.0005 11.4477 11.0005 12Z\"\n                                       stroke=\"#3E4954\"\n                                       strokeWidth={2}\n                                       strokeLinecap=\"round\"\n                                       strokeLinejoin=\"round\"\n                                    />\n                                    <path\n                                       d=\"M18.0005 12C18.0005 12.5523 18.4482 13 19.0005 13C19.5528 13 20.0005 12.5523 20.0005 12C20.0005 11.4477 19.5528 11 19.0005 11C18.4482 11 18.0005 11.4477 18.0005 12Z\"\n                                       stroke=\"#3E4954\"\n                                       strokeWidth={2}\n                                       strokeLinecap=\"round\"\n                                       strokeLinejoin=\"round\"\n                                    />\n                                    <path\n                                       d=\"M4.00049 12C4.00049 12.5523 4.4482 13 5.00049 13C5.55277 13 6.00049 12.5523 6.00049 12C6.00049 11.4477 5.55277 11 5.00049 11C4.4482 11 4.00049 11.4477 4.00049 12Z\"\n                                       stroke=\"#3E4954\"\n                                       strokeWidth={2}\n                                       strokeLinecap=\"round\"\n                                       strokeLinejoin=\"round\"\n                                    />\n                                 </svg>\n                              </Dropdown.Toggle>\n                              <Dropdown.Menu className=\"dropdown-menu dropdown-menu-right\">\n                                 <Dropdown.Item className=\"dropdown-item text-black\">\n                                    <svg\n                                       className=\"mr-3\"\n                                       width={24}\n                                       height={24}\n                                       viewBox=\"0 0 24 24\"\n                                       fill=\"none\"\n                                       xmlns=\"http://www.w3.org/2000/svg\"\n                                    >\n                                       <path\n                                          d=\"M22 11.08V12C21.9988 14.1564 21.3005 16.2547 20.0093 17.9818C18.7182 19.709 16.9033 20.9725 14.8354 21.5839C12.7674 22.1953 10.5573 22.1219 8.53447 21.3746C6.51168 20.6273 4.78465 19.2461 3.61096 17.4371C2.43727 15.628 1.87979 13.4881 2.02168 11.3363C2.16356 9.18455 2.99721 7.13631 4.39828 5.49706C5.79935 3.85781 7.69279 2.71537 9.79619 2.24013C11.8996 1.7649 14.1003 1.98232 16.07 2.85999\"\n                                          stroke=\"#209F84\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                       <path\n                                          d=\"M22 4L12 14.01L9 11.01\"\n                                          stroke=\"#209F84\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                    </svg>\n                                    Accept order\n                                 </Dropdown.Item>\n                                 <Dropdown.Item className=\"dropdown-item text-black\">\n                                    <svg\n                                       className=\"mr-3\"\n                                       width={24}\n                                       height={24}\n                                       viewBox=\"0 0 24 24\"\n                                       fill=\"none\"\n                                       xmlns=\"http://www.w3.org/2000/svg\"\n                                    >\n                                       <path\n                                          d=\"M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z\"\n                                          stroke=\"#F24242\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                       <path\n                                          d=\"M15 9L9 15\"\n                                          stroke=\"#F24242\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                       <path\n                                          d=\"M9 9L15 15\"\n                                          stroke=\"#F24242\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                    </svg>\n                                    Reject order\n                                 </Dropdown.Item>\n                                 <Dropdown.Item className=\"dropdown-item text-black\">\n                                    <svg\n                                       className=\"mr-3\"\n                                       width={24}\n                                       height={24}\n                                       viewBox=\"0 0 24 24\"\n                                       fill=\"none\"\n                                       xmlns=\"http://www.w3.org/2000/svg\"\n                                    >\n                                       <path\n                                          d=\"M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z\"\n                                          stroke=\"#6F6F6F\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                       <path\n                                          d=\"M12 16V12\"\n                                          stroke=\"#6F6F6F\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                       <path\n                                          d=\"M12 8H12.01\"\n                                          stroke=\"#6F6F6F\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                    </svg>\n                                    View Details\n                                 </Dropdown.Item>\n                              </Dropdown.Menu>\n                           </Dropdown>\n                        </td>\n                     </tr>\n                     <tr role=\"row\" className=\"odd\">\n                        <td className=\"pr-0 all_spending_checkbox\">\n                           <div className=\"custom-control custom-checkbox ml-2\">\n                              <input\n                                 type=\"checkbox\"\n                                 onClick={() => chackboxFun()}\n                                 className=\"custom-control-input\"\n                                 id=\"customCheckBox8\"\n                                 required\n                              />\n                              <label\n                                 className=\"custom-control-label\"\n                                 htmlFor=\"customCheckBox8\"\n                              />\n                           </div>\n                        </td>\n                        <td>#ADS01233</td>\n                        <td>26 March 2020, 12:42 AM</td>\n                        <td>\n                           <span className=\"font-w600\">$4,521.21</span>\n                        </td>\n                        <td>\n                           <span className=\"font-w600\">$5,415.51</span>\n                        </td>\n                        <td>\n                           <span className=\"font-w600\">$245,173.02</span>\n                        </td>\n                        <td>\n                           <span className=\"font-w600 text-primary\">\n                              $67,234.66\n                           </span>\n                        </td>\n                        <td>\n                           <span className=\"p-2 rounded border\">\n                              <svg\n                                 width={28}\n                                 height={28}\n                                 viewBox=\"0 0 28 28\"\n                                 fill=\"none\"\n                                 xmlns=\"http://www.w3.org/2000/svg\"\n                              >\n                                 <path\n                                    d=\"M7.875 15.75H2.625C2.14175 15.75 1.75 16.1418 1.75 16.625V25.375C1.75 25.8582 2.14175 26.25 2.625 26.25H7.875C8.35825 26.25 8.75 25.8582 8.75 25.375V16.625C8.75 16.1418 8.35825 15.75 7.875 15.75Z\"\n                                    fill=\"#52B141\"\n                                 />\n                                 <path\n                                    d=\"M25.375 8.75H20.125C19.6418 8.75 19.25 9.14175 19.25 9.625V25.375C19.25 25.8582 19.6418 26.25 20.125 26.25H25.375C25.8582 26.25 26.25 25.8582 26.25 25.375V9.625C26.25 9.14175 25.8582 8.75 25.375 8.75Z\"\n                                    fill=\"#52B141\"\n                                 />\n                                 <path\n                                    d=\"M16.625 1.75H11.375C10.8918 1.75 10.5 2.14175 10.5 2.625V25.375C10.5 25.8582 10.8918 26.25 11.375 26.25H16.625C17.1082 26.25 17.5 25.8582 17.5 25.375V2.625C17.5 2.14175 17.1082 1.75 16.625 1.75Z\"\n                                    fill=\"#52B141\"\n                                 />\n                              </svg>\n                           </span>\n                        </td>\n                        <td>\n                           <Dropdown className=\"dropdown ml-auto\">\n                              <Dropdown.Toggle\n                                 variant=\"\"\n                                 className=\"icon-false p-0 btn-link\"\n                                 data-toggle=\"dropdown\"\n                              >\n                                 <svg\n                                    width={24}\n                                    height={24}\n                                    viewBox=\"0 0 24 24\"\n                                    fill=\"none\"\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                 >\n                                    <path\n                                       d=\"M11.0005 12C11.0005 12.5523 11.4482 13 12.0005 13C12.5528 13 13.0005 12.5523 13.0005 12C13.0005 11.4477 12.5528 11 12.0005 11C11.4482 11 11.0005 11.4477 11.0005 12Z\"\n                                       stroke=\"#3E4954\"\n                                       strokeWidth={2}\n                                       strokeLinecap=\"round\"\n                                       strokeLinejoin=\"round\"\n                                    />\n                                    <path\n                                       d=\"M18.0005 12C18.0005 12.5523 18.4482 13 19.0005 13C19.5528 13 20.0005 12.5523 20.0005 12C20.0005 11.4477 19.5528 11 19.0005 11C18.4482 11 18.0005 11.4477 18.0005 12Z\"\n                                       stroke=\"#3E4954\"\n                                       strokeWidth={2}\n                                       strokeLinecap=\"round\"\n                                       strokeLinejoin=\"round\"\n                                    />\n                                    <path\n                                       d=\"M4.00049 12C4.00049 12.5523 4.4482 13 5.00049 13C5.55277 13 6.00049 12.5523 6.00049 12C6.00049 11.4477 5.55277 11 5.00049 11C4.4482 11 4.00049 11.4477 4.00049 12Z\"\n                                       stroke=\"#3E4954\"\n                                       strokeWidth={2}\n                                       strokeLinecap=\"round\"\n                                       strokeLinejoin=\"round\"\n                                    />\n                                 </svg>\n                              </Dropdown.Toggle>\n                              <Dropdown.Menu className=\"dropdown-menu dropdown-menu-right\">\n                                 <Dropdown.Item className=\"dropdown-item text-black\">\n                                    <svg\n                                       className=\"mr-3\"\n                                       width={24}\n                                       height={24}\n                                       viewBox=\"0 0 24 24\"\n                                       fill=\"none\"\n                                       xmlns=\"http://www.w3.org/2000/svg\"\n                                    >\n                                       <path\n                                          d=\"M22 11.08V12C21.9988 14.1564 21.3005 16.2547 20.0093 17.9818C18.7182 19.709 16.9033 20.9725 14.8354 21.5839C12.7674 22.1953 10.5573 22.1219 8.53447 21.3746C6.51168 20.6273 4.78465 19.2461 3.61096 17.4371C2.43727 15.628 1.87979 13.4881 2.02168 11.3363C2.16356 9.18455 2.99721 7.13631 4.39828 5.49706C5.79935 3.85781 7.69279 2.71537 9.79619 2.24013C11.8996 1.7649 14.1003 1.98232 16.07 2.85999\"\n                                          stroke=\"#209F84\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                       <path\n                                          d=\"M22 4L12 14.01L9 11.01\"\n                                          stroke=\"#209F84\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                    </svg>\n                                    Accept order\n                                 </Dropdown.Item>\n                                 <Dropdown.Item className=\"dropdown-item text-black\">\n                                    <svg\n                                       className=\"mr-3\"\n                                       width={24}\n                                       height={24}\n                                       viewBox=\"0 0 24 24\"\n                                       fill=\"none\"\n                                       xmlns=\"http://www.w3.org/2000/svg\"\n                                    >\n                                       <path\n                                          d=\"M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z\"\n                                          stroke=\"#F24242\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                       <path\n                                          d=\"M15 9L9 15\"\n                                          stroke=\"#F24242\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                       <path\n                                          d=\"M9 9L15 15\"\n                                          stroke=\"#F24242\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                    </svg>\n                                    Reject order\n                                 </Dropdown.Item>\n                                 <Dropdown.Item className=\"dropdown-item text-black\">\n                                    <svg\n                                       className=\"mr-3\"\n                                       width={24}\n                                       height={24}\n                                       viewBox=\"0 0 24 24\"\n                                       fill=\"none\"\n                                       xmlns=\"http://www.w3.org/2000/svg\"\n                                    >\n                                       <path\n                                          d=\"M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z\"\n                                          stroke=\"#6F6F6F\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                       <path\n                                          d=\"M12 16V12\"\n                                          stroke=\"#6F6F6F\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                       <path\n                                          d=\"M12 8H12.01\"\n                                          stroke=\"#6F6F6F\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                    </svg>\n                                    View Details\n                                 </Dropdown.Item>\n                              </Dropdown.Menu>\n                           </Dropdown>\n                        </td>\n                     </tr>\n                     <tr role=\"row\" className=\"even\">\n                        <td className=\"pr-0 all_spending_checkbox\">\n                           <div className=\"custom-control custom-checkbox ml-2\">\n                              <input\n                                 type=\"checkbox\"\n                                 onClick={() => chackboxFun()}\n                                 className=\"custom-control-input\"\n                                 id=\"customCheckBox9\"\n                                 required\n                              />\n                              <label\n                                 className=\"custom-control-label\"\n                                 htmlFor=\"customCheckBox9\"\n                              />\n                           </div>\n                        </td>\n                        <td>#ADS01234</td>\n                        <td>26 March 2020, 12:42 AM</td>\n                        <td>\n                           <span className=\"font-w600\">$4,521.21</span>\n                        </td>\n                        <td>\n                           <span className=\"font-w600\">$5,415.51</span>\n                        </td>\n                        <td>\n                           <span className=\"font-w600\">$245,173.02</span>\n                        </td>\n                        <td>\n                           <span className=\"font-w600 text-primary\">\n                              $67,234.66\n                           </span>\n                        </td>\n                        <td>\n                           <span className=\"p-2 rounded border\">\n                              <svg\n                                 width={28}\n                                 height={28}\n                                 viewBox=\"0 0 28 28\"\n                                 fill=\"none\"\n                                 xmlns=\"http://www.w3.org/2000/svg\"\n                              >\n                                 <path\n                                    d=\"M7.875 15.75H2.625C2.14175 15.75 1.75 16.1418 1.75 16.625V25.375C1.75 25.8582 2.14175 26.25 2.625 26.25H7.875C8.35825 26.25 8.75 25.8582 8.75 25.375V16.625C8.75 16.1418 8.35825 15.75 7.875 15.75Z\"\n                                    fill=\"#52B141\"\n                                 />\n                                 <path\n                                    d=\"M25.375 8.75H20.125C19.6418 8.75 19.25 9.14175 19.25 9.625V25.375C19.25 25.8582 19.6418 26.25 20.125 26.25H25.375C25.8582 26.25 26.25 25.8582 26.25 25.375V9.625C26.25 9.14175 25.8582 8.75 25.375 8.75Z\"\n                                    fill=\"#52B141\"\n                                 />\n                                 <path\n                                    d=\"M16.625 1.75H11.375C10.8918 1.75 10.5 2.14175 10.5 2.625V25.375C10.5 25.8582 10.8918 26.25 11.375 26.25H16.625C17.1082 26.25 17.5 25.8582 17.5 25.375V2.625C17.5 2.14175 17.1082 1.75 16.625 1.75Z\"\n                                    fill=\"#52B141\"\n                                 />\n                              </svg>\n                           </span>\n                        </td>\n                        <td>\n                           <Dropdown className=\"dropdown ml-auto\">\n                              <Dropdown.Toggle\n                                 variant=\"\"\n                                 className=\"icon-false p-0 btn-link\"\n                                 data-toggle=\"dropdown\"\n                              >\n                                 <svg\n                                    width={24}\n                                    height={24}\n                                    viewBox=\"0 0 24 24\"\n                                    fill=\"none\"\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                 >\n                                    <path\n                                       d=\"M11.0005 12C11.0005 12.5523 11.4482 13 12.0005 13C12.5528 13 13.0005 12.5523 13.0005 12C13.0005 11.4477 12.5528 11 12.0005 11C11.4482 11 11.0005 11.4477 11.0005 12Z\"\n                                       stroke=\"#3E4954\"\n                                       strokeWidth={2}\n                                       strokeLinecap=\"round\"\n                                       strokeLinejoin=\"round\"\n                                    />\n                                    <path\n                                       d=\"M18.0005 12C18.0005 12.5523 18.4482 13 19.0005 13C19.5528 13 20.0005 12.5523 20.0005 12C20.0005 11.4477 19.5528 11 19.0005 11C18.4482 11 18.0005 11.4477 18.0005 12Z\"\n                                       stroke=\"#3E4954\"\n                                       strokeWidth={2}\n                                       strokeLinecap=\"round\"\n                                       strokeLinejoin=\"round\"\n                                    />\n                                    <path\n                                       d=\"M4.00049 12C4.00049 12.5523 4.4482 13 5.00049 13C5.55277 13 6.00049 12.5523 6.00049 12C6.00049 11.4477 5.55277 11 5.00049 11C4.4482 11 4.00049 11.4477 4.00049 12Z\"\n                                       stroke=\"#3E4954\"\n                                       strokeWidth={2}\n                                       strokeLinecap=\"round\"\n                                       strokeLinejoin=\"round\"\n                                    />\n                                 </svg>\n                              </Dropdown.Toggle>\n                              <Dropdown.Menu className=\"dropdown-menu dropdown-menu-right\">\n                                 <Dropdown.Item className=\"dropdown-item text-black\">\n                                    <svg\n                                       className=\"mr-3\"\n                                       width={24}\n                                       height={24}\n                                       viewBox=\"0 0 24 24\"\n                                       fill=\"none\"\n                                       xmlns=\"http://www.w3.org/2000/svg\"\n                                    >\n                                       <path\n                                          d=\"M22 11.08V12C21.9988 14.1564 21.3005 16.2547 20.0093 17.9818C18.7182 19.709 16.9033 20.9725 14.8354 21.5839C12.7674 22.1953 10.5573 22.1219 8.53447 21.3746C6.51168 20.6273 4.78465 19.2461 3.61096 17.4371C2.43727 15.628 1.87979 13.4881 2.02168 11.3363C2.16356 9.18455 2.99721 7.13631 4.39828 5.49706C5.79935 3.85781 7.69279 2.71537 9.79619 2.24013C11.8996 1.7649 14.1003 1.98232 16.07 2.85999\"\n                                          stroke=\"#209F84\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                       <path\n                                          d=\"M22 4L12 14.01L9 11.01\"\n                                          stroke=\"#209F84\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                    </svg>\n                                    Accept order\n                                 </Dropdown.Item>\n                                 <Dropdown.Item className=\"dropdown-item text-black\">\n                                    <svg\n                                       className=\"mr-3\"\n                                       width={24}\n                                       height={24}\n                                       viewBox=\"0 0 24 24\"\n                                       fill=\"none\"\n                                       xmlns=\"http://www.w3.org/2000/svg\"\n                                    >\n                                       <path\n                                          d=\"M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z\"\n                                          stroke=\"#F24242\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                       <path\n                                          d=\"M15 9L9 15\"\n                                          stroke=\"#F24242\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                       <path\n                                          d=\"M9 9L15 15\"\n                                          stroke=\"#F24242\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                    </svg>\n                                    Reject order\n                                 </Dropdown.Item>\n                                 <Dropdown.Item className=\"dropdown-item text-black\">\n                                    <svg\n                                       className=\"mr-3\"\n                                       width={24}\n                                       height={24}\n                                       viewBox=\"0 0 24 24\"\n                                       fill=\"none\"\n                                       xmlns=\"http://www.w3.org/2000/svg\"\n                                    >\n                                       <path\n                                          d=\"M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z\"\n                                          stroke=\"#6F6F6F\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                       <path\n                                          d=\"M12 16V12\"\n                                          stroke=\"#6F6F6F\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                       <path\n                                          d=\"M12 8H12.01\"\n                                          stroke=\"#6F6F6F\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                    </svg>\n                                    View Details\n                                 </Dropdown.Item>\n                              </Dropdown.Menu>\n                           </Dropdown>\n                        </td>\n                     </tr>\n                     <tr role=\"row\" className=\"odd\">\n                        <td className=\"pr-0 all_spending_checkbox\">\n                           <div className=\"custom-control custom-checkbox ml-2\">\n                              <input\n                                 type=\"checkbox\"\n                                 onClick={() => chackboxFun()}\n                                 className=\"custom-control-input\"\n                                 id=\"customCheckBox71\"\n                                 required\n                              />\n                              <label\n                                 className=\"custom-control-label\"\n                                 htmlFor=\"customCheckBox71\"\n                              />\n                           </div>\n                        </td>\n                        <td>#ADS01235</td>\n                        <td>26 March 2020, 12:42 AM</td>\n                        <td>\n                           <span className=\"font-w600\">$4,521.21</span>\n                        </td>\n                        <td>\n                           <span className=\"font-w600\">$5,415.51</span>\n                        </td>\n                        <td>\n                           <span className=\"font-w600\">$245,173.02</span>\n                        </td>\n                        <td>\n                           <span className=\"font-w600 text-primary\">\n                              $67,234.66\n                           </span>\n                        </td>\n                        <td>\n                           <span className=\"p-2 rounded border\">\n                              <svg\n                                 width={28}\n                                 height={28}\n                                 viewBox=\"0 0 28 28\"\n                                 fill=\"none\"\n                                 xmlns=\"http://www.w3.org/2000/svg\"\n                              >\n                                 <path\n                                    d=\"M7.875 15.75H2.625C2.14175 15.75 1.75 16.1418 1.75 16.625V25.375C1.75 25.8582 2.14175 26.25 2.625 26.25H7.875C8.35825 26.25 8.75 25.8582 8.75 25.375V16.625C8.75 16.1418 8.35825 15.75 7.875 15.75Z\"\n                                    fill=\"#52B141\"\n                                 />\n                                 <path\n                                    d=\"M25.375 8.75H20.125C19.6418 8.75 19.25 9.14175 19.25 9.625V25.375C19.25 25.8582 19.6418 26.25 20.125 26.25H25.375C25.8582 26.25 26.25 25.8582 26.25 25.375V9.625C26.25 9.14175 25.8582 8.75 25.375 8.75Z\"\n                                    fill=\"#52B141\"\n                                 />\n                                 <path\n                                    d=\"M16.625 1.75H11.375C10.8918 1.75 10.5 2.14175 10.5 2.625V25.375C10.5 25.8582 10.8918 26.25 11.375 26.25H16.625C17.1082 26.25 17.5 25.8582 17.5 25.375V2.625C17.5 2.14175 17.1082 1.75 16.625 1.75Z\"\n                                    fill=\"#52B141\"\n                                 />\n                              </svg>\n                           </span>\n                        </td>\n                        <td>\n                           <Dropdown className=\"dropdown ml-auto\">\n                              <Dropdown.Toggle\n                                 variant=\"\"\n                                 className=\"icon-false p-0 btn-link\"\n                                 data-toggle=\"dropdown\"\n                              >\n                                 <svg\n                                    width={24}\n                                    height={24}\n                                    viewBox=\"0 0 24 24\"\n                                    fill=\"none\"\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                 >\n                                    <path\n                                       d=\"M11.0005 12C11.0005 12.5523 11.4482 13 12.0005 13C12.5528 13 13.0005 12.5523 13.0005 12C13.0005 11.4477 12.5528 11 12.0005 11C11.4482 11 11.0005 11.4477 11.0005 12Z\"\n                                       stroke=\"#3E4954\"\n                                       strokeWidth={2}\n                                       strokeLinecap=\"round\"\n                                       strokeLinejoin=\"round\"\n                                    />\n                                    <path\n                                       d=\"M18.0005 12C18.0005 12.5523 18.4482 13 19.0005 13C19.5528 13 20.0005 12.5523 20.0005 12C20.0005 11.4477 19.5528 11 19.0005 11C18.4482 11 18.0005 11.4477 18.0005 12Z\"\n                                       stroke=\"#3E4954\"\n                                       strokeWidth={2}\n                                       strokeLinecap=\"round\"\n                                       strokeLinejoin=\"round\"\n                                    />\n                                    <path\n                                       d=\"M4.00049 12C4.00049 12.5523 4.4482 13 5.00049 13C5.55277 13 6.00049 12.5523 6.00049 12C6.00049 11.4477 5.55277 11 5.00049 11C4.4482 11 4.00049 11.4477 4.00049 12Z\"\n                                       stroke=\"#3E4954\"\n                                       strokeWidth={2}\n                                       strokeLinecap=\"round\"\n                                       strokeLinejoin=\"round\"\n                                    />\n                                 </svg>\n                              </Dropdown.Toggle>\n                              <Dropdown.Menu className=\"dropdown-menu dropdown-menu-right\">\n                                 <Dropdown.Item className=\"dropdown-item text-black\">\n                                    <svg\n                                       className=\"mr-3\"\n                                       width={24}\n                                       height={24}\n                                       viewBox=\"0 0 24 24\"\n                                       fill=\"none\"\n                                       xmlns=\"http://www.w3.org/2000/svg\"\n                                    >\n                                       <path\n                                          d=\"M22 11.08V12C21.9988 14.1564 21.3005 16.2547 20.0093 17.9818C18.7182 19.709 16.9033 20.9725 14.8354 21.5839C12.7674 22.1953 10.5573 22.1219 8.53447 21.3746C6.51168 20.6273 4.78465 19.2461 3.61096 17.4371C2.43727 15.628 1.87979 13.4881 2.02168 11.3363C2.16356 9.18455 2.99721 7.13631 4.39828 5.49706C5.79935 3.85781 7.69279 2.71537 9.79619 2.24013C11.8996 1.7649 14.1003 1.98232 16.07 2.85999\"\n                                          stroke=\"#209F84\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                       <path\n                                          d=\"M22 4L12 14.01L9 11.01\"\n                                          stroke=\"#209F84\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                    </svg>\n                                    Accept order\n                                 </Dropdown.Item>\n                                 <Dropdown.Item className=\"dropdown-item text-black\">\n                                    <svg\n                                       className=\"mr-3\"\n                                       width={24}\n                                       height={24}\n                                       viewBox=\"0 0 24 24\"\n                                       fill=\"none\"\n                                       xmlns=\"http://www.w3.org/2000/svg\"\n                                    >\n                                       <path\n                                          d=\"M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z\"\n                                          stroke=\"#F24242\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                       <path\n                                          d=\"M15 9L9 15\"\n                                          stroke=\"#F24242\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                       <path\n                                          d=\"M9 9L15 15\"\n                                          stroke=\"#F24242\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                    </svg>\n                                    Reject order\n                                 </Dropdown.Item>\n                                 <Dropdown.Item className=\"dropdown-item text-black\">\n                                    <svg\n                                       className=\"mr-3\"\n                                       width={24}\n                                       height={24}\n                                       viewBox=\"0 0 24 24\"\n                                       fill=\"none\"\n                                       xmlns=\"http://www.w3.org/2000/svg\"\n                                    >\n                                       <path\n                                          d=\"M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z\"\n                                          stroke=\"#6F6F6F\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                       <path\n                                          d=\"M12 16V12\"\n                                          stroke=\"#6F6F6F\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                       <path\n                                          d=\"M12 8H12.01\"\n                                          stroke=\"#6F6F6F\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                    </svg>\n                                    View Details\n                                 </Dropdown.Item>\n                              </Dropdown.Menu>\n                           </Dropdown>\n                        </td>\n                     </tr>\n                     <tr role=\"row\" className=\"even\">\n                        <td className=\"pr-0 all_spending_checkbox\">\n                           <div className=\"custom-control custom-checkbox ml-2\">\n                              <input\n                                 type=\"checkbox\"\n                                 onClick={() => chackboxFun()}\n                                 className=\"custom-control-input\"\n                                 id=\"customCheckBox72\"\n                                 required\n                              />\n                              <label\n                                 className=\"custom-control-label\"\n                                 htmlFor=\"customCheckBox72\"\n                              />\n                           </div>\n                        </td>\n                        <td>#ADS01236</td>\n                        <td>26 March 2020, 12:42 AM</td>\n                        <td>\n                           <span className=\"font-w600\">$4,521.21</span>\n                        </td>\n                        <td>\n                           <span className=\"font-w600\">$5,415.51</span>\n                        </td>\n                        <td>\n                           <span className=\"font-w600\">$245,173.02</span>\n                        </td>\n                        <td>\n                           <span className=\"font-w600 text-primary\">\n                              $67,234.66\n                           </span>\n                        </td>\n                        <td>\n                           <span className=\"p-2 rounded border\">\n                              <svg\n                                 width={28}\n                                 height={28}\n                                 viewBox=\"0 0 28 28\"\n                                 fill=\"none\"\n                                 xmlns=\"http://www.w3.org/2000/svg\"\n                              >\n                                 <path\n                                    d=\"M7.875 15.75H2.625C2.14175 15.75 1.75 16.1418 1.75 16.625V25.375C1.75 25.8582 2.14175 26.25 2.625 26.25H7.875C8.35825 26.25 8.75 25.8582 8.75 25.375V16.625C8.75 16.1418 8.35825 15.75 7.875 15.75Z\"\n                                    fill=\"#52B141\"\n                                 />\n                                 <path\n                                    d=\"M25.375 8.75H20.125C19.6418 8.75 19.25 9.14175 19.25 9.625V25.375C19.25 25.8582 19.6418 26.25 20.125 26.25H25.375C25.8582 26.25 26.25 25.8582 26.25 25.375V9.625C26.25 9.14175 25.8582 8.75 25.375 8.75Z\"\n                                    fill=\"#52B141\"\n                                 />\n                                 <path\n                                    d=\"M16.625 1.75H11.375C10.8918 1.75 10.5 2.14175 10.5 2.625V25.375C10.5 25.8582 10.8918 26.25 11.375 26.25H16.625C17.1082 26.25 17.5 25.8582 17.5 25.375V2.625C17.5 2.14175 17.1082 1.75 16.625 1.75Z\"\n                                    fill=\"#52B141\"\n                                 />\n                              </svg>\n                           </span>\n                        </td>\n                        <td>\n                           <Dropdown className=\"dropdown ml-auto\">\n                              <Dropdown.Toggle\n                                 variant=\"\"\n                                 className=\"icon-false p-0 btn-link\"\n                                 data-toggle=\"dropdown\"\n                              >\n                                 <svg\n                                    width={24}\n                                    height={24}\n                                    viewBox=\"0 0 24 24\"\n                                    fill=\"none\"\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                 >\n                                    <path\n                                       d=\"M11.0005 12C11.0005 12.5523 11.4482 13 12.0005 13C12.5528 13 13.0005 12.5523 13.0005 12C13.0005 11.4477 12.5528 11 12.0005 11C11.4482 11 11.0005 11.4477 11.0005 12Z\"\n                                       stroke=\"#3E4954\"\n                                       strokeWidth={2}\n                                       strokeLinecap=\"round\"\n                                       strokeLinejoin=\"round\"\n                                    />\n                                    <path\n                                       d=\"M18.0005 12C18.0005 12.5523 18.4482 13 19.0005 13C19.5528 13 20.0005 12.5523 20.0005 12C20.0005 11.4477 19.5528 11 19.0005 11C18.4482 11 18.0005 11.4477 18.0005 12Z\"\n                                       stroke=\"#3E4954\"\n                                       strokeWidth={2}\n                                       strokeLinecap=\"round\"\n                                       strokeLinejoin=\"round\"\n                                    />\n                                    <path\n                                       d=\"M4.00049 12C4.00049 12.5523 4.4482 13 5.00049 13C5.55277 13 6.00049 12.5523 6.00049 12C6.00049 11.4477 5.55277 11 5.00049 11C4.4482 11 4.00049 11.4477 4.00049 12Z\"\n                                       stroke=\"#3E4954\"\n                                       strokeWidth={2}\n                                       strokeLinecap=\"round\"\n                                       strokeLinejoin=\"round\"\n                                    />\n                                 </svg>\n                              </Dropdown.Toggle>\n                              <Dropdown.Menu className=\"dropdown-menu dropdown-menu-right\">\n                                 <Dropdown.Item className=\"dropdown-item text-black\">\n                                    <svg\n                                       className=\"mr-3\"\n                                       width={24}\n                                       height={24}\n                                       viewBox=\"0 0 24 24\"\n                                       fill=\"none\"\n                                       xmlns=\"http://www.w3.org/2000/svg\"\n                                    >\n                                       <path\n                                          d=\"M22 11.08V12C21.9988 14.1564 21.3005 16.2547 20.0093 17.9818C18.7182 19.709 16.9033 20.9725 14.8354 21.5839C12.7674 22.1953 10.5573 22.1219 8.53447 21.3746C6.51168 20.6273 4.78465 19.2461 3.61096 17.4371C2.43727 15.628 1.87979 13.4881 2.02168 11.3363C2.16356 9.18455 2.99721 7.13631 4.39828 5.49706C5.79935 3.85781 7.69279 2.71537 9.79619 2.24013C11.8996 1.7649 14.1003 1.98232 16.07 2.85999\"\n                                          stroke=\"#209F84\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                       <path\n                                          d=\"M22 4L12 14.01L9 11.01\"\n                                          stroke=\"#209F84\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                    </svg>\n                                    Accept order\n                                 </Dropdown.Item>\n                                 <Dropdown.Item className=\"dropdown-item text-black\">\n                                    <svg\n                                       className=\"mr-3\"\n                                       width={24}\n                                       height={24}\n                                       viewBox=\"0 0 24 24\"\n                                       fill=\"none\"\n                                       xmlns=\"http://www.w3.org/2000/svg\"\n                                    >\n                                       <path\n                                          d=\"M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z\"\n                                          stroke=\"#F24242\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                       <path\n                                          d=\"M15 9L9 15\"\n                                          stroke=\"#F24242\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                       <path\n                                          d=\"M9 9L15 15\"\n                                          stroke=\"#F24242\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                    </svg>\n                                    Reject order\n                                 </Dropdown.Item>\n                                 <Dropdown.Item className=\"dropdown-item text-black\">\n                                    <svg\n                                       className=\"mr-3\"\n                                       width={24}\n                                       height={24}\n                                       viewBox=\"0 0 24 24\"\n                                       fill=\"none\"\n                                       xmlns=\"http://www.w3.org/2000/svg\"\n                                    >\n                                       <path\n                                          d=\"M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z\"\n                                          stroke=\"#6F6F6F\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                       <path\n                                          d=\"M12 16V12\"\n                                          stroke=\"#6F6F6F\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                       <path\n                                          d=\"M12 8H12.01\"\n                                          stroke=\"#6F6F6F\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                    </svg>\n                                    View Details\n                                 </Dropdown.Item>\n                              </Dropdown.Menu>\n                           </Dropdown>\n                        </td>\n                     </tr>\n                     <tr role=\"row\" className=\"odd\">\n                        <td className=\"pr-0 all_spending_checkbox\">\n                           <div className=\"custom-control custom-checkbox ml-2\">\n                              <input\n                                 type=\"checkbox\"\n                                 onClick={() => chackboxFun()}\n                                 className=\"custom-control-input\"\n                                 id=\"customCheckBox76\"\n                                 required\n                              />\n                              <label\n                                 className=\"custom-control-label\"\n                                 htmlFor=\"customCheckBox76\"\n                              />\n                           </div>\n                        </td>\n                        <td>#ADS01237</td>\n                        <td>26 March 2020, 12:42 AM</td>\n                        <td>\n                           <span className=\"font-w600\">$4,521.21</span>\n                        </td>\n                        <td>\n                           <span className=\"font-w600\">$5,415.51</span>\n                        </td>\n                        <td>\n                           <span className=\"font-w600\">$245,173.02</span>\n                        </td>\n                        <td>\n                           <span className=\"font-w600 text-primary\">\n                              $67,234.66\n                           </span>\n                        </td>\n                        <td>\n                           <span className=\"p-2 rounded border\">\n                              <svg\n                                 width={28}\n                                 height={28}\n                                 viewBox=\"0 0 28 28\"\n                                 fill=\"none\"\n                                 xmlns=\"http://www.w3.org/2000/svg\"\n                              >\n                                 <path\n                                    d=\"M7.875 15.75H2.625C2.14175 15.75 1.75 16.1418 1.75 16.625V25.375C1.75 25.8582 2.14175 26.25 2.625 26.25H7.875C8.35825 26.25 8.75 25.8582 8.75 25.375V16.625C8.75 16.1418 8.35825 15.75 7.875 15.75Z\"\n                                    fill=\"#52B141\"\n                                 />\n                                 <path\n                                    d=\"M25.375 8.75H20.125C19.6418 8.75 19.25 9.14175 19.25 9.625V25.375C19.25 25.8582 19.6418 26.25 20.125 26.25H25.375C25.8582 26.25 26.25 25.8582 26.25 25.375V9.625C26.25 9.14175 25.8582 8.75 25.375 8.75Z\"\n                                    fill=\"#52B141\"\n                                 />\n                                 <path\n                                    d=\"M16.625 1.75H11.375C10.8918 1.75 10.5 2.14175 10.5 2.625V25.375C10.5 25.8582 10.8918 26.25 11.375 26.25H16.625C17.1082 26.25 17.5 25.8582 17.5 25.375V2.625C17.5 2.14175 17.1082 1.75 16.625 1.75Z\"\n                                    fill=\"#52B141\"\n                                 />\n                              </svg>\n                           </span>\n                        </td>\n                        <td>\n                           <Dropdown className=\"dropdown ml-auto\">\n                              <Dropdown.Toggle\n                                 variant=\"\"\n                                 className=\"icon-false p-0 btn-link\"\n                                 data-toggle=\"dropdown\"\n                              >\n                                 <svg\n                                    width={24}\n                                    height={24}\n                                    viewBox=\"0 0 24 24\"\n                                    fill=\"none\"\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                 >\n                                    <path\n                                       d=\"M11.0005 12C11.0005 12.5523 11.4482 13 12.0005 13C12.5528 13 13.0005 12.5523 13.0005 12C13.0005 11.4477 12.5528 11 12.0005 11C11.4482 11 11.0005 11.4477 11.0005 12Z\"\n                                       stroke=\"#3E4954\"\n                                       strokeWidth={2}\n                                       strokeLinecap=\"round\"\n                                       strokeLinejoin=\"round\"\n                                    />\n                                    <path\n                                       d=\"M18.0005 12C18.0005 12.5523 18.4482 13 19.0005 13C19.5528 13 20.0005 12.5523 20.0005 12C20.0005 11.4477 19.5528 11 19.0005 11C18.4482 11 18.0005 11.4477 18.0005 12Z\"\n                                       stroke=\"#3E4954\"\n                                       strokeWidth={2}\n                                       strokeLinecap=\"round\"\n                                       strokeLinejoin=\"round\"\n                                    />\n                                    <path\n                                       d=\"M4.00049 12C4.00049 12.5523 4.4482 13 5.00049 13C5.55277 13 6.00049 12.5523 6.00049 12C6.00049 11.4477 5.55277 11 5.00049 11C4.4482 11 4.00049 11.4477 4.00049 12Z\"\n                                       stroke=\"#3E4954\"\n                                       strokeWidth={2}\n                                       strokeLinecap=\"round\"\n                                       strokeLinejoin=\"round\"\n                                    />\n                                 </svg>\n                              </Dropdown.Toggle>\n                              <Dropdown.Menu className=\"dropdown-menu dropdown-menu-right\">\n                                 <Dropdown.Item className=\"dropdown-item text-black\">\n                                    <svg\n                                       className=\"mr-3\"\n                                       width={24}\n                                       height={24}\n                                       viewBox=\"0 0 24 24\"\n                                       fill=\"none\"\n                                       xmlns=\"http://www.w3.org/2000/svg\"\n                                    >\n                                       <path\n                                          d=\"M22 11.08V12C21.9988 14.1564 21.3005 16.2547 20.0093 17.9818C18.7182 19.709 16.9033 20.9725 14.8354 21.5839C12.7674 22.1953 10.5573 22.1219 8.53447 21.3746C6.51168 20.6273 4.78465 19.2461 3.61096 17.4371C2.43727 15.628 1.87979 13.4881 2.02168 11.3363C2.16356 9.18455 2.99721 7.13631 4.39828 5.49706C5.79935 3.85781 7.69279 2.71537 9.79619 2.24013C11.8996 1.7649 14.1003 1.98232 16.07 2.85999\"\n                                          stroke=\"#209F84\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                       <path\n                                          d=\"M22 4L12 14.01L9 11.01\"\n                                          stroke=\"#209F84\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                    </svg>\n                                    Accept order\n                                 </Dropdown.Item>\n                                 <Dropdown.Item className=\"dropdown-item text-black\">\n                                    <svg\n                                       className=\"mr-3\"\n                                       width={24}\n                                       height={24}\n                                       viewBox=\"0 0 24 24\"\n                                       fill=\"none\"\n                                       xmlns=\"http://www.w3.org/2000/svg\"\n                                    >\n                                       <path\n                                          d=\"M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z\"\n                                          stroke=\"#F24242\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                       <path\n                                          d=\"M15 9L9 15\"\n                                          stroke=\"#F24242\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                       <path\n                                          d=\"M9 9L15 15\"\n                                          stroke=\"#F24242\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                    </svg>\n                                    Reject order\n                                 </Dropdown.Item>\n                                 <Dropdown.Item className=\"dropdown-item text-black\">\n                                    <svg\n                                       className=\"mr-3\"\n                                       width={24}\n                                       height={24}\n                                       viewBox=\"0 0 24 24\"\n                                       fill=\"none\"\n                                       xmlns=\"http://www.w3.org/2000/svg\"\n                                    >\n                                       <path\n                                          d=\"M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z\"\n                                          stroke=\"#6F6F6F\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                       <path\n                                          d=\"M12 16V12\"\n                                          stroke=\"#6F6F6F\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                       <path\n                                          d=\"M12 8H12.01\"\n                                          stroke=\"#6F6F6F\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                    </svg>\n                                    View Details\n                                 </Dropdown.Item>\n                              </Dropdown.Menu>\n                           </Dropdown>\n                        </td>\n                     </tr>\n                     <tr role=\"row\" className=\"even\">\n                        <td className=\"pr-0 all_spending_checkbox\">\n                           <div className=\"custom-control custom-checkbox ml-2\">\n                              <input\n                                 type=\"checkbox\"\n                                 onClick={() => chackboxFun()}\n                                 className=\"custom-control-input\"\n                                 id=\"customCheckBox75\"\n                                 required\n                              />\n                              <label\n                                 className=\"custom-control-label\"\n                                 htmlFor=\"customCheckBox75\"\n                              />\n                           </div>\n                        </td>\n                        <td>#ADS01238</td>\n                        <td>26 March 2020, 12:42 AM</td>\n                        <td>\n                           <span className=\"font-w600\">$4,521.21</span>\n                        </td>\n                        <td>\n                           <span className=\"font-w600\">$5,415.51</span>\n                        </td>\n                        <td>\n                           <span className=\"font-w600\">$245,173.02</span>\n                        </td>\n                        <td>\n                           <span className=\"font-w600 text-primary\">\n                              $67,234.66\n                           </span>\n                        </td>\n                        <td>\n                           <span className=\"p-2 rounded border\">\n                              <svg\n                                 width={28}\n                                 height={28}\n                                 viewBox=\"0 0 28 28\"\n                                 fill=\"none\"\n                                 xmlns=\"http://www.w3.org/2000/svg\"\n                              >\n                                 <path\n                                    d=\"M7.875 15.75H2.625C2.14175 15.75 1.75 16.1418 1.75 16.625V25.375C1.75 25.8582 2.14175 26.25 2.625 26.25H7.875C8.35825 26.25 8.75 25.8582 8.75 25.375V16.625C8.75 16.1418 8.35825 15.75 7.875 15.75Z\"\n                                    fill=\"#52B141\"\n                                 />\n                                 <path\n                                    d=\"M25.375 8.75H20.125C19.6418 8.75 19.25 9.14175 19.25 9.625V25.375C19.25 25.8582 19.6418 26.25 20.125 26.25H25.375C25.8582 26.25 26.25 25.8582 26.25 25.375V9.625C26.25 9.14175 25.8582 8.75 25.375 8.75Z\"\n                                    fill=\"#52B141\"\n                                 />\n                                 <path\n                                    d=\"M16.625 1.75H11.375C10.8918 1.75 10.5 2.14175 10.5 2.625V25.375C10.5 25.8582 10.8918 26.25 11.375 26.25H16.625C17.1082 26.25 17.5 25.8582 17.5 25.375V2.625C17.5 2.14175 17.1082 1.75 16.625 1.75Z\"\n                                    fill=\"#52B141\"\n                                 />\n                              </svg>\n                           </span>\n                        </td>\n                        <td>\n                           <Dropdown className=\"dropdown ml-auto\">\n                              <Dropdown.Toggle\n                                 variant=\"\"\n                                 className=\"icon-false p-0 btn-link\"\n                                 data-toggle=\"dropdown\"\n                              >\n                                 <svg\n                                    width={24}\n                                    height={24}\n                                    viewBox=\"0 0 24 24\"\n                                    fill=\"none\"\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                 >\n                                    <path\n                                       d=\"M11.0005 12C11.0005 12.5523 11.4482 13 12.0005 13C12.5528 13 13.0005 12.5523 13.0005 12C13.0005 11.4477 12.5528 11 12.0005 11C11.4482 11 11.0005 11.4477 11.0005 12Z\"\n                                       stroke=\"#3E4954\"\n                                       strokeWidth={2}\n                                       strokeLinecap=\"round\"\n                                       strokeLinejoin=\"round\"\n                                    />\n                                    <path\n                                       d=\"M18.0005 12C18.0005 12.5523 18.4482 13 19.0005 13C19.5528 13 20.0005 12.5523 20.0005 12C20.0005 11.4477 19.5528 11 19.0005 11C18.4482 11 18.0005 11.4477 18.0005 12Z\"\n                                       stroke=\"#3E4954\"\n                                       strokeWidth={2}\n                                       strokeLinecap=\"round\"\n                                       strokeLinejoin=\"round\"\n                                    />\n                                    <path\n                                       d=\"M4.00049 12C4.00049 12.5523 4.4482 13 5.00049 13C5.55277 13 6.00049 12.5523 6.00049 12C6.00049 11.4477 5.55277 11 5.00049 11C4.4482 11 4.00049 11.4477 4.00049 12Z\"\n                                       stroke=\"#3E4954\"\n                                       strokeWidth={2}\n                                       strokeLinecap=\"round\"\n                                       strokeLinejoin=\"round\"\n                                    />\n                                 </svg>\n                              </Dropdown.Toggle>\n                              <Dropdown.Menu className=\"dropdown-menu dropdown-menu-right\">\n                                 <Dropdown.Item className=\"dropdown-item text-black\">\n                                    <svg\n                                       className=\"mr-3\"\n                                       width={24}\n                                       height={24}\n                                       viewBox=\"0 0 24 24\"\n                                       fill=\"none\"\n                                       xmlns=\"http://www.w3.org/2000/svg\"\n                                    >\n                                       <path\n                                          d=\"M22 11.08V12C21.9988 14.1564 21.3005 16.2547 20.0093 17.9818C18.7182 19.709 16.9033 20.9725 14.8354 21.5839C12.7674 22.1953 10.5573 22.1219 8.53447 21.3746C6.51168 20.6273 4.78465 19.2461 3.61096 17.4371C2.43727 15.628 1.87979 13.4881 2.02168 11.3363C2.16356 9.18455 2.99721 7.13631 4.39828 5.49706C5.79935 3.85781 7.69279 2.71537 9.79619 2.24013C11.8996 1.7649 14.1003 1.98232 16.07 2.85999\"\n                                          stroke=\"#209F84\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                       <path\n                                          d=\"M22 4L12 14.01L9 11.01\"\n                                          stroke=\"#209F84\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                    </svg>\n                                    Accept order\n                                 </Dropdown.Item>\n                                 <Dropdown.Item className=\"dropdown-item text-black\">\n                                    <svg\n                                       className=\"mr-3\"\n                                       width={24}\n                                       height={24}\n                                       viewBox=\"0 0 24 24\"\n                                       fill=\"none\"\n                                       xmlns=\"http://www.w3.org/2000/svg\"\n                                    >\n                                       <path\n                                          d=\"M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z\"\n                                          stroke=\"#F24242\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                       <path\n                                          d=\"M15 9L9 15\"\n                                          stroke=\"#F24242\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                       <path\n                                          d=\"M9 9L15 15\"\n                                          stroke=\"#F24242\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                    </svg>\n                                    Reject order\n                                 </Dropdown.Item>\n                                 <Dropdown.Item className=\"dropdown-item text-black\">\n                                    <svg\n                                       className=\"mr-3\"\n                                       width={24}\n                                       height={24}\n                                       viewBox=\"0 0 24 24\"\n                                       fill=\"none\"\n                                       xmlns=\"http://www.w3.org/2000/svg\"\n                                    >\n                                       <path\n                                          d=\"M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z\"\n                                          stroke=\"#6F6F6F\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                       <path\n                                          d=\"M12 16V12\"\n                                          stroke=\"#6F6F6F\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                       <path\n                                          d=\"M12 8H12.01\"\n                                          stroke=\"#6F6F6F\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                    </svg>\n                                    View Details\n                                 </Dropdown.Item>\n                              </Dropdown.Menu>\n                           </Dropdown>\n                        </td>\n                     </tr>\n                     <tr role=\"row\" className=\"odd\">\n                        <td className=\"pr-0 all_spending_checkbox\">\n                           <div className=\"custom-control custom-checkbox ml-2\">\n                              <input\n                                 type=\"checkbox\"\n                                 onClick={() => chackboxFun()}\n                                 className=\"custom-control-input\"\n                                 id=\"customCheckBox77\"\n                                 required\n                              />\n                              <label\n                                 className=\"custom-control-label\"\n                                 htmlFor=\"customCheckBox77\"\n                              />\n                           </div>\n                        </td>\n                        <td>#ADS01239</td>\n                        <td>26 March 2020, 12:42 AM</td>\n                        <td>\n                           <span className=\"font-w600\">$4,521.21</span>\n                        </td>\n                        <td>\n                           <span className=\"font-w600\">$5,415.51</span>\n                        </td>\n                        <td>\n                           <span className=\"font-w600\">$245,173.02</span>\n                        </td>\n                        <td>\n                           <span className=\"font-w600 text-primary\">\n                              $67,234.66\n                           </span>\n                        </td>\n                        <td>\n                           <span className=\"p-2 rounded border\">\n                              <svg\n                                 width={28}\n                                 height={28}\n                                 viewBox=\"0 0 28 28\"\n                                 fill=\"none\"\n                                 xmlns=\"http://www.w3.org/2000/svg\"\n                              >\n                                 <path\n                                    d=\"M7.875 15.75H2.625C2.14175 15.75 1.75 16.1418 1.75 16.625V25.375C1.75 25.8582 2.14175 26.25 2.625 26.25H7.875C8.35825 26.25 8.75 25.8582 8.75 25.375V16.625C8.75 16.1418 8.35825 15.75 7.875 15.75Z\"\n                                    fill=\"#52B141\"\n                                 />\n                                 <path\n                                    d=\"M25.375 8.75H20.125C19.6418 8.75 19.25 9.14175 19.25 9.625V25.375C19.25 25.8582 19.6418 26.25 20.125 26.25H25.375C25.8582 26.25 26.25 25.8582 26.25 25.375V9.625C26.25 9.14175 25.8582 8.75 25.375 8.75Z\"\n                                    fill=\"#52B141\"\n                                 />\n                                 <path\n                                    d=\"M16.625 1.75H11.375C10.8918 1.75 10.5 2.14175 10.5 2.625V25.375C10.5 25.8582 10.8918 26.25 11.375 26.25H16.625C17.1082 26.25 17.5 25.8582 17.5 25.375V2.625C17.5 2.14175 17.1082 1.75 16.625 1.75Z\"\n                                    fill=\"#52B141\"\n                                 />\n                              </svg>\n                           </span>\n                        </td>\n                        <td>\n                           <Dropdown className=\"dropdown ml-auto\">\n                              <Dropdown.Toggle\n                                 variant=\"\"\n                                 className=\"icon-false p-0 btn-link\"\n                                 data-toggle=\"dropdown\"\n                              >\n                                 <svg\n                                    width={24}\n                                    height={24}\n                                    viewBox=\"0 0 24 24\"\n                                    fill=\"none\"\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                 >\n                                    <path\n                                       d=\"M11.0005 12C11.0005 12.5523 11.4482 13 12.0005 13C12.5528 13 13.0005 12.5523 13.0005 12C13.0005 11.4477 12.5528 11 12.0005 11C11.4482 11 11.0005 11.4477 11.0005 12Z\"\n                                       stroke=\"#3E4954\"\n                                       strokeWidth={2}\n                                       strokeLinecap=\"round\"\n                                       strokeLinejoin=\"round\"\n                                    />\n                                    <path\n                                       d=\"M18.0005 12C18.0005 12.5523 18.4482 13 19.0005 13C19.5528 13 20.0005 12.5523 20.0005 12C20.0005 11.4477 19.5528 11 19.0005 11C18.4482 11 18.0005 11.4477 18.0005 12Z\"\n                                       stroke=\"#3E4954\"\n                                       strokeWidth={2}\n                                       strokeLinecap=\"round\"\n                                       strokeLinejoin=\"round\"\n                                    />\n                                    <path\n                                       d=\"M4.00049 12C4.00049 12.5523 4.4482 13 5.00049 13C5.55277 13 6.00049 12.5523 6.00049 12C6.00049 11.4477 5.55277 11 5.00049 11C4.4482 11 4.00049 11.4477 4.00049 12Z\"\n                                       stroke=\"#3E4954\"\n                                       strokeWidth={2}\n                                       strokeLinecap=\"round\"\n                                       strokeLinejoin=\"round\"\n                                    />\n                                 </svg>\n                              </Dropdown.Toggle>\n                              <Dropdown.Menu className=\"dropdown-menu dropdown-menu-right\">\n                                 <Dropdown.Item className=\"dropdown-item text-black\">\n                                    <svg\n                                       className=\"mr-3\"\n                                       width={24}\n                                       height={24}\n                                       viewBox=\"0 0 24 24\"\n                                       fill=\"none\"\n                                       xmlns=\"http://www.w3.org/2000/svg\"\n                                    >\n                                       <path\n                                          d=\"M22 11.08V12C21.9988 14.1564 21.3005 16.2547 20.0093 17.9818C18.7182 19.709 16.9033 20.9725 14.8354 21.5839C12.7674 22.1953 10.5573 22.1219 8.53447 21.3746C6.51168 20.6273 4.78465 19.2461 3.61096 17.4371C2.43727 15.628 1.87979 13.4881 2.02168 11.3363C2.16356 9.18455 2.99721 7.13631 4.39828 5.49706C5.79935 3.85781 7.69279 2.71537 9.79619 2.24013C11.8996 1.7649 14.1003 1.98232 16.07 2.85999\"\n                                          stroke=\"#209F84\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                       <path\n                                          d=\"M22 4L12 14.01L9 11.01\"\n                                          stroke=\"#209F84\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                    </svg>\n                                    Accept order\n                                 </Dropdown.Item>\n                                 <Dropdown.Item className=\"dropdown-item text-black\">\n                                    <svg\n                                       className=\"mr-3\"\n                                       width={24}\n                                       height={24}\n                                       viewBox=\"0 0 24 24\"\n                                       fill=\"none\"\n                                       xmlns=\"http://www.w3.org/2000/svg\"\n                                    >\n                                       <path\n                                          d=\"M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z\"\n                                          stroke=\"#F24242\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                       <path\n                                          d=\"M15 9L9 15\"\n                                          stroke=\"#F24242\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                       <path\n                                          d=\"M9 9L15 15\"\n                                          stroke=\"#F24242\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                    </svg>\n                                    Reject order\n                                 </Dropdown.Item>\n                                 <Dropdown.Item className=\"dropdown-item text-black\">\n                                    <svg\n                                       className=\"mr-3\"\n                                       width={24}\n                                       height={24}\n                                       viewBox=\"0 0 24 24\"\n                                       fill=\"none\"\n                                       xmlns=\"http://www.w3.org/2000/svg\"\n                                    >\n                                       <path\n                                          d=\"M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z\"\n                                          stroke=\"#6F6F6F\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                       <path\n                                          d=\"M12 16V12\"\n                                          stroke=\"#6F6F6F\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                       <path\n                                          d=\"M12 8H12.01\"\n                                          stroke=\"#6F6F6F\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                    </svg>\n                                    View Details\n                                 </Dropdown.Item>\n                              </Dropdown.Menu>\n                           </Dropdown>\n                        </td>\n                     </tr>\n                     <tr role=\"row\" className=\"even\">\n                        <td className=\"pr-0 all_spending_checkbox\">\n                           <div className=\"custom-control custom-checkbox ml-2\">\n                              <input\n                                 type=\"checkbox\"\n                                 onClick={() => chackboxFun()}\n                                 className=\"custom-control-input\"\n                                 id=\"customCheckBox70\"\n                                 required\n                              />\n                              <label\n                                 className=\"custom-control-label\"\n                                 htmlFor=\"customCheckBox70\"\n                              />\n                           </div>\n                        </td>\n                        <td>#ADS012310</td>\n                        <td>26 March 2020, 12:42 AM</td>\n                        <td>\n                           <span className=\"font-w600\">$4,521.21</span>\n                        </td>\n                        <td>\n                           <span className=\"font-w600\">$5,415.51</span>\n                        </td>\n                        <td>\n                           <span className=\"font-w600\">$245,173.02</span>\n                        </td>\n                        <td>\n                           <span className=\"font-w600 text-primary\">\n                              $67,234.66\n                           </span>\n                        </td>\n                        <td>\n                           <span className=\"p-2 rounded border\">\n                              <svg\n                                 width={28}\n                                 height={28}\n                                 viewBox=\"0 0 28 28\"\n                                 fill=\"none\"\n                                 xmlns=\"http://www.w3.org/2000/svg\"\n                              >\n                                 <path\n                                    d=\"M7.875 15.75H2.625C2.14175 15.75 1.75 16.1418 1.75 16.625V25.375C1.75 25.8582 2.14175 26.25 2.625 26.25H7.875C8.35825 26.25 8.75 25.8582 8.75 25.375V16.625C8.75 16.1418 8.35825 15.75 7.875 15.75Z\"\n                                    fill=\"#52B141\"\n                                 />\n                                 <path\n                                    d=\"M25.375 8.75H20.125C19.6418 8.75 19.25 9.14175 19.25 9.625V25.375C19.25 25.8582 19.6418 26.25 20.125 26.25H25.375C25.8582 26.25 26.25 25.8582 26.25 25.375V9.625C26.25 9.14175 25.8582 8.75 25.375 8.75Z\"\n                                    fill=\"#52B141\"\n                                 />\n                                 <path\n                                    d=\"M16.625 1.75H11.375C10.8918 1.75 10.5 2.14175 10.5 2.625V25.375C10.5 25.8582 10.8918 26.25 11.375 26.25H16.625C17.1082 26.25 17.5 25.8582 17.5 25.375V2.625C17.5 2.14175 17.1082 1.75 16.625 1.75Z\"\n                                    fill=\"#52B141\"\n                                 />\n                              </svg>\n                           </span>\n                        </td>\n                        <td>\n                           <Dropdown className=\"dropdown ml-auto\">\n                              <Dropdown.Toggle\n                                 variant=\"\"\n                                 className=\"icon-false p-0 btn-link\"\n                                 data-toggle=\"dropdown\"\n                              >\n                                 <svg\n                                    width={24}\n                                    height={24}\n                                    viewBox=\"0 0 24 24\"\n                                    fill=\"none\"\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                 >\n                                    <path\n                                       d=\"M11.0005 12C11.0005 12.5523 11.4482 13 12.0005 13C12.5528 13 13.0005 12.5523 13.0005 12C13.0005 11.4477 12.5528 11 12.0005 11C11.4482 11 11.0005 11.4477 11.0005 12Z\"\n                                       stroke=\"#3E4954\"\n                                       strokeWidth={2}\n                                       strokeLinecap=\"round\"\n                                       strokeLinejoin=\"round\"\n                                    />\n                                    <path\n                                       d=\"M18.0005 12C18.0005 12.5523 18.4482 13 19.0005 13C19.5528 13 20.0005 12.5523 20.0005 12C20.0005 11.4477 19.5528 11 19.0005 11C18.4482 11 18.0005 11.4477 18.0005 12Z\"\n                                       stroke=\"#3E4954\"\n                                       strokeWidth={2}\n                                       strokeLinecap=\"round\"\n                                       strokeLinejoin=\"round\"\n                                    />\n                                    <path\n                                       d=\"M4.00049 12C4.00049 12.5523 4.4482 13 5.00049 13C5.55277 13 6.00049 12.5523 6.00049 12C6.00049 11.4477 5.55277 11 5.00049 11C4.4482 11 4.00049 11.4477 4.00049 12Z\"\n                                       stroke=\"#3E4954\"\n                                       strokeWidth={2}\n                                       strokeLinecap=\"round\"\n                                       strokeLinejoin=\"round\"\n                                    />\n                                 </svg>\n                              </Dropdown.Toggle>\n                              <Dropdown.Menu className=\"dropdown-menu dropdown-menu-right\">\n                                 <Dropdown.Item className=\"dropdown-item text-black\">\n                                    <svg\n                                       className=\"mr-3\"\n                                       width={24}\n                                       height={24}\n                                       viewBox=\"0 0 24 24\"\n                                       fill=\"none\"\n                                       xmlns=\"http://www.w3.org/2000/svg\"\n                                    >\n                                       <path\n                                          d=\"M22 11.08V12C21.9988 14.1564 21.3005 16.2547 20.0093 17.9818C18.7182 19.709 16.9033 20.9725 14.8354 21.5839C12.7674 22.1953 10.5573 22.1219 8.53447 21.3746C6.51168 20.6273 4.78465 19.2461 3.61096 17.4371C2.43727 15.628 1.87979 13.4881 2.02168 11.3363C2.16356 9.18455 2.99721 7.13631 4.39828 5.49706C5.79935 3.85781 7.69279 2.71537 9.79619 2.24013C11.8996 1.7649 14.1003 1.98232 16.07 2.85999\"\n                                          stroke=\"#209F84\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                       <path\n                                          d=\"M22 4L12 14.01L9 11.01\"\n                                          stroke=\"#209F84\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                    </svg>\n                                    Accept order\n                                 </Dropdown.Item>\n                                 <Dropdown.Item className=\"dropdown-item text-black\">\n                                    <svg\n                                       className=\"mr-3\"\n                                       width={24}\n                                       height={24}\n                                       viewBox=\"0 0 24 24\"\n                                       fill=\"none\"\n                                       xmlns=\"http://www.w3.org/2000/svg\"\n                                    >\n                                       <path\n                                          d=\"M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z\"\n                                          stroke=\"#F24242\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                       <path\n                                          d=\"M15 9L9 15\"\n                                          stroke=\"#F24242\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                       <path\n                                          d=\"M9 9L15 15\"\n                                          stroke=\"#F24242\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                    </svg>\n                                    Reject order\n                                 </Dropdown.Item>\n                                 <Dropdown.Item className=\"dropdown-item text-black\">\n                                    <svg\n                                       className=\"mr-3\"\n                                       width={24}\n                                       height={24}\n                                       viewBox=\"0 0 24 24\"\n                                       fill=\"none\"\n                                       xmlns=\"http://www.w3.org/2000/svg\"\n                                    >\n                                       <path\n                                          d=\"M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z\"\n                                          stroke=\"#6F6F6F\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                       <path\n                                          d=\"M12 16V12\"\n                                          stroke=\"#6F6F6F\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                       <path\n                                          d=\"M12 8H12.01\"\n                                          stroke=\"#6F6F6F\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                       />\n                                    </svg>\n                                    View Details\n                                 </Dropdown.Item>\n                              </Dropdown.Menu>\n                           </Dropdown>\n                        </td>\n                     </tr>\n                  </tbody>\n               </table>\n               <div className=\"d-sm-flex text-center justify-content-between align-items-center\">\n                  <div className=\"dataTables_info\" id=\"example5_info\">\n                     Showing {activePag.current * sort + 1} to{\" \"}\n                     {data.length > (activePag.current + 1) * sort\n                        ? (activePag.current + 1) * sort\n                        : data.length}{\" \"}\n                     of {data.length} entries\n                  </div>\n                  <div className=\"dataTables_paginate paging_simple_numbers\">\n                     <Link\n                        to=\"/spendings\"\n                        className=\"paginate_button previous disabled\"\n                        aria-controls=\"example5\"\n                        onClick={() =>\n                           activePag.current > 0 &&\n                           onClick(activePag.current - 1)\n                        }\n                     >\n                        Previous\n                     </Link>\n                     <span>\n                        {paggination.map((number, i) => (\n                           <Link\n                              key={i}\n                              to=\"/spendings\"\n                              className={`paginate_button  ${\n                                 activePag.current === i ? \"current\" : \"\"\n                              }`}\n                              onClick={() => onClick(i)}\n                           >\n                              {number}\n                           </Link>\n                        ))}\n                     </span>\n                     <Link\n                        to=\"/spendings\"\n                        className=\"paginate_button next\"\n                        onClick={() =>\n                           activePag.current + 1 < paggination.length &&\n                           onClick(activePag.current + 1)\n                        }\n                     >\n                        Next\n                     </Link>\n                  </div>\n               </div>\n            </div>\n         </div>\n      </>\n   );\n};\n\nexport default SpendingDataTable;\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/Chartjs/line7.js",[],["989","990"],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/Chartjs/bar3.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/Chartjs/realtime.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/Chartjs/bar4.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/rechart/PositiveNagative.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/Chartjs/bar2.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/Chartjs/line6.js",["991"],"import React, { Component } from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nclass LineChart6 extends Component {\n   render() {\n      const data = {\n         labels: [\n            \"January\",\n            \"February\",\n            \"March\",\n            \"April\",\n            \"May\",\n            \"June\",\n            \"July\",\n         ],\n         datasets: [\n            {\n               label: \"My First dataset\",\n               data: [28, 35, 36, 48, 46, 42, 60],\n               backgroundColor: \"#ffff\",\n               borderColor: this.props.color ? this.props.color : \"#5514A4\",\n               borderWidth: 0,\n               strokeColor: this.props.color ? this.props.color : \"#5514A4\",\n               capBezierPoints: !0,\n               pointColor: this.props.color ? this.props.color : \"#fff\",\n               pointBorderColor: this.props.color ? this.props.color : \"#fff\",\n               pointBackgroundColor: this.props.color\n                  ? this.props.color\n                  : \"#5514A4\",\n               pointBorderWidth: 0,\n               pointRadius: 1,\n               pointHoverBorderColor: this.props.color\n                  ? this.props.color\n                  : \"#5514A4\",\n               pointHoverRadius: 3,\n               pointStyle: \"none\",\n               borderWidth: 2,\n            },\n         ],\n      };\n\n      const options = {\n         responsive: true,\n         maintainAspectRatio: false,\n         tooltips: {\n            enabled: true,\n         },\n         legend: {\n            display: false,\n            labels: {\n               usePointStyle: false,\n            },\n         },\n         scales: {\n            xAxes: [\n               {\n                  display: false,\n                  gridLines: {\n                     display: false,\n                     drawBorder: false,\n                  },\n                  scaleLabel: {\n                     display: false,\n                     labelString: \"Month\",\n                  },\n                  ticks: {\n                     beginAtZero: true,\n                  },\n               },\n            ],\n            yAxes: [\n               {\n                  display: false,\n                  gridLines: {\n                     display: false,\n                     drawBorder: false,\n                  },\n                  scaleLabel: {\n                     display: true,\n                     labelString: \"Value\",\n                  },\n               },\n            ],\n         },\n         title: {\n            display: true,\n         },\n      };\n      return (\n         <>\n            <Line\n               data={data}\n               options={options}\n               height={this.props.height ? this.props.height : 300}\n            />\n         </>\n      );\n   }\n}\n\nexport default LineChart6;\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/Chartjs/line4.js",["992"],"import React, { Component } from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nclass LineChart3 extends Component {\n   render() {\n      const data = {\n         labels: [\n            \"January\",\n            \"February\",\n            \"March\",\n            \"April\",\n            \"May\",\n            \"June\",\n            \"July\",\n         ],\n         datasets: [\n            {\n               label: \"My First dataset\",\n               data: [28, 35, 36, 48, 46, 42, 60],\n               backgroundColor: this.props.color ? this.props.color : \"#5514A4\",\n               borderColor: this.props.borderColor\n                  ? this.props.borderColor\n                  : this.props.color\n                  ? this.props.color\n                  : \"#5514A4\",\n               borderWidth: 0,\n               strokeColor: this.props.borderColor\n                  ? this.props.borderColor\n                  : this.props.color\n                  ? this.props.color\n                  : \"#5514A4\",\n               capBezierPoints: !0,\n               pointColor: this.props.borderColor\n                  ? this.props.borderColor\n                  : this.props.color\n                  ? this.props.color\n                  : \"#fff\",\n               pointBorderColor: this.props.borderColor\n                  ? this.props.borderColor\n                  : this.props.color\n                  ? this.props.color\n                  : \"#fff\",\n               pointBackgroundColor: this.props.borderColor\n                  ? this.props.borderColor\n                  : this.props.color\n                  ? this.props.color\n                  : \"#5514A4\",\n               borderWidth: 2,\n               pointBorderWidth: 0,\n               pointRadius: 3,\n               pointHoverBorderColor: this.props.color\n                  ? this.props.color\n                  : \"#5514A4\",\n               pointHoverRadius: 0,\n               pointStyle: \"line\",\n            },\n         ],\n      };\n\n      const options = {\n         responsive: true,\n         maintainAspectRatio: false,\n         tooltips: {\n            enabled: true,\n         },\n         legend: {\n            display: false,\n            labels: {\n               usePointStyle: false,\n            },\n         },\n         scales: {\n            xAxes: [\n               {\n                  display: false,\n                  gridLines: {\n                     display: false,\n                     drawBorder: false,\n                  },\n                  scaleLabel: {\n                     display: false,\n                     labelString: \"Month\",\n                  },\n                  ticks: {\n                     beginAtZero: true,\n                  },\n               },\n            ],\n            yAxes: [\n               {\n                  display: false,\n                  gridLines: {\n                     display: false,\n                     drawBorder: false,\n                  },\n                  scaleLabel: {\n                     display: true,\n                     labelString: \"Value\",\n                  },\n               },\n            ],\n         },\n         title: {\n            display: true,\n         },\n      };\n      return (\n         <>\n            <Line\n               data={data}\n               options={options}\n               height={this.props.height ? this.props.height : 300}\n            />\n         </>\n      );\n   }\n}\n\nexport default LineChart3;\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/table/tableData.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/Chartjs/line3.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/charts/chartflot/Bar.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/PluginsMenu/Lightgallery/Lightgallery.js",["993"],"import React,{Component} from 'react';\r\nimport SimpleReactLightbox from 'simple-react-lightbox';\r\nimport {SRLWrapper} from 'simple-react-lightbox';\r\n\r\nimport big1 from '../../../../images/big/img1.jpg';\r\nimport big2 from '../../../../images/big/img2.jpg';\r\nimport big3 from '../../../../images/big/img3.jpg';\r\nimport big4 from '../../../../images/big/img4.jpg';\r\nimport big5 from '../../../../images/big/img5.jpg';\r\nimport big6 from '../../../../images/big/img6.jpg';\r\nimport big7 from '../../../../images/big/img7.jpg';\r\nimport big8 from '../../../../images/big/img8.jpg';\r\n\r\nconst lightGallery = [\r\n\t{ thumb : big1, large :\tbig1,\t},\t\r\n\t{ thumb : big2, large :\tbig2,\t},\t\r\n\t{ thumb : big3, large :\tbig3,\t},\t\r\n\t{ thumb : big4, large :\tbig4,\t},\t\r\n\t{ thumb : big5, large :\tbig5,\t},\t\r\n\t{ thumb : big6, large :\tbig6,\t},\t\r\n\t{ thumb : big7, large :\tbig7,\t},\t\r\n\t{ thumb : big8, large :\tbig8,\t},\t\r\n];\r\n\r\nclass Lightgallery extends Component{\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<>\t\r\n\t\t\t\t<SimpleReactLightbox>\r\n\t\t\t\t\t<SRLWrapper>\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<div className=\"col-lg-12\">\r\n\t\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t\t\t<h4 className=\"card-title\">Light Gallery</h4>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"card-body pb-1\">\r\n\t\t\t\t\t\t\t\t\t\t<div id=\"lightgallery\" className=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t\t{lightGallery.map((item,index)=>(\r\n\t\t\t\t\t\t\t\t\t\t\t\t<a href={item.large} data-exthumbimage=\"images/big/img1.jpg\" data-src={big1} className=\"col-lg-3 col-md-6 mb-4\" key={index}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={item.thumb} style={{width:\"100%\"}} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t{/* <!-- /# card --> */}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</SRLWrapper>\r\n\t\t\t\t</SimpleReactLightbox>\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n}\r\nexport default Lightgallery;","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/contexts/DataContext.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Orders/OrderReceipt.js",[],"/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/RiderRequests/RiderRequestList.js",["994","995","996","997"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport firebaseDb from \"../../../firebase\";\nimport { useDataContext } from \"../../../contexts/DataContext\";\nimport swal from \"sweetalert\";\nimport { Row, Col, Card, Table } from \"react-bootstrap\";\n\nimport RiderRequestForm from \"./RiderRequestForm\";\n\nconst RiderRequestList = () => {\n  /// Get rider list from context provider\n  const { riderList } = useDataContext();\n  var [currentId, setCurrentId] = useState(\"\");\n  var [searchTerm, setSearchTerm] = useState(\"\");\n\n  const addOrEdit = (obj) => {\n    if (currentId === \"\") {\n      swal(\"Nice!\", \"A new rider profile is added!\", \"success\");\n      firebaseDb.ref(\"riders/\").push(obj, (err) => {\n        if (err) console.log(err);\n        else setCurrentId(\"\");\n      });\n    } else {\n      swal(\"Nice!\", \"This rider profile is updated!\", \"success\");\n      firebaseDb.ref(`riders/${currentId}`).set(obj, (err) => {\n        if (err) console.log(err);\n        else setCurrentId(\"\");\n      });\n    }\n  };\n\n  const onDelete = (key) => {\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you will not be able to recover this rider!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    }).then((willDelete) => {\n      if (willDelete) {\n        firebaseDb.ref(`riders/${key}`).remove((err) => {\n          if (err) console.log(err);\n          else setCurrentId(\"\");\n        });\n        swal(\"Poof! This rider profile has been deleted!\", {\n          icon: \"success\",\n        });\n      } else {\n        swal(\"Your rider profile is safe!\");\n      }\n    });\n  };\n\n  const filteredRider = (riderList, searchTerm) => {\n    if (!searchTerm) {\n      return riderList;\n    }\n    return Object.keys(riderList)\n      .filter((riderId) =>\n        riderList[riderId].riderName\n          .toLowerCase()\n          .includes(searchTerm.toLowerCase())\n      )\n      .reduce((res, key) => ((res[key] = riderList[key]), res), {});\n  };\n\n  return (\n    <Fragment>\n      {riderList && (\n        <>\n          <Helmet>\n            <title>Veggie Go | Rider Requests</title>\n          </Helmet>\n          <div className=\"form-head d-flex mb-0 mb-lg-4 align-items-start\">\n            <div className=\"mr-auto d-none d-lg-block\">\n              <h2 className=\"text-black font-w600 mb-1\">Rider Requests</h2>\n              <p className=\"mb-0\">\n                A list of customer change requests from your rider\n              </p>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-xl-4 col-lg-4\">\n              <RiderRequestForm {...{ addOrEdit, currentId, riderList }} />\n            </div>\n            <div className=\"col-xl-8 col-lg-8\">\n              <Row>\n                <Col lg={12}>\n                  <Card>\n                    <Card.Header>\n                      <Card.Title>Rider Requests</Card.Title>\n                    </Card.Header>\n                    <Card.Body>\n                      {/* <div className=\"search_bar dropdown show mb-3\">\n                      <div className=\"dropdown-menushow\">\n                        <form onSubmit={(e) => e.preventDefault()}>\n                          <input\n                            className=\"form-control\"\n                            type=\"search\"\n                            placeholder=\"Search Rider name\"\n                            aria-label=\"Search\"\n                            onChange={(event) =>\n                              setSearchTerm(event.target.value)\n                            }\n                          />\n                        </form>\n                      </div>\n                    </div> */}\n                      <Table responsive hover>\n                        <thead>\n                          <tr>\n                            <th>\n                              <strong>REQUESTED BY</strong>\n                            </th>\n                            <th>\n                              <strong>CONTACT #</strong>\n                            </th>\n                            <th>\n                              <strong>ADDRESS</strong>\n                            </th>\n                            <th>\n                              <strong>VEHICLE TYPE</strong>\n                            </th>\n                            <th>\n                              <strong>VEHICLE PLATE #</strong>\n                            </th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {Object.keys(\n                            filteredRider(riderList, searchTerm)\n                          ).map((id) => {\n                            return (\n                              <tr\n                                key={id}\n                                onClick={() => {\n                                  setCurrentId(id);\n                                }}\n                              >\n                                <td>\n                                  <img\n                                    src={riderList[id].riderImage}\n                                    className=\"rounded-lg mr-2\"\n                                    width=\"24\"\n                                    alt=\"\"\n                                  />\n                                  <span>{riderList[id].riderName}</span>\n                                </td>\n                                <td>{riderList[id].riderContactNum}</td>\n                                <td>{riderList[id].riderAddress}</td>\n                                <td>{riderList[id].vehicleType}</td>\n                                <td>{riderList[id].vehiclePlateNum}</td>\n                              </tr>\n                            );\n                          })}\n                        </tbody>\n                      </Table>\n                    </Card.Body>\n                  </Card>\n                </Col>\n              </Row>\n            </div>\n          </div>\n        </>\n      )}\n    </Fragment>\n  );\n};\n\nexport default RiderRequestList;\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/RiderRequests/RiderRequestForm.js",["998","999","1000"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport { storage } from \"../../../firebase\";\nimport { v4 as uuid } from \"uuid\";\n\nimport { Button } from \"react-bootstrap\";\n\nconst RiderRequestForm = (props) => {\n  const initialFieldValues = {\n    riderName: \"\",\n    vehicleType: \"\",\n    vehiclePlateNum: \"\",\n    riderImage: \"\",\n    riderContactNum: \"\",\n    riderAddress: \"\",\n    dateAdded: new Date().toLocaleString(),\n    isActive: \"true\",\n  };\n\n  var [values, setValues] = useState(initialFieldValues);\n\n  useEffect(() => {\n    if (props.currentId === \"\") {\n      setViewMode(false);\n      setValues({\n        ...initialFieldValues,\n      });\n    } else {\n      setViewMode(true);\n      setValues({\n        ...props.riderList[props.currentId],\n      });\n    }\n  }, [props.currentId, props.riderList]);\n\n  const handleInputChange = (e) => {\n    var { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: value,\n    });\n  };\n\n  const [viewMode, setViewMode] = useState(false);\n\n  const [imageUrl, setImageUrl] = useState();\n  const readImages = async (e) => {\n    const file = e.target.files[0];\n    const id = uuid();\n    const imagesRef = storage.ref(\"rider/\").child(id);\n\n    await imagesRef.put(file);\n    imagesRef.getDownloadURL().then((url) => {\n      setImageUrl(url);\n    });\n  };\n\n  if (typeof imageUrl !== \"undefined\" && imageUrl != null) {\n    values.riderImage = imageUrl;\n  }\n\n  const handleFormSubmit = (e) => {\n    console.log(\"inside handleFormSubmit\");\n    e.preventDefault();\n    props.addOrEdit(values);\n    window.location.reload(false);\n  };\n\n  return (\n    <Fragment>\n      <div className=\"row\">\n        <div className=\"col-xl-12 col-lg-12\">\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <h4 className=\"card-title\">Request #000</h4>\n              {props.currentId !== \"\" ? (\n                <Button\n                  variant=\"primary btn-rounded\"\n                  onClick={() => {\n                    setViewMode(!viewMode);\n                  }}\n                >\n                  <span className=\"btn-icon-left text-primary\">\n                    {viewMode ? (\n                      <i className=\"fa fa-pencil\" />\n                    ) : (\n                      <i className=\"fa fa-eye\" />\n                    )}\n                  </span>\n                  {viewMode ? \"Edit \" : \"View \"}\n                </Button>\n              ) : null}\n            </div>\n            <div className=\"card-body\">\n              <div className=\"basic-form\">\n                <form onSubmit={handleFormSubmit}>\n                  <div className=\"form-row\">\n                    <div className=\"form-group col-md-12 mt-5\">\n                      <input\n                        type=\"submit\"\n                        value=\"Accept Changes\"\n                        className=\"btn btn-primary btn-block\"\n                        disabled\n                      />\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default RiderRequestForm;\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Settings/CategoryList.js",["1001","1002"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport { useDataContext } from \"../../../contexts/DataContext\";\nimport firebaseDb from \"../../../firebase\";\nimport swal from \"sweetalert\";\nimport { Row, Col, Card, Table, Badge, Button } from \"react-bootstrap\";\n\nimport CategoryForm from \"./CategoryForm\";\n\nconst CategoryList = () => {\n  const { categoryList } = useDataContext();\n  var [currentId, setCurrentId] = useState(\"\");\n  var [searchTerm, setSearchTerm] = useState(\"\");\n\n  const addOrEdit = (obj) => {\n    if (currentId === \"\") {\n      swal(\"Nice!\", \"A new category is added!\", \"success\");\n      firebaseDb.ref(\"category/\").push(obj, (err) => {\n        if (err) console.log(err);\n        else setCurrentId(\"\");\n      });\n    } else {\n      swal(\"Nice!\", \"This category is updated!\", \"success\");\n      firebaseDb.ref(`category/${currentId}`).set(obj, (err) => {\n        if (err) console.log(err);\n        else setCurrentId(\"\");\n      });\n    }\n  };\n\n  const onDelete = (key) => {\n    if (window.confirm(\"Are you sure to delete this record?\")) {\n      firebaseDb.ref(`category/${key}`).remove((err) => {\n        if (err) console.log(err);\n        else setCurrentId(\"\");\n      });\n    }\n  };\n\n  const filteredCategory = (categoryList, searchTerm) => {\n    if (!searchTerm) {\n      return categoryList;\n    }\n    return Object.keys(categoryList)\n      .filter((id) =>\n        categoryList[id].categoryName\n          .toLowerCase()\n          .includes(searchTerm.toLowerCase())\n      )\n      .reduce((res, key) => ((res[key] = categoryList[key]), res), {});\n  };\n\n  if (!categoryList) {\n    return <h1>Loading...</h1>;\n  }\n  return (\n    <Fragment>\n      <div className=\"row\">\n        <div className=\"col-xl-12 col-lg-12\">\n          <h2 className=\"text-black font-w600 mb-1\">\n            Product Category Settings\n          </h2>\n          <div className=\"mt-4\">\n            <CategoryForm\n              {...{ addOrEdit, currentId, setCurrentId, categoryList }}\n            />\n          </div>\n\n          <Row>\n            <Col lg={12}>\n              <Card>\n                <Card.Header>\n                  <Card.Title>Product Categories</Card.Title>\n                </Card.Header>\n                <Card.Body>\n                  <div className=\"search_bar dropdown show mb-3\">\n                    <div className=\"dropdown-menushow\">\n                      <form onSubmit={(e) => e.preventDefault()}>\n                        <input\n                          className=\"form-control\"\n                          type=\"search\"\n                          placeholder=\"Search Category\"\n                          aria-label=\"Search\"\n                          onChange={(event) =>\n                            setSearchTerm(event.target.value)\n                          }\n                        />\n                      </form>\n                    </div>\n                  </div>\n                  <Table responsive>\n                    <thead>\n                      <tr>\n                        <th></th>\n                        <th>\n                          <strong>NAME</strong>\n                        </th>\n                        <th>\n                          <strong>STATUS</strong>\n                        </th>\n                        <th></th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {Object.keys(\n                        filteredCategory(categoryList, searchTerm)\n                      ).map((id) => {\n                        return (\n                          <tr key={id}>\n                            <td>\n                              <Button\n                                onClick={() => {\n                                  setCurrentId(id);\n                                  window.scrollTo({\n                                    top: 0,\n                                    behavior: \"smooth\",\n                                  });\n                                }}\n                                className=\"btn btn-primary btn-xs  mr-1\"\n                              >\n                                Edit\n                              </Button>\n                            </td>\n                            <td>{categoryList[id].categoryName}</td>\n                            <td>\n                              {!categoryList[id].isActive ? (\n                                <Badge variant=\"danger light\"> INACTIVE </Badge>\n                              ) : (\n                                <Badge variant=\"primary light\"> ACTIVE </Badge>\n                              )}\n                            </td>\n                            <td>\n                              <Button\n                                onClick={() => {\n                                  onDelete(id);\n                                }}\n                                className=\"btn btn-danger btn-xs  mr-1\"\n                              >\n                                Delete\n                              </Button>\n                            </td>\n                          </tr>\n                        );\n                      })}\n                    </tbody>\n                  </Table>\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default CategoryList;\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Settings/CategoryForm.js",["1003","1004","1005"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport { Button } from \"react-bootstrap\";\n\nimport firebaseDb from \"../../../firebase\";\nconst CategoryForm = (props) => {\n  const initialFieldValues = {\n    categoryName: \"\",\n    dateAdded: new Date().toLocaleString(),\n    isActive: \"true\",\n  };\n\n  var [values, setValues] = useState(initialFieldValues);\n  var [categoryObjects, setCategoryObjects] = useState({});\n\n  useEffect(() => {\n    firebaseDb.ref(\"category/\").on(\"value\", (snapshot) => {\n      if (snapshot.val() != null)\n        setCategoryObjects({\n          ...snapshot.val(),\n        });\n      else setCategoryObjects({});\n    });\n  }, []);\n\n  useEffect(() => {\n    if (props.currentId == \"\")\n      setValues({\n        ...initialFieldValues,\n      });\n    else\n      setValues({\n        ...props.categoryObjects[props.currentId],\n      });\n  }, [props.currentId, props.categoryObjects]);\n\n  const handleInputChange = (event) => {\n    // var { name, value } = e.target;\n    const target = event.target;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const name = target.name;\n\n    setValues({\n      ...values,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = (event) => {\n    event.preventDefault();\n    props.addOrEdit(values);\n  };\n\n  const enabled = values.categoryName != null;\n  return (\n    <Fragment>\n      <div className=\"row\">\n        <div className=\"col-xl-12 col-lg-12\">\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <h4 className=\"card-title\">\n                {props.currentId === \"\" ? \"Add\" : \"Update\"} Category\n              </h4>\n              {props.currentId !== \"\" && (\n                <Button\n                  onClick={() => {\n                    props.setCurrentId(\"\");\n                  }}\n                  className=\"btn btn-primary light btn-xs  mr-1\"\n                >\n                  Add new Product Category\n                </Button>\n              )}\n            </div>\n            <div className=\"card-body\">\n              <div className=\"basic-form\">\n                <form onSubmit={handleFormSubmit}>\n                  <div className=\"form-row\">\n                    <div className=\"form-group col-md-12\">\n                      <label>Name</label>\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Name\"\n                        name=\"categoryName\"\n                        value={values.categoryName}\n                        onChange={handleInputChange}\n                        required\n                      />\n                    </div>\n                  </div>\n                  <div className=\"form-row\">\n                    <div className=\"custom-control custom-checkbox mb-3\">\n                      <input\n                        name=\"isActive\"\n                        type=\"checkbox\"\n                        defaultChecked={values.isActive}\n                        checked={values.isActive}\n                        onChange={handleInputChange}\n                        className=\"custom-control-input\"\n                        id=\"isActiveChkBox\"\n                      />\n                      <label\n                        className=\"custom-control-label\"\n                        htmlFor=\"isActiveChkBox\"\n                      >\n                        Is Active?\n                      </label>\n                    </div>\n                  </div>\n                  <div className=\"form-row\">\n                    <div className=\"form-group col-md-12 mt-4\">\n                      <input\n                        type=\"submit\"\n                        value={\n                          props.currentId === \"\"\n                            ? \"Add Product Category\"\n                            : \"Update Product Category\"\n                        }\n                        className=\"btn btn-primary \"\n                        disabled={!enabled}\n                      />\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default CategoryForm;\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Settings/UnitList.js",["1006","1007","1008","1009","1010","1011","1012"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport firebaseDb from \"../../../firebase\";\nimport swal from \"sweetalert\";\nimport { Row, Col, Card, Table, Badge, Button } from \"react-bootstrap\";\n\nimport { Link } from \"react-router-dom\";\nimport UnitForm from \"./UnitForm\";\nimport { useDataContext } from \"../../../contexts/DataContext\";\n\nconst UnitList = () => {\n  var [unitObjects, setUnitObjects] = useState({});\n  var [currentId, setCurrentId] = useState(\"\");\n  var [searchTerm, setSearchTerm] = useState(\"\");\n  const { unitList, setUnitList } = useDataContext();\n\n  // useEffect(() => {\n  //   firebaseDb.ref(\"unit/\").on(\"value\", (snapshot) => {\n  //     if (snapshot.val() != null)\n  //       setUnitObjects({\n  //         ...snapshot.val(),\n  //       });\n  //     else setUnitObjects({});\n  //   });\n  // }, []);\n\n  const addOrEdit = (obj) => {\n    console.log(\"inside addOrEdit\");\n    if (currentId == \"\") {\n      swal(\"Nice!\", \"A new unit is added!\", \"success\");\n      firebaseDb.ref(\"unit/\").push(obj, (err) => {\n        if (err) console.log(err);\n        else setCurrentId(\"\");\n      });\n    } else {\n      swal(\"Nice!\", \"This unit is updated!\", \"success\");\n      firebaseDb.ref(`unit/${currentId}`).set(obj, (err) => {\n        if (err) console.log(err);\n        else setCurrentId(\"\");\n      });\n    }\n  };\n\n  const onDelete = (key) => {\n    if (window.confirm(\"Are you sure to delete this record?\")) {\n      firebaseDb.ref(`unit/${key}`).remove((err) => {\n        if (err) console.log(err);\n        else setCurrentId(\"\");\n      });\n    }\n  };\n\n  const filteredUnit = (unitList, searchTerm) => {\n    if (!searchTerm) {\n      return unitList;\n    }\n    return Object.keys(unitList)\n      .filter((id) =>\n        unitList[id].unitName.toLowerCase().includes(searchTerm.toLowerCase())\n      )\n      .reduce((res, key) => ((res[key] = unitList[key]), res), {});\n  };\n\n  return (\n    <Fragment>\n      <div className=\"row\">\n        <div className=\"col-xl-12 col-lg-12\">\n          <h2 className=\"text-black font-w600 mb-1\">Product Unit Settings</h2>\n          <div className=\"mt-4\">\n            <UnitForm {...{ addOrEdit, currentId, setCurrentId, unitList }} />\n          </div>\n          <Row>\n            <Col lg={12}>\n              <Card>\n                <Card.Header>\n                  <Card.Title>Product Unit</Card.Title>\n                </Card.Header>\n                <Card.Body>\n                  <div className=\"search_bar dropdown show mb-3\">\n                    <div className=\"dropdown-menushow\">\n                      <form onSubmit={(e) => e.preventDefault()}>\n                        <input\n                          className=\"form-control\"\n                          type=\"search\"\n                          placeholder=\"Search Unit\"\n                          aria-label=\"Search\"\n                          onChange={(event) =>\n                            setSearchTerm(event.target.value)\n                          }\n                        />\n                      </form>\n                    </div>\n                  </div>\n                  <Table responsive>\n                    <thead>\n                      <tr>\n                        <th>\n                          <strong></strong>\n                        </th>\n                        <th>\n                          <strong>NAME</strong>\n                        </th>\n                        <th>\n                          <strong>ABBREVIATION</strong>\n                        </th>\n                        <th>\n                          <strong>DATE ADDDED</strong>\n                        </th>\n                        <th>\n                          <strong>STATUS</strong>\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {Object.keys(filteredUnit(unitList, searchTerm)).map(\n                        (id) => {\n                          return (\n                            <tr key={id}>\n                              <td>\n                                <div className=\"d-flex\">\n                                  <Button\n                                    onClick={() => {\n                                      setCurrentId(id);\n                                      window.scrollTo({\n                                        top: 0,\n                                        behavior: \"smooth\",\n                                      });\n                                    }}\n                                    className=\"btn btn-primary btn-xs  mr-1\"\n                                  >\n                                    Edit\n                                  </Button>\n                                </div>\n                              </td>\n                              <td>{unitList[id].unitName}</td>\n                              <td>{unitList[id].abbreviation}</td>\n                              <td>{unitList[id].dateAdded}</td>\n                              <td>\n                                {!unitList[id].isActive ? (\n                                  <Badge variant=\"danger light\">\n                                    {\" \"}\n                                    INACTIVE{\" \"}\n                                  </Badge>\n                                ) : (\n                                  <Badge variant=\"primary light\">\n                                    {\" \"}\n                                    ACTIVE{\" \"}\n                                  </Badge>\n                                )}\n                              </td>\n                              <td>\n                                <Button\n                                  onClick={() => {\n                                    onDelete(id);\n                                  }}\n                                  className=\"btn btn-danger btn-xs  mr-1\"\n                                >\n                                  Delete\n                                </Button>\n                              </td>\n                            </tr>\n                          );\n                        }\n                      )}\n                    </tbody>\n                  </Table>\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default UnitList;\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Settings/UnitForm.js",["1013","1014","1015"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport firebaseDb from \"../../../firebase\";\nimport { Button } from \"react-bootstrap\";\n\nconst UnitForm = (props) => {\n  const initialFieldValues = {\n    unitName: \"\",\n    abbreviation: \"\",\n    dateAdded: new Date().toLocaleString(),\n    isActive: \"true\",\n  };\n\n  var [values, setValues] = useState(initialFieldValues);\n  var [unitObjects, setUnitObjects] = useState({});\n\n  useEffect(() => {\n    firebaseDb.ref(\"unit/\").on(\"value\", (snapshot) => {\n      if (snapshot.val() != null)\n        setUnitObjects({\n          ...snapshot.val(),\n        });\n      else setUnitObjects({});\n    });\n  }, []);\n\n  useEffect(() => {\n    if (props.currentId == \"\")\n      setValues({\n        ...initialFieldValues,\n      });\n    else\n      setValues({\n        ...props.unitObjects[props.currentId],\n      });\n  }, [props.currentId, props.unitObjects]);\n\n  const handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const name = target.name;\n\n    setValues({\n      ...values,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = (event) => {\n    event.preventDefault();\n    props.addOrEdit(values);\n  };\n\n  const enabled = values.unitName != null;\n  return (\n    <Fragment>\n      <div className=\"row\">\n        <div className=\"col-xl-12 col-lg-12\">\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <h4 className=\"card-title\">\n                {props.currentId === \"\" ? \"Add\" : \"Update\"} Unit\n              </h4>\n              {props.currentId !== \"\" && (\n                <Button\n                  onClick={() => {\n                    props.setCurrentId(\"\");\n                  }}\n                  className=\"btn btn-primary light btn-xs  mr-1\"\n                >\n                  Add new Product Unit\n                </Button>\n              )}\n            </div>\n            <div className=\"card-body\">\n              <div className=\"basic-form\">\n                <form onSubmit={handleFormSubmit}>\n                  <div className=\"form-row\">\n                    <div className=\"form-group col-md-12\">\n                      <label>Name</label>\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Name\"\n                        name=\"unitName\"\n                        value={values.unitName}\n                        onChange={handleInputChange}\n                        required\n                      />\n                    </div>\n                  </div>\n                  <div className=\"form-row\">\n                    <div className=\"form-group col-md-12\">\n                      <label>Abbreviation</label>\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Abbreviation\"\n                        name=\"abbreviation\"\n                        value={values.abbreviation}\n                        onChange={handleInputChange}\n                        required\n                      />\n                    </div>\n                  </div>\n                  <div className=\"form-row\">\n                    <div className=\"custom-control custom-checkbox mb-3\">\n                      <input\n                        name=\"isActive\"\n                        type=\"checkbox\"\n                        defaultChecked={values.isActive}\n                        checked={values.isActive}\n                        onChange={handleInputChange}\n                        className=\"custom-control-input\"\n                        id=\"isActiveChkBox\"\n                      />\n                      <label\n                        className=\"custom-control-label\"\n                        htmlFor=\"isActiveChkBox\"\n                      >\n                        Is Active?\n                      </label>\n                    </div>\n                  </div>\n                  <div className=\"form-row\">\n                    <div className=\"form-group col-md-12 mt-4\">\n                      <input\n                        type=\"submit\"\n                        value={\n                          props.currentId === \"\"\n                            ? \"Add Product Unit\"\n                            : \"Update Product Unit\"\n                        }\n                        className=\"btn btn-primary\"\n                        disabled={!enabled}\n                      />\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default UnitForm;\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Settings/DeliveryFeeList.js",["1016","1017","1018","1019","1020"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport firebaseDb from \"../../../firebase\";\nimport swal from \"sweetalert\";\nimport { Row, Col, Card, Table, Badge, Button } from \"react-bootstrap\";\n\nimport DeliveryFeeForm from \"./DeliveryFeeForm\";\nimport { useDataContext } from \"../../../contexts/DataContext\";\n\nconst DeliveryFeeList = () => {\n  var [deliveryFeeObjects, setDeliveryFeeObjects] = useState({});\n  var [currentId, setCurrentId] = useState(\"\");\n  const { deliveryFeeList, setDeliveryFeeList } = useDataContext();\n  var [searchTerm, setSearchTerm] = useState(\"\");\n\n  // useEffect(() => {\n  //   firebaseDb.ref(\"delivery/\").on(\"value\", (snapshot) => {\n  //     if (snapshot.val() != null)\n  //       setDeliveryFeeObjects({\n  //         ...snapshot.val(),\n  //       });\n  //     else setDeliveryFeeObjects({});\n  //   });\n  // }, []);\n\n  const addOrEdit = (obj) => {\n    if (currentId === \"\") {\n      swal(\"Nice!\", \"A new delivery fee is added!\", \"success\");\n      firebaseDb.ref(\"delivery/\").push(obj, (err) => {\n        if (err) console.log(err);\n        else setCurrentId(\"\");\n      });\n    } else {\n      swal(\"Nice!\", \"This delivery fee is updated!\", \"success\");\n      firebaseDb.ref(`delivery/${currentId}`).set(obj, (err) => {\n        if (err) console.log(err);\n        else setCurrentId(\"\");\n      });\n    }\n  };\n\n  const onDelete = (key) => {\n    if (window.confirm(\"Are you sure to delete this record?\")) {\n      firebaseDb.ref(`delivery/${key}`).remove((err) => {\n        if (err) console.log(err);\n        else setCurrentId(\"\");\n      });\n    }\n  };\n\n  const filteredDeliveryFee = (deliveryFeeList, searchTerm) => {\n    if (!searchTerm) {\n      return deliveryFeeList;\n    }\n    return Object.keys(deliveryFeeList)\n      .filter((id) =>\n        deliveryFeeList[id].location\n          .toLowerCase()\n          .includes(searchTerm.toLowerCase())\n      )\n      .reduce((res, key) => ((res[key] = deliveryFeeList[key]), res), {});\n  };\n\n  return (\n    <Fragment>\n      <div className=\"row\">\n        <div className=\"col-xl-12 col-lg-12\">\n          <h2 className=\"text-black font-w600 mb-1\">Delivery Fee Settings</h2>\n          <div className=\"mt-4\">\n            <DeliveryFeeForm\n              {...{ addOrEdit, currentId, setCurrentId, deliveryFeeList }}\n            />\n          </div>\n\n          <Row>\n            <Col lg={12}>\n              <Card>\n                <Card.Header>\n                  <Card.Title>Delivery Fee</Card.Title>\n                </Card.Header>\n                <Card.Body>\n                  <div className=\"search_bar dropdown show mb-3\">\n                    <div className=\"dropdown-menushow\">\n                      <form onSubmit={(e) => e.preventDefault()}>\n                        <input\n                          className=\"form-control\"\n                          type=\"search\"\n                          placeholder=\"Search Delivery Location\"\n                          aria-label=\"Search\"\n                          onChange={(event) =>\n                            setSearchTerm(event.target.value)\n                          }\n                        />\n                      </form>\n                    </div>\n                  </div>\n                  <Table responsive>\n                    <thead>\n                      <tr>\n                        <th>\n                          <strong></strong>\n                        </th>\n                        <th>\n                          <strong>LOCATION</strong>\n                        </th>\n                        <th>\n                          <strong>DELIVERY FEE</strong>\n                        </th>\n                        {/* <th>\n                          <strong>DATE ADDDED</strong>\n                        </th> */}\n                        <th>\n                          <strong>STATUS</strong>\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {Object.keys(\n                        filteredDeliveryFee(deliveryFeeList, searchTerm)\n                      ).map((id) => {\n                        return (\n                          <tr key={id}>\n                            <td>\n                              {![\"Free Delivery\", \"Custom\"].includes(\n                                deliveryFeeList[id].location\n                              ) && (\n                                <Button\n                                  onClick={() => {\n                                    setCurrentId(id);\n                                    window.scrollTo({\n                                      top: 0,\n                                      behavior: \"smooth\",\n                                    });\n                                  }}\n                                  className=\"btn btn-primary btn-xs  mr-1\"\n                                >\n                                  Edit\n                                </Button>\n                              )}\n                            </td>\n                            <td>{deliveryFeeList[id].location}</td>\n                            <td>₱ {deliveryFeeList[id].deliveryFee}</td>\n                            {/* <td>{deliveryFeeObjects[id].dateAdded}</td> */}\n                            <td>\n                              {!deliveryFeeList[id].isActive ? (\n                                <Badge variant=\"danger light\"> INACTIVE </Badge>\n                              ) : (\n                                <Badge variant=\"primary light\"> ACTIVE </Badge>\n                              )}\n                            </td>\n                            <td>\n                              {![\"Free Delivery\", \"Custom\"].includes(\n                                deliveryFeeList[id].location\n                              ) && (\n                                <Button\n                                  onClick={() => {\n                                    onDelete(id);\n                                  }}\n                                  className=\"btn btn-danger btn-xs  mr-1\"\n                                >\n                                  Delete\n                                </Button>\n                              )}\n                            </td>\n                          </tr>\n                        );\n                      })}\n                    </tbody>\n                  </Table>\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default DeliveryFeeList;\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Settings/DeliveryFeeForm.js",["1021"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport Select from \"react-select\";\nimport { useDataContext } from \"../../../contexts/DataContext\";\n\nconst DeliveryFeeForm = (props) => {\n  const { deliveryLocationList } = useDataContext();\n  const [deliveryLocation, setDeliveryLocation] = useState();\n  const initialFieldValues = {\n    location: \"\",\n    deliveryFee: \"\",\n    dateAdded: new Date().toLocaleString(),\n    isActive: \"true\",\n  };\n\n  var [values, setValues] = useState(initialFieldValues);\n\n  useEffect(() => {\n    if (props.currentId === \"\")\n      setValues({\n        ...initialFieldValues,\n      });\n    else\n      setValues({\n        ...props.deliveryFeeObjects[props.currentId],\n      });\n  }, [props.currentId, props.deliveryFeeObjects]);\n\n  const handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const name = target.name;\n\n    setValues({\n      ...values,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = (event) => {\n    event.preventDefault();\n    props.addOrEdit(values);\n  };\n\n  // prepares delivery locations data for combobox\n  const deliveryOptions = [];\n  if (deliveryLocationList) {\n    Object.keys(deliveryLocationList).map((id) => {\n      return deliveryOptions.push({\n        value: deliveryLocationList[id].completeLocation,\n        label: deliveryLocationList[id].completeLocation,\n        location: deliveryLocationList[id],\n      });\n    });\n  }\n\n  useEffect(() => {\n    setValues((prev) => ({\n      ...prev,\n      location: deliveryLocation && deliveryLocation.value,\n    }));\n  }, [deliveryLocation]);\n\n  // styles for combobox\n  const customStyles = {\n    option: (provided, state) => ({\n      color: state.isSelected ? \"green\" : \"\",\n      padding: 20,\n    }),\n    control: () => ({\n      // none of react-select's styles are passed to <Control />\n      width: 500,\n    }),\n    singleValue: (provided, state) => {\n      const opacity = state.isDisabled ? 0.5 : 1;\n      const transition = \"opacity 300ms\";\n\n      return { ...provided, opacity, transition };\n    },\n  };\n\n  const enabled = values.location != null && values.deliveryFee >= 0;\n  return (\n    <Fragment>\n      <div className=\"row\">\n        <div className=\"col-xl-12 col-lg-12\">\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <h4 className=\"card-title\">\n                {props.currentId === \"\" ? \"Add\" : \"Update\"} Delivery Fee\n              </h4>\n              {props.currentId !== \"\" && (\n                <Button\n                  onClick={() => {\n                    props.setCurrentId(\"\");\n                  }}\n                  className=\"btn btn-primary light btn-xs  mr-1\"\n                >\n                  Add new Delivery Fee\n                </Button>\n              )}\n            </div>\n            <div className=\"card-body\">\n              <div className=\"basic-form\">\n                <form onSubmit={handleFormSubmit}>\n                  <div className=\"form-row\">\n                    <div className=\"form-group col-md-12\">\n                      <label>Location</label>\n                      <Select\n                        className={\"form-control\"}\n                        name=\"location\"\n                        defaultValue={\"Choose Location\"}\n                        onChange={setDeliveryLocation}\n                        options={deliveryOptions}\n                        styles={customStyles}\n                        components={{\n                          DropdownIndicator: () => null,\n                          IndicatorSeparator: () => null,\n                        }}\n                      />\n                    </div>\n                  </div>\n                  <div className=\"form-row\">\n                    <div className=\"form-group col-md-12\">\n                      <label>Delivery Fee</label>\n                      <input\n                        type=\"number\"\n                        className=\"form-control\"\n                        placeholder=\"0\"\n                        name=\"deliveryFee\"\n                        value={values.deliveryFee}\n                        onChange={handleInputChange}\n                        required\n                      />\n                    </div>\n                  </div>\n                  <div className=\"form-row\">\n                    <div className=\"custom-control custom-checkbox mb-3\">\n                      <input\n                        name=\"isActive\"\n                        type=\"checkbox\"\n                        defaultChecked={values.isActive}\n                        checked={values.isActive}\n                        onChange={handleInputChange}\n                        className=\"custom-control-input\"\n                        id=\"isActiveChkBox\"\n                      />\n                      <label\n                        className=\"custom-control-label\"\n                        htmlFor=\"isActiveChkBox\"\n                      >\n                        Is Active?\n                      </label>\n                    </div>\n                  </div>\n                  <div className=\"form-row\">\n                    <div className=\"form-group col-md-12 mt-4\">\n                      <input\n                        type=\"submit\"\n                        value={\n                          props.currentId === \"\"\n                            ? \"Add Delivery Fee\"\n                            : \"Update Delivery Fee\"\n                        }\n                        className=\"btn btn-primary\"\n                        disabled={!enabled}\n                      />\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default DeliveryFeeForm;\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Settings/DeliveryLocationList.js",["1022","1023","1024","1025","1026"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport firebaseDb from \"../../../firebase\";\nimport swal from \"sweetalert\";\nimport { Row, Col, Card, Table, Badge, Button } from \"react-bootstrap\";\n\nimport DeliveryLocationForm from \"./DeliveryLocationForm\";\nimport { useDataContext } from \"../../../contexts/DataContext\";\n\nconst DeliveryLocationList = () => {\n  var [deliveryLocationObjects, setDeliveryLocationObjects] = useState({});\n  var [currentId, setCurrentId] = useState(\"\");\n  var [searchTerm, setSearchTerm] = useState(\"\");\n  const { deliveryLocationList, setDeliveryLocationList } = useDataContext();\n\n  // useEffect(() => {\n  //   firebaseDb.ref(\"deliveryLocations/\").on(\"value\", (snapshot) => {\n  //     if (snapshot.val() != null)\n  //       setDeliveryLocationObjects({\n  //         ...snapshot.val(),\n  //       });\n  //     else setDeliveryLocationObjects({});\n  //   });\n  // }, []);\n\n  const addOrEdit = (obj) => {\n    console.log(\"inside addOrEdit\");\n    if (currentId === \"\") {\n      swal(\"Nice!\", \"A new delivery location is added!\", \"success\");\n      console.log(obj);\n      firebaseDb.ref(`deliveryLocations/`).push(obj, (err) => {\n        if (err) {\n          console.log(err);\n        } else setCurrentId(\"\");\n      });\n    } else {\n      swal(\"Nice!\", \"This delivery location is updated!\", \"success\");\n      firebaseDb.ref(`deliveryLocations/${currentId}`).set(obj, (err) => {\n        if (err) console.log(err);\n        else setCurrentId(\"\");\n      });\n    }\n  };\n\n  const onDelete = (key) => {\n    if (window.confirm(\"Are you sure to delete this record?\")) {\n      firebaseDb.ref(`deliveryLocations/${key}`).remove((err) => {\n        if (err) console.log(err);\n        else setCurrentId(\"\");\n      });\n    }\n  };\n\n  const filteredDeliveryLocations = (deliveryLocationList, searchTerm) => {\n    if (!searchTerm) {\n      return deliveryLocationList;\n    }\n    return Object.keys(deliveryLocationList)\n      .filter((id) =>\n        deliveryLocationList[id].completeLocation\n          .toLowerCase()\n          .includes(searchTerm.toLowerCase())\n      )\n      .reduce((res, key) => ((res[key] = deliveryLocationList[key]), res), {});\n  };\n\n  return (\n    <Fragment>\n      <div className=\"row\">\n        <div className=\"col-xl-12 col-lg-12\">\n          <h2 className=\"text-black font-w600 mb-1\">\n            Supported Delivery Location Settings\n          </h2>\n          <div className=\"mt-4\">\n            <DeliveryLocationForm\n              {...{\n                addOrEdit,\n                currentId,\n                setCurrentId,\n                deliveryLocationList,\n              }}\n            />\n          </div>\n\n          <Row>\n            <Col lg={12}>\n              <Card>\n                <Card.Header>\n                  <Card.Title>Supported Delivery Locations</Card.Title>\n                </Card.Header>\n                <Card.Body>\n                  <div className=\"search_bar dropdown show mb-3\">\n                    <div className=\"dropdown-menushow\">\n                      <form onSubmit={(e) => e.preventDefault()}>\n                        <input\n                          className=\"form-control\"\n                          type=\"search\"\n                          placeholder=\"Search Delivery Location\"\n                          aria-label=\"Search\"\n                          onChange={(event) =>\n                            setSearchTerm(event.target.value)\n                          }\n                        />\n                      </form>\n                    </div>\n                  </div>\n                  <Table responsive>\n                    <thead>\n                      <tr>\n                        <th>\n                          <strong></strong>\n                        </th>\n                        {/* <th>\n                          <strong>REGION</strong>\n                        </th>\n                        <th>\n                          <strong>PROVINCE</strong>\n                        </th>\n                        <th>\n                          <strong>CITY</strong>\n                        </th>\n                        <th>\n                          <strong>BARANGAY</strong>\n                        </th> */}\n                        <th>\n                          <strong>LOCATION</strong>\n                        </th>\n                        <th>\n                          <strong>LATITUDE</strong>\n                        </th>\n                        <th>\n                          <strong>LONGITUDE</strong>\n                        </th>\n                        <th>\n                          <strong>STATUS</strong>\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {Object.keys(\n                        filteredDeliveryLocations(\n                          deliveryLocationList,\n                          searchTerm\n                        )\n                      ).map((id) => {\n                        return (\n                          <tr key={id}>\n                            <td>\n                              <Button\n                                onClick={() => {\n                                  setCurrentId(id);\n                                  window.scrollTo({\n                                    top: 0,\n                                    behavior: \"smooth\",\n                                  });\n                                }}\n                                className=\"btn btn-primary btn-xs  mr-1\"\n                              >\n                                Edit\n                              </Button>\n                            </td>\n\n                            {/* <td>{deliveryLocationObjects[id].region}</td>\n                            <td>{deliveryLocationObjects[id].province}</td>\n                            <td>{deliveryLocationObjects[id].city}</td>\n                            <td>{deliveryLocationObjects[id].barangay}</td> */}\n                            <td>{deliveryLocationList[id].completeLocation}</td>\n                            <td>{deliveryLocationList[id].latitude}</td>\n                            <td>{deliveryLocationList[id].longitude}</td>\n                            <td>\n                              {!deliveryLocationList[id].isActive ? (\n                                <Badge variant=\"danger light\"> INACTIVE </Badge>\n                              ) : (\n                                <Badge variant=\"primary light\"> ACTIVE </Badge>\n                              )}\n                            </td>\n                            <td>\n                              <Button\n                                onClick={() => {\n                                  onDelete(id);\n                                }}\n                                className=\"btn btn-danger btn-xs  mr-1\"\n                              >\n                                Delete\n                              </Button>\n                            </td>\n                          </tr>\n                        );\n                      })}\n                    </tbody>\n                  </Table>\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default DeliveryLocationList;\n","/Users/nicolasjameschiong/Documents/Development/veggiego-admin/src/jsx/components/Settings/DeliveryLocationForm.js",["1027","1028"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport firebaseDb from \"../../../firebase\";\nimport { Button } from \"react-bootstrap\";\n\nconst DeliveryLocationForm = (props) => {\n  const initialFieldValues = {\n    region: \"Region VIII (Eastern Visayas)\",\n    province: \"Leyte\",\n    city: \"Ormoc City\",\n    barangay: \"\",\n    completeLocation: \"Region VIII (Eastern Visayas), Leyte, Ormoc City\",\n    longitude: \"\",\n    latitude: \"\",\n    dateAdded: new Date().toLocaleString(),\n    isActive: \"true\",\n  };\n\n  var [values, setValues] = useState(initialFieldValues);\n  var [deliveryLocationObjects, setDeliveryLocationObjects] = useState({});\n\n  useEffect(() => {\n    firebaseDb.ref(\"deliveryLocations/\").on(\"value\", (snapshot) => {\n      if (snapshot.val() != null)\n        setDeliveryLocationObjects({\n          ...snapshot.val(),\n        });\n      else setDeliveryLocationObjects({});\n    });\n  }, []);\n\n  useEffect(() => {\n    if (props.currentId === \"\")\n      setValues({\n        ...initialFieldValues,\n      });\n    else\n      setValues({\n        ...props.deliveryLocationObjects[props.currentId],\n      });\n  }, [props.currentId, props.deliveryLocationObjects]);\n\n  const handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const name = target.name;\n\n    setValues({\n      ...values,\n      [name]: value,\n      completeLocation:\n        values.barangay +\n        \", \" +\n        values.city +\n        \", \" +\n        values.province +\n        \", \" +\n        values.region,\n    });\n  };\n\n  const handleFormSubmit = (event) => {\n    event.preventDefault();\n    props.addOrEdit(values);\n  };\n\n  const enabled = values.city != null && values.barangay != null;\n  return (\n    <Fragment>\n      <div className=\"row\">\n        <div className=\"col-xl-12 col-lg-12\">\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <h4 className=\"card-title\">\n                {props.currentId === \"\" ? \"Add\" : \"Update\"} Delivery Location\n              </h4>\n              {props.currentId !== \"\" && (\n                <Button\n                  onClick={() => {\n                    props.setCurrentId(\"\");\n                  }}\n                  className=\"btn btn-primary light btn-xs  mr-1\"\n                >\n                  Add new Delivery Location\n                </Button>\n              )}\n            </div>\n            <div className=\"card-body\">\n              <div className=\"basic-form\">\n                <form onSubmit={handleFormSubmit}>\n                  <div className=\"form-row\">\n                    <div className=\"form-group col-md-6\">\n                      <label>Region</label>\n                      <select\n                        id=\"inputState\"\n                        className=\"form-control\"\n                        name=\"region\"\n                        value={values.region}\n                        onChange={handleInputChange}\n                        required\n                        defaultValue=\"Region VIII (Eastern Visayas)\"\n                      >\n                        <option>Choose Province</option>\n                        <option\n                          value=\"Region VIII (Eastern Visayas)\"\n                          defaultValue\n                        >\n                          Region VIII (Eastern Visayas)\n                        </option>\n                      </select>\n                    </div>\n                    <div className=\"form-group col-md-6\">\n                      <label>Province</label>\n                      <select\n                        defaultValue=\"Leyte\"\n                        id=\"inputState\"\n                        className=\"form-control\"\n                        name=\"province\"\n                        value={values.province}\n                        onChange={handleInputChange}\n                        required\n                      >\n                        <option value=\"Leyte\" defaultValue>\n                          Leyte\n                        </option>\n                        <option value=\"Eastern Samar\">Eastern Samar</option>\n\n                        <option value=\"Northern Samar\">Northern Samar</option>\n                        <option value=\"Samar (Western Samar)\">\n                          Samar (Western Samar)\n                        </option>\n                        <option value=\"Southern Leyte\">Southern Leyte</option>\n                        <option value=\"Biliran\">Biliran</option>\n                      </select>\n                    </div>\n                  </div>\n                  <div className=\"form-row\">\n                    <div className=\"form-group col-md-6\">\n                      <label>City</label>\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Enter a City\"\n                        name=\"city\"\n                        value={values.city}\n                        onChange={handleInputChange}\n                        required\n                      />\n                      {/* <select\n                        defaultValue=\"Select City\"\n                        id=\"inputState\"\n                        className=\"form-control\"\n                        name=\"city\"\n                        value={values.city}\n                        onChange={handleInputChange}\n                        required\n                      >\n                        <option value=\"Ormoc City\">Ormoc City</option>\n                      </select> */}\n                    </div>\n                    <div className=\"form-group col-md-6\">\n                      <label>Barangay</label>\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Enter a Barangay\"\n                        name=\"barangay\"\n                        value={values.barangay}\n                        onChange={handleInputChange}\n                        required\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"form-row\">\n                    <div className=\"form-group col-md-12\">\n                      <label>Complete Location</label>\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        name=\"completeLocation\"\n                        value={\n                          values.barangay +\n                          \", \" +\n                          values.city +\n                          \", \" +\n                          values.province +\n                          \", \" +\n                          values.region\n                        }\n                        disabled\n                      />\n                    </div>\n                  </div>\n                  <div className=\"form-row\">\n                    <div className=\"form-group col-md-6\">\n                      <label>Latitude</label>\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Latitude\"\n                        name=\"latitude\"\n                        value={values.latitude}\n                        onChange={handleInputChange}\n                        required\n                      />\n                    </div>\n                    <div className=\"form-group col-md-6\">\n                      <label>Longitude</label>\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Longitude\"\n                        name=\"longitude\"\n                        value={values.longitude}\n                        onChange={handleInputChange}\n                        required\n                      />\n                    </div>\n                  </div>\n                  <div className=\"form-row\">\n                    <div className=\"custom-control custom-checkbox mb-3\">\n                      <input\n                        name=\"isActive\"\n                        type=\"checkbox\"\n                        defaultChecked={values.isActive}\n                        checked={values.isActive}\n                        onChange={handleInputChange}\n                        className=\"custom-control-input\"\n                        id=\"isActiveChkBox\"\n                      />\n                      <label\n                        className=\"custom-control-label\"\n                        htmlFor=\"isActiveChkBox\"\n                      >\n                        Is Active?\n                      </label>\n                    </div>\n                  </div>\n                  <div className=\"form-row\">\n                    <div className=\"form-group col-md-12 mt-4\">\n                      <input\n                        type=\"submit\"\n                        value={\n                          props.currentId === \"\"\n                            ? \"Add Delivery Location\"\n                            : \"Update Delivery Location\"\n                        }\n                        className=\"btn btn-primary\"\n                        disabled={!enabled}\n                      />\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default DeliveryLocationForm;\n",{"ruleId":"1029","replacedBy":"1030"},{"ruleId":"1031","replacedBy":"1032"},{"ruleId":"1033","severity":1,"message":"1034","line":4,"column":43,"nodeType":"1035","messageId":"1036","endLine":4,"endColumn":48},{"ruleId":"1033","severity":1,"message":"1037","line":15,"column":8,"nodeType":"1035","messageId":"1036","endLine":15,"endColumn":11},{"ruleId":"1033","severity":1,"message":"1038","line":16,"column":8,"nodeType":"1035","messageId":"1036","endLine":16,"endColumn":14},{"ruleId":"1033","severity":1,"message":"1039","line":80,"column":8,"nodeType":"1035","messageId":"1036","endLine":80,"endColumn":18},{"ruleId":"1033","severity":1,"message":"1040","line":123,"column":8,"nodeType":"1035","messageId":"1036","endLine":123,"endColumn":22},{"ruleId":"1033","severity":1,"message":"1041","line":131,"column":10,"nodeType":"1035","messageId":"1036","endLine":131,"endColumn":21},{"ruleId":"1033","severity":1,"message":"1042","line":131,"column":23,"nodeType":"1035","messageId":"1036","endLine":131,"endColumn":37},{"ruleId":"1033","severity":1,"message":"1041","line":12,"column":10,"nodeType":"1035","messageId":"1036","endLine":12,"endColumn":21},{"ruleId":"1033","severity":1,"message":"1043","line":2,"column":10,"nodeType":"1035","messageId":"1036","endLine":2,"endColumn":14},{"ruleId":"1044","severity":1,"message":"1045","line":10,"column":16,"nodeType":"1046","endLine":10,"endColumn":67},{"ruleId":"1033","severity":1,"message":"1047","line":15,"column":12,"nodeType":"1035","messageId":"1036","endLine":15,"endColumn":19},{"ruleId":"1033","severity":1,"message":"1043","line":2,"column":10,"nodeType":"1035","messageId":"1036","endLine":2,"endColumn":14},{"ruleId":"1033","severity":1,"message":"1048","line":7,"column":3,"nodeType":"1035","messageId":"1036","endLine":7,"endColumn":6},{"ruleId":"1033","severity":1,"message":"1049","line":13,"column":3,"nodeType":"1035","messageId":"1036","endLine":13,"endColumn":14},{"ruleId":"1033","severity":1,"message":"1037","line":14,"column":3,"nodeType":"1035","messageId":"1036","endLine":14,"endColumn":6},{"ruleId":"1033","severity":1,"message":"1050","line":15,"column":3,"nodeType":"1035","messageId":"1036","endLine":15,"endColumn":6},{"ruleId":"1033","severity":1,"message":"1051","line":19,"column":22,"nodeType":"1035","messageId":"1036","endLine":19,"endColumn":33},{"ruleId":"1052","severity":1,"message":"1053","line":36,"column":39,"nodeType":"1054","messageId":"1055","endLine":36,"endColumn":41},{"ruleId":"1056","severity":1,"message":"1057","line":51,"column":6,"nodeType":"1058","endLine":51,"endColumn":17,"suggestions":"1059"},{"ruleId":"1052","severity":1,"message":"1053","line":60,"column":39,"nodeType":"1054","messageId":"1055","endLine":60,"endColumn":41},{"ruleId":"1052","severity":1,"message":"1053","line":66,"column":53,"nodeType":"1054","messageId":"1055","endLine":66,"endColumn":55},{"ruleId":"1056","severity":1,"message":"1060","line":73,"column":6,"nodeType":"1058","endLine":73,"endColumn":17,"suggestions":"1061"},{"ruleId":"1052","severity":1,"message":"1053","line":331,"column":75,"nodeType":"1054","messageId":"1055","endLine":331,"endColumn":77},{"ruleId":"1033","severity":1,"message":"1062","line":14,"column":21,"nodeType":"1035","messageId":"1036","endLine":14,"endColumn":35},{"ruleId":"1056","severity":1,"message":"1063","line":48,"column":6,"nodeType":"1058","endLine":48,"endColumn":8,"suggestions":"1064"},{"ruleId":"1056","severity":1,"message":"1065","line":104,"column":6,"nodeType":"1058","endLine":104,"endColumn":31,"suggestions":"1066"},{"ruleId":"1067","severity":1,"message":"1068","line":141,"column":61,"nodeType":"1069","messageId":"1070","endLine":141,"endColumn":62},{"ruleId":"1067","severity":1,"message":"1068","line":151,"column":61,"nodeType":"1069","messageId":"1070","endLine":151,"endColumn":62},{"ruleId":"1033","severity":1,"message":"1071","line":24,"column":19,"nodeType":"1035","messageId":"1036","endLine":24,"endColumn":31},{"ruleId":"1056","severity":1,"message":"1072","line":38,"column":6,"nodeType":"1058","endLine":38,"endColumn":43,"suggestions":"1073"},{"ruleId":"1033","severity":1,"message":"1074","line":83,"column":9,"nodeType":"1035","messageId":"1036","endLine":83,"endColumn":17},{"ruleId":"1067","severity":1,"message":"1068","line":115,"column":60,"nodeType":"1069","messageId":"1070","endLine":115,"endColumn":61},{"ruleId":"1033","severity":1,"message":"1075","line":3,"column":8,"nodeType":"1035","messageId":"1036","endLine":3,"endColumn":17},{"ruleId":"1033","severity":1,"message":"1043","line":11,"column":10,"nodeType":"1035","messageId":"1036","endLine":11,"endColumn":14},{"ruleId":"1033","severity":1,"message":"1049","line":14,"column":3,"nodeType":"1035","messageId":"1036","endLine":14,"endColumn":14},{"ruleId":"1033","severity":1,"message":"1074","line":44,"column":9,"nodeType":"1035","messageId":"1036","endLine":44,"endColumn":17},{"ruleId":"1067","severity":1,"message":"1068","line":82,"column":61,"nodeType":"1069","messageId":"1070","endLine":82,"endColumn":62},{"ruleId":"1067","severity":1,"message":"1068","line":92,"column":59,"nodeType":"1069","messageId":"1070","endLine":92,"endColumn":60},{"ruleId":"1033","severity":1,"message":"1074","line":32,"column":9,"nodeType":"1035","messageId":"1036","endLine":32,"endColumn":17},{"ruleId":"1067","severity":1,"message":"1068","line":64,"column":57,"nodeType":"1069","messageId":"1070","endLine":64,"endColumn":58},{"ruleId":"1033","severity":1,"message":"1076","line":4,"column":8,"nodeType":"1035","messageId":"1036","endLine":4,"endColumn":17},{"ruleId":"1033","severity":1,"message":"1077","line":5,"column":8,"nodeType":"1035","messageId":"1036","endLine":5,"endColumn":17},{"ruleId":"1033","severity":1,"message":"1078","line":6,"column":8,"nodeType":"1035","messageId":"1036","endLine":6,"endColumn":17},{"ruleId":"1033","severity":1,"message":"1079","line":7,"column":8,"nodeType":"1035","messageId":"1036","endLine":7,"endColumn":17},{"ruleId":"1033","severity":1,"message":"1080","line":8,"column":8,"nodeType":"1035","messageId":"1036","endLine":8,"endColumn":17},{"ruleId":"1033","severity":1,"message":"1081","line":9,"column":8,"nodeType":"1035","messageId":"1036","endLine":9,"endColumn":17},{"ruleId":"1033","severity":1,"message":"1082","line":10,"column":8,"nodeType":"1035","messageId":"1036","endLine":10,"endColumn":17},{"ruleId":"1033","severity":1,"message":"1083","line":14,"column":10,"nodeType":"1035","messageId":"1036","endLine":14,"endColumn":18},{"ruleId":"1033","severity":1,"message":"1084","line":14,"column":20,"nodeType":"1035","messageId":"1036","endLine":14,"endColumn":26},{"ruleId":"1033","severity":1,"message":"1085","line":14,"column":28,"nodeType":"1035","messageId":"1036","endLine":14,"endColumn":33},{"ruleId":"1033","severity":1,"message":"1075","line":16,"column":8,"nodeType":"1035","messageId":"1036","endLine":16,"endColumn":17},{"ruleId":"1033","severity":1,"message":"1086","line":18,"column":10,"nodeType":"1035","messageId":"1036","endLine":18,"endColumn":20},{"ruleId":"1033","severity":1,"message":"1087","line":22,"column":11,"nodeType":"1035","messageId":"1036","endLine":22,"endColumn":22},{"ruleId":"1033","severity":1,"message":"1088","line":22,"column":24,"nodeType":"1035","messageId":"1036","endLine":22,"endColumn":38},{"ruleId":"1033","severity":1,"message":"1089","line":24,"column":11,"nodeType":"1035","messageId":"1036","endLine":24,"endColumn":17},{"ruleId":"1033","severity":1,"message":"1090","line":26,"column":10,"nodeType":"1035","messageId":"1036","endLine":26,"endColumn":17},{"ruleId":"1033","severity":1,"message":"1091","line":18,"column":19,"nodeType":"1035","messageId":"1036","endLine":18,"endColumn":28},{"ruleId":"1033","severity":1,"message":"1092","line":19,"column":20,"nodeType":"1035","messageId":"1036","endLine":19,"endColumn":30},{"ruleId":"1033","severity":1,"message":"1093","line":30,"column":32,"nodeType":"1035","messageId":"1036","endLine":30,"endColumn":54},{"ruleId":"1094","severity":1,"message":"1095","line":274,"column":28,"nodeType":"1046","endLine":274,"endColumn":40},{"ruleId":"1033","severity":1,"message":"1096","line":4,"column":8,"nodeType":"1035","messageId":"1036","endLine":4,"endColumn":16},{"ruleId":"1097","severity":1,"message":"1098","line":346,"column":43,"nodeType":"1099","messageId":"1100","endLine":346,"endColumn":62},{"ruleId":"1097","severity":1,"message":"1098","line":349,"column":43,"nodeType":"1099","messageId":"1100","endLine":349,"endColumn":62},{"ruleId":"1097","severity":1,"message":"1098","line":361,"column":43,"nodeType":"1099","messageId":"1100","endLine":361,"endColumn":62},{"ruleId":"1097","severity":1,"message":"1098","line":364,"column":43,"nodeType":"1099","messageId":"1100","endLine":364,"endColumn":62},{"ruleId":"1097","severity":1,"message":"1098","line":374,"column":43,"nodeType":"1099","messageId":"1100","endLine":374,"endColumn":62},{"ruleId":"1097","severity":1,"message":"1098","line":377,"column":43,"nodeType":"1099","messageId":"1100","endLine":377,"endColumn":62},{"ruleId":"1097","severity":1,"message":"1098","line":387,"column":43,"nodeType":"1099","messageId":"1100","endLine":387,"endColumn":62},{"ruleId":"1097","severity":1,"message":"1098","line":390,"column":43,"nodeType":"1099","messageId":"1100","endLine":390,"endColumn":62},{"ruleId":"1097","severity":1,"message":"1098","line":401,"column":43,"nodeType":"1099","messageId":"1100","endLine":401,"endColumn":62},{"ruleId":"1097","severity":1,"message":"1098","line":404,"column":43,"nodeType":"1099","messageId":"1100","endLine":404,"endColumn":62},{"ruleId":"1094","severity":1,"message":"1095","line":280,"column":34,"nodeType":"1046","endLine":288,"endColumn":35},{"ruleId":"1094","severity":1,"message":"1095","line":296,"column":34,"nodeType":"1046","endLine":301,"endColumn":35},{"ruleId":"1094","severity":1,"message":"1095","line":305,"column":34,"nodeType":"1046","endLine":310,"endColumn":35},{"ruleId":"1094","severity":1,"message":"1095","line":85,"column":23,"nodeType":"1046","endLine":85,"endColumn":52},{"ruleId":"1094","severity":1,"message":"1095","line":60,"column":22,"nodeType":"1046","endLine":60,"endColumn":62},{"ruleId":"1101","severity":1,"message":"1102","line":327,"column":19,"nodeType":"1046","endLine":331,"endColumn":21},{"ruleId":"1101","severity":1,"message":"1102","line":349,"column":19,"nodeType":"1046","endLine":353,"endColumn":21},{"ruleId":"1101","severity":1,"message":"1102","line":383,"column":19,"nodeType":"1046","endLine":387,"endColumn":21},{"ruleId":"1033","severity":1,"message":"1103","line":27,"column":7,"nodeType":"1035","messageId":"1036","endLine":27,"endColumn":16},{"ruleId":"1104","severity":1,"message":"1105","line":104,"column":40,"nodeType":"1106","endLine":104,"endColumn":46},{"ruleId":"1104","severity":1,"message":"1105","line":171,"column":31,"nodeType":"1106","endLine":171,"endColumn":37},{"ruleId":"1104","severity":1,"message":"1105","line":190,"column":31,"nodeType":"1106","endLine":190,"endColumn":37},{"ruleId":"1104","severity":1,"message":"1105","line":212,"column":31,"nodeType":"1106","endLine":212,"endColumn":37},{"ruleId":"1033","severity":1,"message":"1084","line":10,"column":3,"nodeType":"1035","messageId":"1036","endLine":10,"endColumn":9},{"ruleId":"1094","severity":1,"message":"1095","line":121,"column":21,"nodeType":"1046","endLine":121,"endColumn":66},{"ruleId":"1094","severity":1,"message":"1095","line":124,"column":21,"nodeType":"1046","endLine":124,"endColumn":68},{"ruleId":"1094","severity":1,"message":"1095","line":304,"column":23,"nodeType":"1046","endLine":304,"endColumn":35},{"ruleId":"1094","severity":1,"message":"1095","line":312,"column":23,"nodeType":"1046","endLine":312,"endColumn":35},{"ruleId":"1094","severity":1,"message":"1095","line":320,"column":23,"nodeType":"1046","endLine":320,"endColumn":35},{"ruleId":"1094","severity":1,"message":"1095","line":341,"column":23,"nodeType":"1046","endLine":341,"endColumn":35},{"ruleId":"1094","severity":1,"message":"1095","line":349,"column":23,"nodeType":"1046","endLine":349,"endColumn":35},{"ruleId":"1094","severity":1,"message":"1095","line":357,"column":23,"nodeType":"1046","endLine":357,"endColumn":35},{"ruleId":"1033","severity":1,"message":"1107","line":4,"column":26,"nodeType":"1035","messageId":"1036","endLine":4,"endColumn":30},{"ruleId":"1033","severity":1,"message":"1108","line":1,"column":17,"nodeType":"1035","messageId":"1036","endLine":1,"endColumn":25},{"ruleId":"1033","severity":1,"message":"1109","line":5,"column":10,"nodeType":"1035","messageId":"1036","endLine":5,"endColumn":15},{"ruleId":"1033","severity":1,"message":"1110","line":5,"column":27,"nodeType":"1035","messageId":"1036","endLine":5,"endColumn":32},{"ruleId":"1094","severity":1,"message":"1095","line":87,"column":37,"nodeType":"1046","endLine":87,"endColumn":49},{"ruleId":"1094","severity":1,"message":"1095","line":223,"column":37,"nodeType":"1046","endLine":223,"endColumn":49},{"ruleId":"1094","severity":1,"message":"1095","line":359,"column":37,"nodeType":"1046","endLine":359,"endColumn":49},{"ruleId":"1094","severity":1,"message":"1095","line":495,"column":37,"nodeType":"1046","endLine":495,"endColumn":49},{"ruleId":"1094","severity":1,"message":"1095","line":631,"column":37,"nodeType":"1046","endLine":631,"endColumn":49},{"ruleId":"1094","severity":1,"message":"1095","line":767,"column":37,"nodeType":"1046","endLine":767,"endColumn":49},{"ruleId":"1094","severity":1,"message":"1095","line":903,"column":37,"nodeType":"1046","endLine":903,"endColumn":49},{"ruleId":"1094","severity":1,"message":"1095","line":1039,"column":37,"nodeType":"1046","endLine":1039,"endColumn":49},{"ruleId":"1094","severity":1,"message":"1095","line":1175,"column":37,"nodeType":"1046","endLine":1175,"endColumn":49},{"ruleId":"1094","severity":1,"message":"1095","line":1311,"column":37,"nodeType":"1046","endLine":1311,"endColumn":49},{"ruleId":"1094","severity":1,"message":"1095","line":1446,"column":37,"nodeType":"1046","endLine":1446,"endColumn":49},{"ruleId":"1094","severity":1,"message":"1095","line":1582,"column":37,"nodeType":"1046","endLine":1582,"endColumn":49},{"ruleId":"1111","severity":1,"message":"1112","line":52,"column":41,"nodeType":"1046","endLine":52,"endColumn":91},{"ruleId":"1104","severity":1,"message":"1105","line":1398,"column":34,"nodeType":"1106","endLine":1398,"endColumn":50},{"ruleId":"1104","severity":1,"message":"1105","line":1441,"column":34,"nodeType":"1106","endLine":1441,"endColumn":50},{"ruleId":"1033","severity":1,"message":"1043","line":2,"column":10,"nodeType":"1035","messageId":"1036","endLine":2,"endColumn":14},{"ruleId":"1033","severity":1,"message":"1113","line":1,"column":17,"nodeType":"1035","messageId":"1036","endLine":1,"endColumn":25},{"ruleId":"1033","severity":1,"message":"1114","line":16,"column":7,"nodeType":"1035","messageId":"1036","endLine":16,"endColumn":14},{"ruleId":"1033","severity":1,"message":"1115","line":7,"column":4,"nodeType":"1035","messageId":"1036","endLine":7,"endColumn":19},{"ruleId":"1116","severity":1,"message":"1117","line":35,"column":10,"nodeType":"1118","messageId":"1119","endLine":45,"endColumn":11},{"ruleId":"1116","severity":1,"message":"1117","line":35,"column":10,"nodeType":"1118","messageId":"1119","endLine":45,"endColumn":11},{"ruleId":"1033","severity":1,"message":"1120","line":5,"column":7,"nodeType":"1035","messageId":"1036","endLine":5,"endColumn":13},{"ruleId":"1033","severity":1,"message":"1121","line":6,"column":7,"nodeType":"1035","messageId":"1036","endLine":6,"endColumn":13},{"ruleId":"1033","severity":1,"message":"1120","line":5,"column":7,"nodeType":"1035","messageId":"1036","endLine":5,"endColumn":13},{"ruleId":"1033","severity":1,"message":"1121","line":6,"column":7,"nodeType":"1035","messageId":"1036","endLine":6,"endColumn":13},{"ruleId":"1033","severity":1,"message":"1122","line":3,"column":18,"nodeType":"1035","messageId":"1036","endLine":3,"endColumn":28},{"ruleId":"1033","severity":1,"message":"1123","line":4,"column":25,"nodeType":"1035","messageId":"1036","endLine":4,"endColumn":39},{"ruleId":"1033","severity":1,"message":"1124","line":6,"column":7,"nodeType":"1035","messageId":"1036","endLine":6,"endColumn":18},{"ruleId":"1125","severity":1,"message":"1126","line":9,"column":7,"nodeType":"1046","endLine":14,"endColumn":9},{"ruleId":"1033","severity":1,"message":"1127","line":4,"column":8,"nodeType":"1035","messageId":"1036","endLine":4,"endColumn":16},{"ruleId":"1033","severity":1,"message":"1128","line":1,"column":17,"nodeType":"1035","messageId":"1036","endLine":1,"endColumn":26},{"ruleId":"1033","severity":1,"message":"1128","line":1,"column":17,"nodeType":"1035","messageId":"1036","endLine":1,"endColumn":26},{"ruleId":"1033","severity":1,"message":"1128","line":1,"column":17,"nodeType":"1035","messageId":"1036","endLine":1,"endColumn":26},{"ruleId":"1033","severity":1,"message":"1128","line":1,"column":17,"nodeType":"1035","messageId":"1036","endLine":1,"endColumn":26},{"ruleId":"1033","severity":1,"message":"1128","line":1,"column":17,"nodeType":"1035","messageId":"1036","endLine":1,"endColumn":26},{"ruleId":"1033","severity":1,"message":"1128","line":1,"column":17,"nodeType":"1035","messageId":"1036","endLine":1,"endColumn":26},{"ruleId":"1033","severity":1,"message":"1129","line":29,"column":10,"nodeType":"1035","messageId":"1036","endLine":29,"endColumn":15},{"ruleId":"1033","severity":1,"message":"1130","line":11,"column":19,"nodeType":"1035","messageId":"1036","endLine":11,"endColumn":28},{"ruleId":"1033","severity":1,"message":"1128","line":1,"column":17,"nodeType":"1035","messageId":"1036","endLine":1,"endColumn":26},{"ruleId":"1033","severity":1,"message":"1128","line":1,"column":17,"nodeType":"1035","messageId":"1036","endLine":1,"endColumn":26},{"ruleId":"1131","severity":1,"message":"1132","line":23,"column":10,"nodeType":"1058","messageId":"1133","endLine":23,"endColumn":45},{"ruleId":"1056","severity":1,"message":"1072","line":33,"column":6,"nodeType":"1058","endLine":33,"endColumn":40,"suggestions":"1134"},{"ruleId":"1033","severity":1,"message":"1135","line":2,"column":17,"nodeType":"1035","messageId":"1036","endLine":2,"endColumn":27},{"ruleId":"1033","severity":1,"message":"1109","line":2,"column":29,"nodeType":"1035","messageId":"1036","endLine":2,"endColumn":34},{"ruleId":"1056","severity":1,"message":"1136","line":29,"column":7,"nodeType":"1058","endLine":29,"endColumn":13,"suggestions":"1137"},{"ruleId":"1033","severity":1,"message":"1138","line":20,"column":11,"nodeType":"1035","messageId":"1036","endLine":20,"endColumn":15},{"ruleId":"1033","severity":1,"message":"1138","line":20,"column":11,"nodeType":"1035","messageId":"1036","endLine":20,"endColumn":15},{"ruleId":"1033","severity":1,"message":"1138","line":20,"column":11,"nodeType":"1035","messageId":"1036","endLine":20,"endColumn":15},{"ruleId":"1033","severity":1,"message":"1139","line":3,"column":8,"nodeType":"1035","messageId":"1036","endLine":3,"endColumn":18},{"ruleId":"1056","severity":1,"message":"1072","line":36,"column":6,"nodeType":"1058","endLine":36,"endColumn":42,"suggestions":"1140"},{"ruleId":"1033","severity":1,"message":"1141","line":8,"column":10,"nodeType":"1035","messageId":"1036","endLine":8,"endColumn":24},{"ruleId":"1033","severity":1,"message":"1142","line":47,"column":16,"nodeType":"1035","messageId":"1036","endLine":47,"endColumn":25},{"ruleId":"1033","severity":1,"message":"1143","line":48,"column":8,"nodeType":"1035","messageId":"1036","endLine":48,"endColumn":24},{"ruleId":"1056","severity":1,"message":"1144","line":75,"column":6,"nodeType":"1058","endLine":75,"endColumn":8,"suggestions":"1145"},{"ruleId":"1056","severity":1,"message":"1146","line":148,"column":6,"nodeType":"1058","endLine":148,"endColumn":20,"suggestions":"1147"},{"ruleId":"1056","severity":1,"message":"1148","line":178,"column":6,"nodeType":"1058","endLine":178,"endColumn":30,"suggestions":"1149"},{"ruleId":"1033","severity":1,"message":"1150","line":1,"column":17,"nodeType":"1035","messageId":"1036","endLine":1,"endColumn":26},{"ruleId":"1033","severity":1,"message":"1128","line":1,"column":17,"nodeType":"1035","messageId":"1036","endLine":1,"endColumn":26},{"ruleId":"1033","severity":1,"message":"1128","line":1,"column":17,"nodeType":"1035","messageId":"1036","endLine":1,"endColumn":26},{"ruleId":"1033","severity":1,"message":"1128","line":1,"column":17,"nodeType":"1035","messageId":"1036","endLine":1,"endColumn":26},{"ruleId":"1033","severity":1,"message":"1120","line":5,"column":7,"nodeType":"1035","messageId":"1036","endLine":5,"endColumn":13},{"ruleId":"1033","severity":1,"message":"1121","line":6,"column":7,"nodeType":"1035","messageId":"1036","endLine":6,"endColumn":13},{"ruleId":"1033","severity":1,"message":"1110","line":2,"column":10,"nodeType":"1035","messageId":"1036","endLine":2,"endColumn":15},{"ruleId":"1033","severity":1,"message":"1135","line":2,"column":17,"nodeType":"1035","messageId":"1036","endLine":2,"endColumn":27},{"ruleId":"1033","severity":1,"message":"1109","line":2,"column":29,"nodeType":"1035","messageId":"1036","endLine":2,"endColumn":34},{"ruleId":"1056","severity":1,"message":"1136","line":28,"column":7,"nodeType":"1058","endLine":28,"endColumn":13,"suggestions":"1151"},{"ruleId":"1029","replacedBy":"1152"},{"ruleId":"1031","replacedBy":"1153"},{"ruleId":"1154","severity":1,"message":"1155","line":37,"column":16,"nodeType":"1156","messageId":"1157","endLine":37,"endColumn":27},{"ruleId":"1154","severity":1,"message":"1155","line":48,"column":16,"nodeType":"1156","messageId":"1157","endLine":48,"endColumn":27},{"ruleId":"1111","severity":1,"message":"1112","line":41,"column":14,"nodeType":"1046","endLine":41,"endColumn":61},{"ruleId":"1033","severity":1,"message":"1150","line":1,"column":37,"nodeType":"1035","messageId":"1036","endLine":1,"endColumn":46},{"ruleId":"1033","severity":1,"message":"1158","line":14,"column":20,"nodeType":"1035","messageId":"1036","endLine":14,"endColumn":33},{"ruleId":"1033","severity":1,"message":"1074","line":32,"column":9,"nodeType":"1035","messageId":"1036","endLine":32,"endColumn":17},{"ruleId":"1067","severity":1,"message":"1068","line":64,"column":57,"nodeType":"1069","messageId":"1070","endLine":64,"endColumn":58},{"ruleId":"1056","severity":1,"message":"1072","line":33,"column":6,"nodeType":"1058","endLine":33,"endColumn":40,"suggestions":"1159"},{"ruleId":"1033","severity":1,"message":"1160","line":35,"column":9,"nodeType":"1035","messageId":"1036","endLine":35,"endColumn":26},{"ruleId":"1033","severity":1,"message":"1161","line":46,"column":9,"nodeType":"1035","messageId":"1036","endLine":46,"endColumn":19},{"ruleId":"1033","severity":1,"message":"1150","line":1,"column":37,"nodeType":"1035","messageId":"1036","endLine":1,"endColumn":46},{"ruleId":"1067","severity":1,"message":"1068","line":49,"column":60,"nodeType":"1069","messageId":"1070","endLine":49,"endColumn":61},{"ruleId":"1033","severity":1,"message":"1162","line":13,"column":8,"nodeType":"1035","messageId":"1036","endLine":13,"endColumn":23},{"ruleId":"1163","severity":1,"message":"1164","line":26,"column":25,"nodeType":"1165","messageId":"1157","endLine":26,"endColumn":27},{"ruleId":"1056","severity":1,"message":"1072","line":34,"column":6,"nodeType":"1058","endLine":34,"endColumn":46,"suggestions":"1166"},{"ruleId":"1033","severity":1,"message":"1150","line":1,"column":37,"nodeType":"1035","messageId":"1036","endLine":1,"endColumn":46},{"ruleId":"1033","severity":1,"message":"1043","line":6,"column":10,"nodeType":"1035","messageId":"1036","endLine":6,"endColumn":14},{"ruleId":"1033","severity":1,"message":"1167","line":11,"column":8,"nodeType":"1035","messageId":"1036","endLine":11,"endColumn":19},{"ruleId":"1033","severity":1,"message":"1168","line":11,"column":21,"nodeType":"1035","messageId":"1036","endLine":11,"endColumn":35},{"ruleId":"1033","severity":1,"message":"1169","line":14,"column":21,"nodeType":"1035","messageId":"1036","endLine":14,"endColumn":32},{"ruleId":"1163","severity":1,"message":"1164","line":28,"column":19,"nodeType":"1165","messageId":"1157","endLine":28,"endColumn":21},{"ruleId":"1067","severity":1,"message":"1068","line":60,"column":56,"nodeType":"1069","messageId":"1070","endLine":60,"endColumn":57},{"ruleId":"1033","severity":1,"message":"1167","line":14,"column":8,"nodeType":"1035","messageId":"1036","endLine":14,"endColumn":19},{"ruleId":"1163","severity":1,"message":"1164","line":27,"column":25,"nodeType":"1165","messageId":"1157","endLine":27,"endColumn":27},{"ruleId":"1056","severity":1,"message":"1072","line":35,"column":6,"nodeType":"1058","endLine":35,"endColumn":42,"suggestions":"1170"},{"ruleId":"1033","severity":1,"message":"1150","line":1,"column":37,"nodeType":"1035","messageId":"1036","endLine":1,"endColumn":46},{"ruleId":"1033","severity":1,"message":"1171","line":10,"column":8,"nodeType":"1035","messageId":"1036","endLine":10,"endColumn":26},{"ruleId":"1033","severity":1,"message":"1172","line":10,"column":28,"nodeType":"1035","messageId":"1036","endLine":10,"endColumn":49},{"ruleId":"1033","severity":1,"message":"1173","line":12,"column":28,"nodeType":"1035","messageId":"1036","endLine":12,"endColumn":46},{"ruleId":"1067","severity":1,"message":"1068","line":60,"column":63,"nodeType":"1069","messageId":"1070","endLine":60,"endColumn":64},{"ruleId":"1056","severity":1,"message":"1072","line":27,"column":6,"nodeType":"1058","endLine":27,"endColumn":49,"suggestions":"1174"},{"ruleId":"1033","severity":1,"message":"1150","line":1,"column":37,"nodeType":"1035","messageId":"1036","endLine":1,"endColumn":46},{"ruleId":"1033","severity":1,"message":"1175","line":10,"column":8,"nodeType":"1035","messageId":"1036","endLine":10,"endColumn":31},{"ruleId":"1033","severity":1,"message":"1176","line":10,"column":33,"nodeType":"1035","messageId":"1036","endLine":10,"endColumn":59},{"ruleId":"1033","severity":1,"message":"1177","line":13,"column":33,"nodeType":"1035","messageId":"1036","endLine":13,"endColumn":56},{"ruleId":"1067","severity":1,"message":"1068","line":63,"column":68,"nodeType":"1069","messageId":"1070","endLine":63,"endColumn":69},{"ruleId":"1033","severity":1,"message":"1175","line":19,"column":8,"nodeType":"1035","messageId":"1036","endLine":19,"endColumn":31},{"ruleId":"1056","severity":1,"message":"1072","line":40,"column":6,"nodeType":"1058","endLine":40,"endColumn":54,"suggestions":"1178"},"no-native-reassign",["1179"],"no-negated-in-lhs",["1180"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Nav' is defined but never used.","'Footer' is defined but never used.","'AppProfile' is defined but never used.","'ProfileSidebar' is defined but never used.","'showProfile' is assigned a value but never used.","'setShowProfile' is assigned a value but never used.","'Link' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'loading' is assigned a value but never used.","'Row' is defined but never used.","'ProgressBar' is defined but never used.","'Tab' is defined but never used.","'productList' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dateToday' and 'todaysOrder'. Either include them or remove the dependency array.","ArrayExpression",["1181"],"React Hook useEffect has missing dependencies: 'dateTomorrow' and 'preorderProducts'. Either include them or remove the dependency array.",["1182"],"'setOrderValues' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'location.state'. Either include it or remove the dependency array.",["1183"],"React Hook useEffect has a missing dependency: 'filteredOrders'. Either include it or remove the dependency array.",["1184"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'setCurrentId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'initialFieldValues'. Either include it or remove the dependency array.",["1185"],"'onDelete' is assigned a value but never used.","'PageTitle' is defined but never used.","'profile01' is defined but never used.","'profile02' is defined but never used.","'profile03' is defined but never used.","'profile04' is defined but never used.","'profile05' is defined but never used.","'profile06' is defined but never used.","'profile07' is defined but never used.","'Dropdown' is defined but never used.","'Button' is defined but never used.","'Modal' is defined but never used.","'SRLWrapper' is defined but never used.","'sendMessage' is assigned a value but never used.","'setSendMessage' is assigned a value but never used.","'replay' is assigned a value but never used.","'options' is assigned a value but never used.","'setSquare' is assigned a value but never used.","'setRounded' is assigned a value but never used.","'setInlineNotifications' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'JobieNav' is defined but never used.","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'carousel4' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Tabs' is defined but never used.","'Fragment' is defined but never used.","'Badge' is defined but never used.","'Table' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Suspense' is defined but never used.","'ApexPie' is assigned a value but never used.","'SparklinesCurve' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'COLORS' is assigned a value but never used.","'colors' is assigned a value but never used.","'components' is defined but never used.","'groupedOptions' is defined but never used.","'groupStyles' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component ColorPicker_ must be in PascalCase or SCREAMING_SNAKE_CASE","'BarChart' is defined but never used.","'Component' is defined but never used.","'error' is assigned a value but never used.","'setToggle' is assigned a value but never used.","no-sparse-arrays","Unexpected comma in middle of array.","unexpectedSparseArray",["1186"],"'Pagination' is defined but never used.","React Hook useEffect has a missing dependency: 'chackboxFun'. Either include it or remove the dependency array.",["1187"],"'demo' is assigned a value but never used.","'firebaseDb' is defined but never used.",["1188"],"'createMuiTheme' is defined but never used.","'setResult' is assigned a value but never used.","'currentProductId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.order' and 'props.userId'. Either include them or remove the dependency array. If 'setValues' needs the current value of 'props.userId', you can also switch to useReducer instead of useState and read 'props.userId' in the reducer.",["1189"],"React Hook useEffect has a missing dependency: 'values.deliveryFee'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setValues' needs the current value of 'values.deliveryFee'.",["1190"],"React Hook useEffect has a missing dependency: 'values'. Either include it or remove the dependency array.",["1191"],"'useEffect' is defined but never used.",["1192"],["1179"],["1180"],"no-dupe-keys","Duplicate key 'borderWidth'.","ObjectExpression","unexpected","'setSearchTerm' is assigned a value but never used.",["1193"],"'handleInputChange' is assigned a value but never used.","'readImages' is assigned a value but never used.","'categoryObjects' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression",["1194"],"'unitObjects' is assigned a value but never used.","'setUnitObjects' is assigned a value but never used.","'setUnitList' is assigned a value but never used.",["1195"],"'deliveryFeeObjects' is assigned a value but never used.","'setDeliveryFeeObjects' is assigned a value but never used.","'setDeliveryFeeList' is assigned a value but never used.",["1196"],"'deliveryLocationObjects' is assigned a value but never used.","'setDeliveryLocationObjects' is assigned a value but never used.","'setDeliveryLocationList' is assigned a value but never used.",["1197"],"no-global-assign","no-unsafe-negation",{"desc":"1198","fix":"1199"},{"desc":"1200","fix":"1201"},{"desc":"1202","fix":"1203"},{"desc":"1204","fix":"1205"},{"desc":"1206","fix":"1207"},{"desc":"1208","fix":"1209"},{"desc":"1210","fix":"1211"},{"desc":"1212","fix":"1213"},{"desc":"1214","fix":"1215"},{"desc":"1216","fix":"1217"},{"desc":"1218","fix":"1219"},{"desc":"1210","fix":"1220"},{"desc":"1208","fix":"1221"},{"desc":"1222","fix":"1223"},{"desc":"1224","fix":"1225"},{"desc":"1226","fix":"1227"},{"desc":"1228","fix":"1229"},"Update the dependencies array to be: [dateToday, orderList, todaysOrder]",{"range":"1230","text":"1231"},"Update the dependencies array to be: [dateTomorrow, orderList, preorderProducts]",{"range":"1232","text":"1233"},"Update the dependencies array to be: [location.state]",{"range":"1234","text":"1235"},"Update the dependencies array to be: [orderList, filterStatus, filteredOrders]",{"range":"1236","text":"1237"},"Update the dependencies array to be: [initialFieldValues, props.currentId, props.customerList]",{"range":"1238","text":"1239"},"Update the dependencies array to be: [initialFieldValues, props.currentId, props.riderList]",{"range":"1240","text":"1241"},"Update the dependencies array to be: [chackboxFun, test]",{"range":"1242","text":"1243"},"Update the dependencies array to be: [initialFieldValues, props.currentId, props.productList]",{"range":"1244","text":"1245"},"Update the dependencies array to be: [props.order, props.userId]",{"range":"1246","text":"1247"},"Update the dependencies array to be: [values.deliveryFee, values.total]",{"range":"1248","text":"1249"},"Update the dependencies array to be: [selectedDeliveryOption, values]",{"range":"1250","text":"1251"},{"range":"1252","text":"1243"},{"range":"1253","text":"1241"},"Update the dependencies array to be: [props.currentId, props.categoryObjects, initialFieldValues]",{"range":"1254","text":"1255"},"Update the dependencies array to be: [initialFieldValues, props.currentId, props.unitObjects]",{"range":"1256","text":"1257"},"Update the dependencies array to be: [initialFieldValues, props.currentId, props.deliveryFeeObjects]",{"range":"1258","text":"1259"},"Update the dependencies array to be: [initialFieldValues, props.currentId, props.deliveryLocationObjects]",{"range":"1260","text":"1261"},[1489,1500],"[dateToday, orderList, todaysOrder]",[2278,2289],"[dateTomorrow, orderList, preorderProducts]",[1592,1594],"[location.state]",[3245,3270],"[orderList, filterStatus, filteredOrders]",[956,993],"[initialFieldValues, props.currentId, props.customerList]",[773,807],"[initialFieldValues, props.currentId, props.riderList]",[867,873],"[chackboxFun, test]",[901,937],"[initialFieldValues, props.currentId, props.productList]",[2301,2303],"[props.order, props.userId]",[4396,4410],"[values.deliveryFee, values.total]",[5406,5430],"[selectedDeliveryOption, values]",[812,818],[779,813],[868,908],"[props.currentId, props.categoryObjects, initialFieldValues]",[858,894],"[initialFieldValues, props.currentId, props.unitObjects]",[764,807],"[initialFieldValues, props.currentId, props.deliveryFeeObjects]",[1125,1173],"[initialFieldValues, props.currentId, props.deliveryLocationObjects]"]